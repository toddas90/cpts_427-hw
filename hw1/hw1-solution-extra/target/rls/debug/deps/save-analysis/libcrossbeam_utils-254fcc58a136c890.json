{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6","program":"/home/andrew/.rustup/toolchains/1.51.0-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","crossbeam_utils","--edition=2018","/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=254fcc58a136c890","-C","extra-filename=-254fcc58a136c890","--out-dir","/home/andrew/Workspace/spring_2022/cpts_427-hw/hw1/hw1-solution-extra/target/rls/debug/deps","-L","dependency=/home/andrew/Workspace/spring_2022/cpts_427-hw/hw1/hw1-solution-extra/target/rls/debug/deps","--extern","cfg_if=/home/andrew/Workspace/spring_2022/cpts_427-hw/hw1/hw1-solution-extra/target/rls/debug/deps/libcfg_if-f4ca369f7d863b9e.rmeta","--extern","lazy_static=/home/andrew/Workspace/spring_2022/cpts_427-hw/hw1/hw1-solution-extra/target/rls/debug/deps/liblazy_static-add60b10b58fc28f.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/andrew/.rustup/toolchains/1.51.0-x86_64-unknown-linux-gnu"],"output":"/home/andrew/Workspace/spring_2022/cpts_427-hw/hw1/hw1-solution-extra/target/rls/debug/deps/libcrossbeam_utils-254fcc58a136c890.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_utils","disambiguator":[4446908749330738246,3119500440040884668]},"crate_root":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src","external_crates":[{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8363989277313806732,13723635736355452392]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5755871685339259462,14524450630327408145]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6095990061662150844,17257511342173735843]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13534664360101634333,15955848543282431589]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2576337310504802494,7533979301291365915]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5114841071718684731,1147767992231475921]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14891534813972024149,13771932312545804845]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[904103305253144465,12292134317329413205]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[16314738562439622889,10306027504818249940]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15843431334828571128,5286674190927770495]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17405625562201081622,10275716470817790619]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[11445955052790897216,5818918092474945162]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[14649202847011715524,6782578055671422766]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[7180995537586922820,7051902941398327739]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[9612987991627917998,10712864082221106628]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[17826240478786457486,5527832178130695808]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6600453779972510942,5977101663316138555]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","num":18,"id":{"name":"cfg_if","disambiguator":[1155024563974712189,5296233732488635092]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","num":19,"id":{"name":"lazy_static","disambiguator":[10949373214698449189,8475297847177132521]}}],"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":0,"byte_end":3347,"line_start":1,"line_end":104,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":39},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/mod.rs","byte_start":4427,"byte_end":4437,"line_start":31,"line_end":31,"column_start":28,"column_end":38},"alias_span":null,"name":"AtomicCell","value":"","parent":{"krate":0,"index":25}},{"kind":"Use","ref_id":{"krate":0,"index":114},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/mod.rs","byte_start":4462,"byte_end":4475,"line_start":32,"line_end":32,"column_start":24,"column_end":37},"alias_span":null,"name":"AtomicConsume","value":"","parent":{"krate":0,"index":25}},{"kind":"Use","ref_id":{"krate":0,"index":298},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":3132,"byte_end":3143,"line_start":90,"line_end":90,"column_start":30,"column_end":41},"alias_span":null,"name":"CachePadded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":157},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":3183,"byte_end":3190,"line_start":93,"line_end":93,"column_start":25,"column_end":32},"alias_span":null,"name":"Backoff","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":337},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/mod.rs","byte_start":10011167,"byte_end":10011173,"line_start":12,"line_end":12,"column_start":24,"column_end":30},"alias_span":null,"name":"Parker","value":"","parent":{"krate":0,"index":324}},{"kind":"Use","ref_id":{"krate":0,"index":353},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/mod.rs","byte_start":10011175,"byte_end":10011183,"line_start":12,"line_end":12,"column_start":32,"column_end":40},"alias_span":null,"name":"Unparker","value":"","parent":{"krate":0,"index":324}},{"kind":"Use","ref_id":{"krate":0,"index":406},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/mod.rs","byte_start":10011243,"byte_end":10011254,"line_start":14,"line_end":14,"column_start":30,"column_end":41},"alias_span":null,"name":"ShardedLock","value":"","parent":{"krate":0,"index":324}},{"kind":"Use","ref_id":{"krate":0,"index":444},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/mod.rs","byte_start":10011256,"byte_end":10011276,"line_start":14,"line_end":14,"column_start":43,"column_end":63},"alias_span":null,"name":"ShardedLockReadGuard","value":"","parent":{"krate":0,"index":324}},{"kind":"Use","ref_id":{"krate":0,"index":462},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/mod.rs","byte_start":10011278,"byte_end":10011299,"line_start":14,"line_end":14,"column_start":65,"column_end":86},"alias_span":null,"name":"ShardedLockWriteGuard","value":"","parent":{"krate":0,"index":324}},{"kind":"Use","ref_id":{"krate":0,"index":502},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/mod.rs","byte_start":10011328,"byte_end":10011337,"line_start":15,"line_end":15,"column_start":27,"column_end":36},"alias_span":null,"name":"WaitGroup","value":"","parent":{"krate":0,"index":324}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":0,"byte_end":3347,"line_start":1,"line_end":104,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":25},{"krate":0,"index":124},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":324},{"krate":0,"index":526}],"decl_id":null,"docs":" Miscellaneous tools for concurrent programming.","sig":null,"attributes":[{"value":"/ Miscellaneous tools for concurrent programming.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":0,"byte_end":51,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":52,"byte_end":55,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Atomics","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":56,"byte_end":70,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":71,"byte_end":74,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ * [`AtomicCell`], a thread-safe mutable memory location.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":75,"byte_end":135,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"/ * [`AtomicConsume`], for reading from primitive atomic types with \"consume\" ordering.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":136,"byte_end":225,"line_start":6,"line_end":6,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":226,"byte_end":229,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ## Thread synchronization","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":230,"byte_end":259,"line_start":8,"line_end":8,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":260,"byte_end":263,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`Parker`], a thread parking primitive.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":264,"byte_end":309,"line_start":10,"line_end":10,"column_start":1,"column_end":46}},{"value":"/ * [`ShardedLock`], a sharded reader-writer lock with fast concurrent reads.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":310,"byte_end":389,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ * [`WaitGroup`], for synchronizing the beginning or end of some computation.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":390,"byte_end":470,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":471,"byte_end":474,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ## Utilities","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":475,"byte_end":491,"line_start":14,"line_end":14,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":492,"byte_end":495,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * [`Backoff`], for exponential backoff in spin loops.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":496,"byte_end":553,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/ * [`CachePadded`], for padding and aligning a value to the length of a cache line.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":554,"byte_end":640,"line_start":17,"line_end":17,"column_start":1,"column_end":87}},{"value":"/ * [`scope`], for spawning threads that borrow local variables from the stack.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":641,"byte_end":722,"line_start":18,"line_end":18,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":723,"byte_end":726,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`AtomicCell`]: atomic::AtomicCell","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":727,"byte_end":765,"line_start":20,"line_end":20,"column_start":1,"column_end":39}},{"value":"/ [`AtomicConsume`]: atomic::AtomicConsume","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":766,"byte_end":810,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/ [`Parker`]: sync::Parker","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":811,"byte_end":839,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ [`ShardedLock`]: sync::ShardedLock","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":840,"byte_end":878,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/ [`WaitGroup`]: sync::WaitGroup","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":879,"byte_end":913,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/ [`scope`]: thread::scope","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":914,"byte_end":942,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":1103,"byte_end":1209,"line_start":34,"line_end":39,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":25},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"atomic","qualname":"::atomic","value":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/mod.rs","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":26},{"krate":0,"index":112},{"krate":0,"index":122},{"krate":0,"index":123}],"decl_id":null,"docs":" Atomic types.","sig":null,"attributes":[{"value":"/ Atomic types.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/mod.rs","byte_start":3349,"byte_end":3366,"line_start":1,"line_end":1,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/mod.rs","byte_start":3367,"byte_end":3370,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ * [`AtomicCell`], a thread-safe mutable memory location.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/mod.rs","byte_start":3371,"byte_end":3431,"line_start":3,"line_end":3,"column_start":1,"column_end":61}},{"value":"/ * [`AtomicConsume`], for reading from primitive atomic types with \"consume\" ordering.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/mod.rs","byte_start":3432,"byte_end":3521,"line_start":4,"line_end":4,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":39},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":5646,"byte_end":5656,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"name":"AtomicCell","qualname":"::atomic::atomic_cell::AtomicCell","value":"AtomicCell {  }","parent":null,"children":[{"krate":0,"index":41}],"decl_id":null,"docs":" A thread-safe mutable memory location.","sig":null,"attributes":[{"value":"/ A thread-safe mutable memory location.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":4925,"byte_end":4967,"line_start":20,"line_end":20,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":4968,"byte_end":4971,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This type is equivalent to [`Cell`], except it can also be shared among multiple threads.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":4972,"byte_end":5065,"line_start":22,"line_end":22,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":5066,"byte_end":5069,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Operations on `AtomicCell`s use atomic instructions whenever possible, and synchronize using","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":5070,"byte_end":5166,"line_start":24,"line_end":24,"column_start":1,"column_end":97}},{"value":"/ global locks otherwise. You can call [`AtomicCell::<T>::is_lock_free()`] to check whether","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":5167,"byte_end":5260,"line_start":25,"line_end":25,"column_start":1,"column_end":94}},{"value":"/ atomic instructions or locks will be used.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":5261,"byte_end":5307,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":5308,"byte_end":5311,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Atomic loads use the [`Acquire`] ordering and atomic stores use the [`Release`] ordering.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":5312,"byte_end":5405,"line_start":28,"line_end":28,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":5406,"byte_end":5409,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`Cell`]: std::cell::Cell","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":5410,"byte_end":5439,"line_start":30,"line_end":30,"column_start":1,"column_end":30}},{"value":"/ [`AtomicCell::<T>::is_lock_free()`]: AtomicCell::is_lock_free","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":5440,"byte_end":5505,"line_start":31,"line_end":31,"column_start":1,"column_end":66}},{"value":"/ [`Acquire`]: std::sync::atomic::Ordering::Acquire","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":5506,"byte_end":5559,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ [`Release`]: std::sync::atomic::Ordering::Release","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":5560,"byte_end":5613,"line_start":33,"line_end":33,"column_start":1,"column_end":54}},{"value":"repr(transparent)","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":5614,"byte_end":5634,"line_start":34,"line_end":34,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6422,"byte_end":6425,"line_start":62,"line_end":62,"column_start":18,"column_end":21},"name":"new","qualname":"<AtomicCell<T>>::new","value":"pub const fn new(T) -> AtomicCell<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new atomic cell initialized with `val`.","sig":null,"attributes":[{"value":"/ Creates a new atomic cell initialized with `val`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6199,"byte_end":6252,"line_start":53,"line_end":53,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6257,"byte_end":6260,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6265,"byte_end":6279,"line_start":55,"line_end":55,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6284,"byte_end":6287,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6292,"byte_end":6299,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6304,"byte_end":6348,"line_start":58,"line_end":58,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6353,"byte_end":6356,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6361,"byte_end":6392,"line_start":60,"line_end":60,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6397,"byte_end":6404,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6822,"byte_end":6832,"line_start":80,"line_end":80,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AtomicCell<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the atomic and returns the contained value.","sig":null,"attributes":[{"value":"/ Consumes the atomic and returns the contained value.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6536,"byte_end":6592,"line_start":68,"line_end":68,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6597,"byte_end":6600,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6605,"byte_end":6619,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6624,"byte_end":6627,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6632,"byte_end":6639,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6644,"byte_end":6688,"line_start":73,"line_end":73,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6693,"byte_end":6696,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6701,"byte_end":6732,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/ let v = a.into_inner();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6737,"byte_end":6764,"line_start":76,"line_end":76,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6769,"byte_end":6772,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v, 7);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6777,"byte_end":6798,"line_start":78,"line_end":78,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6803,"byte_end":6810,"line_start":79,"line_end":79,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":8113,"byte_end":8125,"line_start":112,"line_end":112,"column_start":18,"column_end":30},"name":"is_lock_free","qualname":"<AtomicCell<T>>::is_lock_free","value":"pub const fn is_lock_free() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if operations on values of this type are lock-free.","sig":null,"attributes":[{"value":"/ Returns `true` if operations on values of this type are lock-free.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6889,"byte_end":6959,"line_start":84,"line_end":84,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6964,"byte_end":6967,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ If the compiler or the platform doesn't support the necessary atomic instructions,","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6972,"byte_end":7058,"line_start":86,"line_end":86,"column_start":5,"column_end":91}},{"value":"/ `AtomicCell<T>` will use global locks for every potentially concurrent atomic operation.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":7063,"byte_end":7155,"line_start":87,"line_end":87,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":7160,"byte_end":7163,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":7168,"byte_end":7182,"line_start":89,"line_end":89,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":7187,"byte_end":7190,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":7195,"byte_end":7202,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":7207,"byte_end":7251,"line_start":92,"line_end":92,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":7256,"byte_end":7259,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ // This type is internally represented as `AtomicUsize` so we can just use atomic","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":7264,"byte_end":7349,"line_start":94,"line_end":94,"column_start":5,"column_end":90}},{"value":"/ // operations provided by it.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":7354,"byte_end":7387,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(AtomicCell::<usize>::is_lock_free(), true);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":7392,"byte_end":7450,"line_start":96,"line_end":96,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":7455,"byte_end":7458,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ // A wrapper struct around `isize`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":7463,"byte_end":7502,"line_start":98,"line_end":98,"column_start":5,"column_end":44}},{"value":"/ struct Foo {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":7507,"byte_end":7523,"line_start":99,"line_end":99,"column_start":5,"column_end":21}},{"value":"/     bar: isize,","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":7528,"byte_end":7547,"line_start":100,"line_end":100,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":7552,"byte_end":7557,"line_start":101,"line_end":101,"column_start":5,"column_end":10}},{"value":"/ // `AtomicCell<Foo>` will be internally represented as `AtomicIsize`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":7562,"byte_end":7635,"line_start":102,"line_end":102,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(AtomicCell::<Foo>::is_lock_free(), true);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":7640,"byte_end":7696,"line_start":103,"line_end":103,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":7701,"byte_end":7704,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ // Operations on zero-sized types are always lock-free.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":7709,"byte_end":7768,"line_start":105,"line_end":105,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(AtomicCell::<()>::is_lock_free(), true);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":7773,"byte_end":7828,"line_start":106,"line_end":106,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":7833,"byte_end":7836,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ // Very large types cannot be represented as any of the standard atomic types, so atomic","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":7841,"byte_end":7933,"line_start":108,"line_end":108,"column_start":5,"column_end":97}},{"value":"/ // operations on them will have to use global locks for synchronization.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":7938,"byte_end":8014,"line_start":109,"line_end":109,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(AtomicCell::<[u8; 1000]>::is_lock_free(), false);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":8019,"byte_end":8083,"line_start":110,"line_end":110,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":8088,"byte_end":8095,"line_start":111,"line_end":111,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":8480,"byte_end":8485,"line_start":129,"line_end":129,"column_start":12,"column_end":17},"name":"store","qualname":"<AtomicCell<T>>::store","value":"pub fn store(&Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Stores `val` into the atomic cell.","sig":null,"attributes":[{"value":"/ Stores `val` into the atomic cell.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":8184,"byte_end":8222,"line_start":116,"line_end":116,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":8227,"byte_end":8230,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":8235,"byte_end":8249,"line_start":118,"line_end":118,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":8254,"byte_end":8257,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":8262,"byte_end":8269,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":8274,"byte_end":8318,"line_start":121,"line_end":121,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":8323,"byte_end":8326,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":8331,"byte_end":8362,"line_start":123,"line_end":123,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":8367,"byte_end":8370,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.load(), 7);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":8375,"byte_end":8403,"line_start":125,"line_end":125,"column_start":5,"column_end":33}},{"value":"/ a.store(8);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":8408,"byte_end":8423,"line_start":126,"line_end":126,"column_start":5,"column_end":20}},{"value":"/ assert_eq!(a.load(), 8);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":8428,"byte_end":8456,"line_start":127,"line_end":127,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":8461,"byte_end":8468,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9040,"byte_end":9044,"line_start":152,"line_end":152,"column_start":12,"column_end":16},"name":"swap","qualname":"<AtomicCell<T>>::swap","value":"pub fn swap(&Self, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Stores `val` into the atomic cell and returns the previous value.","sig":null,"attributes":[{"value":"/ Stores `val` into the atomic cell and returns the previous value.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":8699,"byte_end":8768,"line_start":139,"line_end":139,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":8773,"byte_end":8776,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":8781,"byte_end":8795,"line_start":141,"line_end":141,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":8800,"byte_end":8803,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":8808,"byte_end":8815,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":8820,"byte_end":8864,"line_start":144,"line_end":144,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":8869,"byte_end":8872,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":8877,"byte_end":8908,"line_start":146,"line_end":146,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":8913,"byte_end":8916,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.load(), 7);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":8921,"byte_end":8949,"line_start":148,"line_end":148,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(a.swap(8), 7);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":8954,"byte_end":8983,"line_start":149,"line_end":149,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(a.load(), 8);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":8988,"byte_end":9016,"line_start":150,"line_end":150,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9021,"byte_end":9028,"line_start":151,"line_end":151,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9451,"byte_end":9457,"line_start":170,"line_end":170,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<AtomicCell<T>>::as_ptr","value":"pub fn as_ptr(&Self) -> *mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw pointer to the underlying data in this atomic cell.","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the underlying data in this atomic cell.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9166,"byte_end":9235,"line_start":158,"line_end":158,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9240,"byte_end":9243,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9248,"byte_end":9262,"line_start":160,"line_end":160,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9267,"byte_end":9270,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9275,"byte_end":9282,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9287,"byte_end":9331,"line_start":163,"line_end":163,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9336,"byte_end":9339,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(5);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9344,"byte_end":9375,"line_start":165,"line_end":165,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9380,"byte_end":9383,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ let ptr = a.as_ptr();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9388,"byte_end":9413,"line_start":167,"line_end":167,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9418,"byte_end":9425,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9430,"byte_end":9439,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9899,"byte_end":9903,"line_start":189,"line_end":189,"column_start":12,"column_end":16},"name":"take","qualname":"<AtomicCell<T>>::take","value":"pub fn take(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Takes the value of the atomic cell, leaving `Default::default()` in its place.","sig":null,"attributes":[{"value":"/ Takes the value of the atomic cell, leaving `Default::default()` in its place.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9548,"byte_end":9630,"line_start":176,"line_end":176,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9635,"byte_end":9638,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9643,"byte_end":9657,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9662,"byte_end":9665,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9670,"byte_end":9677,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9682,"byte_end":9726,"line_start":181,"line_end":181,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9731,"byte_end":9734,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(5);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9739,"byte_end":9770,"line_start":183,"line_end":183,"column_start":5,"column_end":36}},{"value":"/ let five = a.take();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9775,"byte_end":9799,"line_start":184,"line_end":184,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9804,"byte_end":9807,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(five, 5);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9812,"byte_end":9836,"line_start":186,"line_end":186,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(a.into_inner(), 0);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9841,"byte_end":9875,"line_start":187,"line_end":187,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9880,"byte_end":9887,"line_start":188,"line_end":188,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":10243,"byte_end":10247,"line_start":206,"line_end":206,"column_start":12,"column_end":16},"name":"load","qualname":"<AtomicCell<T>>::load","value":"pub fn load(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Loads a value from the atomic cell.","sig":null,"attributes":[{"value":"/ Loads a value from the atomic cell.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9999,"byte_end":10038,"line_start":195,"line_end":195,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":10043,"byte_end":10046,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":10051,"byte_end":10065,"line_start":197,"line_end":197,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":10070,"byte_end":10073,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":10078,"byte_end":10085,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":10090,"byte_end":10134,"line_start":200,"line_end":200,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":10139,"byte_end":10142,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":10147,"byte_end":10178,"line_start":202,"line_end":202,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":10183,"byte_end":10186,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.load(), 7);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":10191,"byte_end":10219,"line_start":204,"line_end":204,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":10224,"byte_end":10231,"line_start":205,"line_end":205,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":11046,"byte_end":11062,"line_start":233,"line_end":233,"column_start":12,"column_end":28},"name":"compare_and_swap","qualname":"<AtomicCell<T>>::compare_and_swap","value":"pub fn compare_and_swap(&Self, T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" If the current value equals `current`, stores `new` into the atomic cell.","sig":null,"attributes":[{"value":"/ If the current value equals `current`, stores `new` into the atomic cell.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":10359,"byte_end":10436,"line_start":212,"line_end":212,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":10441,"byte_end":10444,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ The return value is always the previous value. If it is equal to `current`, then the value","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":10449,"byte_end":10543,"line_start":214,"line_end":214,"column_start":5,"column_end":99}},{"value":"/ was updated.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":10548,"byte_end":10564,"line_start":215,"line_end":215,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":10569,"byte_end":10572,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":10577,"byte_end":10591,"line_start":217,"line_end":217,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":10596,"byte_end":10599,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":10604,"byte_end":10611,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":10616,"byte_end":10643,"line_start":220,"line_end":220,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":10648,"byte_end":10692,"line_start":221,"line_end":221,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":10697,"byte_end":10700,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(1);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":10705,"byte_end":10736,"line_start":223,"line_end":223,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":10741,"byte_end":10744,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.compare_and_swap(2, 3), 1);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":10749,"byte_end":10793,"line_start":225,"line_end":225,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(a.load(), 1);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":10798,"byte_end":10826,"line_start":226,"line_end":226,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":10831,"byte_end":10834,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.compare_and_swap(1, 2), 1);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":10839,"byte_end":10883,"line_start":228,"line_end":228,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(a.load(), 2);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":10888,"byte_end":10916,"line_start":229,"line_end":229,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":10921,"byte_end":10928,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"deprecated(note = \"Use `compare_exchange` instead\")","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":10980,"byte_end":11034,"line_start":232,"line_end":232,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":11844,"byte_end":11860,"line_start":258,"line_end":258,"column_start":12,"column_end":28},"name":"compare_exchange","qualname":"<AtomicCell<T>>::compare_exchange","value":"pub fn compare_exchange(&Self, T, T) -> Result<T, T>","parent":null,"children":[],"decl_id":null,"docs":" If the current value equals `current`, stores `new` into the atomic cell.","sig":null,"attributes":[{"value":"/ If the current value equals `current`, stores `new` into the atomic cell.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":11219,"byte_end":11296,"line_start":240,"line_end":240,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":11301,"byte_end":11304,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new value was written and containing","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":11309,"byte_end":11401,"line_start":242,"line_end":242,"column_start":5,"column_end":97}},{"value":"/ the previous value. On success this value is guaranteed to be equal to `current`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":11406,"byte_end":11491,"line_start":243,"line_end":243,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":11496,"byte_end":11499,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":11504,"byte_end":11518,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":11523,"byte_end":11526,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":11531,"byte_end":11538,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":11543,"byte_end":11587,"line_start":248,"line_end":248,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":11592,"byte_end":11595,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(1);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":11600,"byte_end":11631,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":11636,"byte_end":11639,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.compare_exchange(2, 3), Err(1));","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":11644,"byte_end":11693,"line_start":252,"line_end":252,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(a.load(), 1);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":11698,"byte_end":11726,"line_start":253,"line_end":253,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":11731,"byte_end":11734,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.compare_exchange(1, 2), Ok(1));","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":11739,"byte_end":11787,"line_start":255,"line_end":255,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(a.load(), 2);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":11792,"byte_end":11820,"line_start":256,"line_end":256,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":11825,"byte_end":11832,"line_start":257,"line_end":257,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":12856,"byte_end":12868,"line_start":282,"line_end":282,"column_start":12,"column_end":24},"name":"fetch_update","qualname":"<AtomicCell<T>>::fetch_update","value":"pub fn fetch_update<F>(&Self, F) -> Result<T, T> where F: FnMut(T) ->\nOption<T>","parent":null,"children":[],"decl_id":null,"docs":" Fetches the value, and applies a function to it that returns an optional\n new value. Returns a `Result` of `Ok(previous_value)` if the function returned `Some(_)`, else\n `Err(previous_value)`.","sig":null,"attributes":[{"value":"/ Fetches the value, and applies a function to it that returns an optional","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":11997,"byte_end":12073,"line_start":262,"line_end":262,"column_start":5,"column_end":81}},{"value":"/ new value. Returns a `Result` of `Ok(previous_value)` if the function returned `Some(_)`, else","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":12078,"byte_end":12176,"line_start":263,"line_end":263,"column_start":5,"column_end":103}},{"value":"/ `Err(previous_value)`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":12181,"byte_end":12207,"line_start":264,"line_end":264,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":12212,"byte_end":12215,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Note: This may call the function multiple times if the value has been changed from other threads in","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":12220,"byte_end":12323,"line_start":266,"line_end":266,"column_start":5,"column_end":108}},{"value":"/ the meantime, as long as the function returns `Some(_)`, but the function will have been applied","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":12328,"byte_end":12428,"line_start":267,"line_end":267,"column_start":5,"column_end":105}},{"value":"/ only once to the stored value.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":12433,"byte_end":12467,"line_start":268,"line_end":268,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":12472,"byte_end":12475,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":12480,"byte_end":12494,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":12499,"byte_end":12502,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":12507,"byte_end":12518,"line_start":272,"line_end":272,"column_start":5,"column_end":16}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":12523,"byte_end":12567,"line_start":273,"line_end":273,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":12572,"byte_end":12575,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":12580,"byte_end":12611,"line_start":275,"line_end":275,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(a.fetch_update(|_| None), Err(7));","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":12616,"byte_end":12665,"line_start":276,"line_end":276,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(a.fetch_update(|a| Some(a + 1)), Ok(7));","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":12670,"byte_end":12725,"line_start":277,"line_end":277,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.fetch_update(|a| Some(a + 1)), Ok(8));","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":12730,"byte_end":12785,"line_start":278,"line_end":278,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(), 9);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":12790,"byte_end":12818,"line_start":279,"line_end":279,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":12823,"byte_end":12830,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":12835,"byte_end":12844,"line_start":281,"line_end":281,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":23635,"byte_end":23644,"line_start":597,"line_end":597,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<AtomicCell<bool>>::fetch_and","value":"pub fn fetch_and(&Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Applies logical \"and\" to the current value and returns the previous value.","sig":null,"attributes":[{"value":"/ Applies logical \"and\" to the current value and returns the previous value.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":23196,"byte_end":23274,"line_start":581,"line_end":581,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":23279,"byte_end":23282,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":23287,"byte_end":23301,"line_start":583,"line_end":583,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":23306,"byte_end":23309,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":23314,"byte_end":23321,"line_start":585,"line_end":585,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":23326,"byte_end":23370,"line_start":586,"line_end":586,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":23375,"byte_end":23378,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(true);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":23383,"byte_end":23417,"line_start":588,"line_end":588,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":23422,"byte_end":23425,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_and(true), true);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":23430,"byte_end":23470,"line_start":590,"line_end":590,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(a.load(), true);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":23475,"byte_end":23506,"line_start":591,"line_end":591,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":23511,"byte_end":23514,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_and(false), true);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":23519,"byte_end":23560,"line_start":593,"line_end":593,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.load(), false);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":23565,"byte_end":23597,"line_start":594,"line_end":594,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":23602,"byte_end":23609,"line_start":595,"line_end":595,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":23614,"byte_end":23623,"line_start":596,"line_end":596,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":24236,"byte_end":24244,"line_start":618,"line_end":618,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<AtomicCell<bool>>::fetch_or","value":"pub fn fetch_or(&Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Applies logical \"or\" to the current value and returns the previous value.","sig":null,"attributes":[{"value":"/ Applies logical \"or\" to the current value and returns the previous value.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":23797,"byte_end":23874,"line_start":602,"line_end":602,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":23879,"byte_end":23882,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":23887,"byte_end":23901,"line_start":604,"line_end":604,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":23906,"byte_end":23909,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":23914,"byte_end":23921,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":23926,"byte_end":23970,"line_start":607,"line_end":607,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":23975,"byte_end":23978,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(false);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":23983,"byte_end":24018,"line_start":609,"line_end":609,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":24023,"byte_end":24026,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_or(false), false);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":24031,"byte_end":24072,"line_start":611,"line_end":611,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.load(), false);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":24077,"byte_end":24109,"line_start":612,"line_end":612,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":24114,"byte_end":24117,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_or(true), false);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":24122,"byte_end":24162,"line_start":614,"line_end":614,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(a.load(), true);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":24167,"byte_end":24198,"line_start":615,"line_end":615,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":24203,"byte_end":24210,"line_start":616,"line_end":616,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":24215,"byte_end":24224,"line_start":617,"line_end":617,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":24835,"byte_end":24844,"line_start":639,"line_end":639,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<AtomicCell<bool>>::fetch_xor","value":"pub fn fetch_xor(&Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Applies logical \"xor\" to the current value and returns the previous value.","sig":null,"attributes":[{"value":"/ Applies logical \"xor\" to the current value and returns the previous value.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":24396,"byte_end":24474,"line_start":623,"line_end":623,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":24479,"byte_end":24482,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":24487,"byte_end":24501,"line_start":625,"line_end":625,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":24506,"byte_end":24509,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":24514,"byte_end":24521,"line_start":627,"line_end":627,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":24526,"byte_end":24570,"line_start":628,"line_end":628,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":24575,"byte_end":24578,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(true);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":24583,"byte_end":24617,"line_start":630,"line_end":630,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":24622,"byte_end":24625,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_xor(false), true);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":24630,"byte_end":24671,"line_start":632,"line_end":632,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.load(), true);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":24676,"byte_end":24707,"line_start":633,"line_end":633,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":24712,"byte_end":24715,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_xor(true), true);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":24720,"byte_end":24760,"line_start":635,"line_end":635,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(a.load(), false);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":24765,"byte_end":24797,"line_start":636,"line_end":636,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":24802,"byte_end":24809,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":24814,"byte_end":24823,"line_start":638,"line_end":638,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":114},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/consume.rs","byte_start":35671,"byte_end":35684,"line_start":7,"line_end":7,"column_start":11,"column_end":24},"name":"AtomicConsume","qualname":"::atomic::consume::AtomicConsume","value":"AtomicConsume","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116}],"decl_id":null,"docs":" Trait which allows reading from primitive atomic types with \"consume\" ordering.\n","sig":null,"attributes":[{"value":"/ Trait which allows reading from primitive atomic types with \"consume\" ordering.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/consume.rs","byte_start":35577,"byte_end":35660,"line_start":6,"line_end":6,"column_start":1,"column_end":84}}]},{"kind":"Type","id":{"krate":0,"index":115},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/consume.rs","byte_start":35737,"byte_end":35740,"line_start":9,"line_end":9,"column_start":10,"column_end":13},"name":"Val","qualname":"::atomic::consume::AtomicConsume::Val","value":"type Val;","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Type returned by `load_consume`.\n","sig":null,"attributes":[{"value":"/ Type returned by `load_consume`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/consume.rs","byte_start":35691,"byte_end":35727,"line_start":8,"line_end":8,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/consume.rs","byte_start":36578,"byte_end":36590,"line_start":26,"line_end":26,"column_start":8,"column_end":20},"name":"load_consume","qualname":"::atomic::consume::AtomicConsume::load_consume","value":"pub fn load_consume(&Self) -> Self::Val","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Loads a value from the atomic using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a value from the atomic using a \"consume\" memory ordering.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/consume.rs","byte_start":35747,"byte_end":35815,"line_start":11,"line_end":11,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/consume.rs","byte_start":35820,"byte_end":35823,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/consume.rs","byte_start":35828,"byte_end":35901,"line_start":13,"line_end":13,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/consume.rs","byte_start":35906,"byte_end":35982,"line_start":14,"line_end":14,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/consume.rs","byte_start":35987,"byte_end":36058,"line_start":15,"line_end":15,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/consume.rs","byte_start":36063,"byte_end":36137,"line_start":16,"line_end":16,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/consume.rs","byte_start":36142,"byte_end":36165,"line_start":17,"line_end":17,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/consume.rs","byte_start":36170,"byte_end":36173,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/consume.rs","byte_start":36178,"byte_end":36253,"line_start":19,"line_end":19,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/consume.rs","byte_start":36258,"byte_end":36332,"line_start":20,"line_end":20,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/consume.rs","byte_start":36337,"byte_end":36371,"line_start":21,"line_end":21,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/consume.rs","byte_start":36376,"byte_end":36379,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This is currently only implemented on ARM and AArch64, where a fence","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/consume.rs","byte_start":36384,"byte_end":36456,"line_start":23,"line_end":23,"column_start":5,"column_end":77}},{"value":"/ can be avoided. On other architectures this will fall back to a simple","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/consume.rs","byte_start":36461,"byte_end":36535,"line_start":24,"line_end":24,"column_start":5,"column_end":79}},{"value":"/ `load(Ordering::Acquire)`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/consume.rs","byte_start":36540,"byte_end":36570,"line_start":25,"line_end":25,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":298},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":43149,"byte_end":43160,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"CachePadded","qualname":"::cache_padded::CachePadded","value":"CachePadded {  }","parent":null,"children":[{"krate":0,"index":300}],"decl_id":null,"docs":" Pads and aligns a value to the length of a cache line.","sig":null,"attributes":[{"value":"/ Pads and aligns a value to the length of a cache line.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":38344,"byte_end":38402,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":38403,"byte_end":38406,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ In concurrent programming, sometimes it is desirable to make sure commonly accessed pieces of","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":38407,"byte_end":38504,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/ data are not placed into the same cache line. Updating an atomic value invalidates the whole","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":38505,"byte_end":38601,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"/ cache line it belongs to, which makes the next access to the same cache line slower for other","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":38602,"byte_end":38699,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ CPU cores. Use `CachePadded` to ensure updating one piece of data doesn't invalidate other","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":38700,"byte_end":38794,"line_start":9,"line_end":9,"column_start":1,"column_end":95}},{"value":"/ cached data.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":38795,"byte_end":38811,"line_start":10,"line_end":10,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":38812,"byte_end":38815,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Size and alignment","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":38816,"byte_end":38840,"line_start":12,"line_end":12,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":38841,"byte_end":38844,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Cache lines are assumed to be N bytes long, depending on the architecture:","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":38845,"byte_end":38923,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":38924,"byte_end":38927,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * On x86-64, aarch64, and powerpc64, N = 128.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":38928,"byte_end":38977,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/ * On arm, mips, mips64, and riscv64, N = 32.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":38978,"byte_end":39026,"line_start":17,"line_end":17,"column_start":1,"column_end":49}},{"value":"/ * On s390x, N = 256.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":39027,"byte_end":39051,"line_start":18,"line_end":18,"column_start":1,"column_end":25}},{"value":"/ * On all others, N = 64.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":39052,"byte_end":39080,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":39081,"byte_end":39084,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that N is just a reasonable guess and is not guaranteed to match the actual cache line","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":39085,"byte_end":39180,"line_start":21,"line_end":21,"column_start":1,"column_end":96}},{"value":"/ length of the machine the program is running on. On modern Intel architectures, spatial","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":39181,"byte_end":39272,"line_start":22,"line_end":22,"column_start":1,"column_end":92}},{"value":"/ prefetcher is pulling pairs of 64-byte cache lines at a time, so we pessimistically assume that","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":39273,"byte_end":39372,"line_start":23,"line_end":23,"column_start":1,"column_end":100}},{"value":"/ cache lines are 128 bytes long.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":39373,"byte_end":39408,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":39409,"byte_end":39412,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The size of `CachePadded<T>` is the smallest multiple of N bytes large enough to accommodate","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":39413,"byte_end":39509,"line_start":26,"line_end":26,"column_start":1,"column_end":97}},{"value":"/ a value of type `T`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":39510,"byte_end":39534,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":39535,"byte_end":39538,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The alignment of `CachePadded<T>` is the maximum of N bytes and the alignment of `T`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":39539,"byte_end":39628,"line_start":29,"line_end":29,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":39629,"byte_end":39632,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":39633,"byte_end":39647,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":39648,"byte_end":39651,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Alignment and padding:","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":39652,"byte_end":39678,"line_start":33,"line_end":33,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":39679,"byte_end":39682,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":39683,"byte_end":39690,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::CachePadded;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":39691,"byte_end":39728,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":39729,"byte_end":39732,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let array = [CachePadded::new(1i8), CachePadded::new(2i8)];","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":39733,"byte_end":39796,"line_start":38,"line_end":38,"column_start":1,"column_end":64}},{"value":"/ let addr1 = &*array[0] as *const i8 as usize;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":39797,"byte_end":39846,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/ let addr2 = &*array[1] as *const i8 as usize;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":39847,"byte_end":39896,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":39897,"byte_end":39900,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ assert!(addr2 - addr1 >= 64);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":39901,"byte_end":39934,"line_start":42,"line_end":42,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(addr1 % 64, 0);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":39935,"byte_end":39965,"line_start":43,"line_end":43,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(addr2 % 64, 0);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":39966,"byte_end":39996,"line_start":44,"line_end":44,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":39997,"byte_end":40004,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":40005,"byte_end":40008,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ When building a concurrent queue with a head and a tail index, it is wise to place them in","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":40009,"byte_end":40103,"line_start":47,"line_end":47,"column_start":1,"column_end":95}},{"value":"/ different cache lines so that concurrent threads pushing and popping elements don't invalidate","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":40104,"byte_end":40202,"line_start":48,"line_end":48,"column_start":1,"column_end":99}},{"value":"/ each other's cache lines:","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":40203,"byte_end":40232,"line_start":49,"line_end":49,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":40233,"byte_end":40236,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":40237,"byte_end":40244,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::CachePadded;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":40245,"byte_end":40282,"line_start":52,"line_end":52,"column_start":1,"column_end":38}},{"value":"/ use std::sync::atomic::AtomicUsize;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":40283,"byte_end":40322,"line_start":53,"line_end":53,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":40323,"byte_end":40326,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ struct Queue<T> {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":40327,"byte_end":40348,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/     head: CachePadded<AtomicUsize>,","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":40349,"byte_end":40388,"line_start":56,"line_end":56,"column_start":1,"column_end":40}},{"value":"/     tail: CachePadded<AtomicUsize>,","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":40389,"byte_end":40428,"line_start":57,"line_end":57,"column_start":1,"column_end":40}},{"value":"/     buffer: *mut T,","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":40429,"byte_end":40452,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":40453,"byte_end":40458,"line_start":59,"line_end":59,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":40459,"byte_end":40466,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"repr(align(128))","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":41420,"byte_end":41436,"line_start":84,"line_end":84,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":43542,"byte_end":43545,"line_start":145,"line_end":145,"column_start":18,"column_end":21},"name":"new","qualname":"<CachePadded<T>>::new","value":"pub const fn new(T) -> CachePadded<T>","parent":null,"children":[],"decl_id":null,"docs":" Pads and aligns a value to the length of a cache line.","sig":null,"attributes":[{"value":"/ Pads and aligns a value to the length of a cache line.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":43309,"byte_end":43367,"line_start":136,"line_end":136,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":43372,"byte_end":43375,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":43380,"byte_end":43394,"line_start":138,"line_end":138,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":43399,"byte_end":43402,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":43407,"byte_end":43414,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::CachePadded;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":43419,"byte_end":43456,"line_start":141,"line_end":141,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":43461,"byte_end":43464,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ let padded_value = CachePadded::new(1);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":43469,"byte_end":43512,"line_start":143,"line_end":143,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":43517,"byte_end":43524,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":43895,"byte_end":43905,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<CachePadded<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner value.","sig":null,"attributes":[{"value":"/ Returns the inner value.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":43621,"byte_end":43649,"line_start":149,"line_end":149,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":43654,"byte_end":43657,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":43662,"byte_end":43676,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":43681,"byte_end":43684,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":43689,"byte_end":43696,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::CachePadded;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":43701,"byte_end":43738,"line_start":154,"line_end":154,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":43743,"byte_end":43746,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ let padded_value = CachePadded::new(7);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":43751,"byte_end":43794,"line_start":156,"line_end":156,"column_start":5,"column_end":48}},{"value":"/ let value = padded_value.into_inner();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":43799,"byte_end":43841,"line_start":157,"line_end":157,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(value, 7);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":43846,"byte_end":43871,"line_start":158,"line_end":158,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":43876,"byte_end":43883,"line_start":159,"line_end":159,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":157},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46838,"byte_end":46845,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"Backoff","qualname":"::backoff::Backoff","value":"Backoff {  }","parent":null,"children":[{"krate":0,"index":158}],"decl_id":null,"docs":" Performs exponential backoff in spin loops.","sig":null,"attributes":[{"value":"/ Performs exponential backoff in spin loops.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":44630,"byte_end":44677,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":44678,"byte_end":44681,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Backing off in spin loops reduces contention and improves overall performance.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":44682,"byte_end":44764,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":44765,"byte_end":44768,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This primitive can execute *YIELD* and *PAUSE* instructions, yield the current thread to the OS","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":44769,"byte_end":44868,"line_start":12,"line_end":12,"column_start":1,"column_end":100}},{"value":"/ scheduler, and tell when is a good time to block the thread using a different synchronization","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":44869,"byte_end":44966,"line_start":13,"line_end":13,"column_start":1,"column_end":98}},{"value":"/ mechanism. Each step of the back off procedure takes roughly twice as long as the previous","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":44967,"byte_end":45061,"line_start":14,"line_end":14,"column_start":1,"column_end":95}},{"value":"/ step.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45062,"byte_end":45071,"line_start":15,"line_end":15,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45072,"byte_end":45075,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45076,"byte_end":45090,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45091,"byte_end":45094,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Backing off in a lock-free loop:","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45095,"byte_end":45131,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45132,"byte_end":45135,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45136,"byte_end":45143,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45144,"byte_end":45177,"line_start":22,"line_end":22,"column_start":1,"column_end":34}},{"value":"/ use std::sync::atomic::AtomicUsize;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45178,"byte_end":45217,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45218,"byte_end":45262,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45263,"byte_end":45266,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ fn fetch_mul(a: &AtomicUsize, b: usize) -> usize {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45267,"byte_end":45321,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45322,"byte_end":45359,"line_start":27,"line_end":27,"column_start":1,"column_end":38}},{"value":"/     loop {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45360,"byte_end":45374,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/         let val = a.load(SeqCst);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45375,"byte_end":45412,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/         if a.compare_exchange(val, val.wrapping_mul(b), SeqCst, SeqCst).is_ok() {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45413,"byte_end":45498,"line_start":30,"line_end":30,"column_start":1,"column_end":86}},{"value":"/             return val;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45499,"byte_end":45526,"line_start":31,"line_end":31,"column_start":1,"column_end":28}},{"value":"/         }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45527,"byte_end":45540,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/         backoff.spin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45541,"byte_end":45568,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/     }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45569,"byte_end":45578,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45579,"byte_end":45584,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45585,"byte_end":45592,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45593,"byte_end":45596,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Waiting for an [`AtomicBool`] to become `true`:","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45597,"byte_end":45648,"line_start":38,"line_end":38,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45649,"byte_end":45652,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45653,"byte_end":45660,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45661,"byte_end":45694,"line_start":41,"line_end":41,"column_start":1,"column_end":34}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45695,"byte_end":45733,"line_start":42,"line_end":42,"column_start":1,"column_end":39}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45734,"byte_end":45778,"line_start":43,"line_end":43,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45779,"byte_end":45782,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ fn spin_wait(ready: &AtomicBool) {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45783,"byte_end":45821,"line_start":45,"line_end":45,"column_start":1,"column_end":39}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45822,"byte_end":45859,"line_start":46,"line_end":46,"column_start":1,"column_end":38}},{"value":"/     while !ready.load(SeqCst) {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45860,"byte_end":45895,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/         backoff.snooze();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45896,"byte_end":45925,"line_start":48,"line_end":48,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45926,"byte_end":45935,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45936,"byte_end":45941,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45942,"byte_end":45949,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45950,"byte_end":45953,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Waiting for an [`AtomicBool`] to become `true` and parking the thread after a long wait.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":45954,"byte_end":46046,"line_start":53,"line_end":53,"column_start":1,"column_end":93}},{"value":"/ Note that whoever sets the atomic variable to `true` must notify the parked thread by calling","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46047,"byte_end":46144,"line_start":54,"line_end":54,"column_start":1,"column_end":98}},{"value":"/ [`unpark()`]:","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46145,"byte_end":46162,"line_start":55,"line_end":55,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46163,"byte_end":46166,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46167,"byte_end":46174,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46175,"byte_end":46208,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46209,"byte_end":46247,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46248,"byte_end":46292,"line_start":60,"line_end":60,"column_start":1,"column_end":45}},{"value":"/ use std::thread;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46293,"byte_end":46313,"line_start":61,"line_end":61,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46314,"byte_end":46317,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ fn blocking_wait(ready: &AtomicBool) {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46318,"byte_end":46360,"line_start":63,"line_end":63,"column_start":1,"column_end":43}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46361,"byte_end":46398,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/     while !ready.load(SeqCst) {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46399,"byte_end":46434,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/         if backoff.is_completed() {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46435,"byte_end":46474,"line_start":66,"line_end":66,"column_start":1,"column_end":40}},{"value":"/             thread::park();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46475,"byte_end":46506,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/         } else {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46507,"byte_end":46527,"line_start":68,"line_end":68,"column_start":1,"column_end":21}},{"value":"/             backoff.snooze();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46528,"byte_end":46561,"line_start":69,"line_end":69,"column_start":1,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46562,"byte_end":46575,"line_start":70,"line_end":70,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46576,"byte_end":46585,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46586,"byte_end":46591,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46592,"byte_end":46599,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46600,"byte_end":46603,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ [`is_completed`]: Backoff::is_completed","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46604,"byte_end":46647,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/ [`std::thread::park()`]: std::thread::park","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46648,"byte_end":46694,"line_start":76,"line_end":76,"column_start":1,"column_end":47}},{"value":"/ [`Condvar`]: std::sync::Condvar","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46695,"byte_end":46730,"line_start":77,"line_end":77,"column_start":1,"column_end":36}},{"value":"/ [`AtomicBool`]: std::sync::atomic::AtomicBool","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46731,"byte_end":46780,"line_start":78,"line_end":78,"column_start":1,"column_end":50}},{"value":"/ [`unpark()`]: std::thread::Thread::unpark","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46781,"byte_end":46826,"line_start":79,"line_end":79,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47088,"byte_end":47091,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"new","qualname":"<Backoff>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Backoff`.","sig":null,"attributes":[{"value":"/ Creates a new `Backoff`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46891,"byte_end":46919,"line_start":85,"line_end":85,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46924,"byte_end":46927,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46932,"byte_end":46946,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46951,"byte_end":46954,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46959,"byte_end":46966,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46971,"byte_end":47004,"line_start":90,"line_end":90,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47009,"byte_end":47012,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ let backoff = Backoff::new();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47017,"byte_end":47050,"line_start":92,"line_end":92,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47055,"byte_end":47062,"line_start":93,"line_end":93,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47067,"byte_end":47076,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47373,"byte_end":47378,"line_start":110,"line_end":110,"column_start":12,"column_end":17},"name":"reset","qualname":"<Backoff>::reset","value":"pub fn reset(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Backoff`.","sig":null,"attributes":[{"value":"/ Resets the `Backoff`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47154,"byte_end":47179,"line_start":99,"line_end":99,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47184,"byte_end":47187,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47192,"byte_end":47206,"line_start":101,"line_end":101,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47211,"byte_end":47214,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47219,"byte_end":47226,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47231,"byte_end":47264,"line_start":104,"line_end":104,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47269,"byte_end":47272,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let backoff = Backoff::new();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47277,"byte_end":47310,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/ backoff.reset();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47315,"byte_end":47335,"line_start":107,"line_end":107,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47340,"byte_end":47347,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47352,"byte_end":47361,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":48422,"byte_end":48426,"line_start":146,"line_end":146,"column_start":12,"column_end":16},"name":"spin","qualname":"<Backoff>::spin","value":"pub fn spin(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Backs off in a lock-free loop.","sig":null,"attributes":[{"value":"/ Backs off in a lock-free loop.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47425,"byte_end":47459,"line_start":114,"line_end":114,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47464,"byte_end":47467,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ This method should be used when we need to retry an operation because another thread made","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47472,"byte_end":47565,"line_start":116,"line_end":116,"column_start":5,"column_end":98}},{"value":"/ progress.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47570,"byte_end":47583,"line_start":117,"line_end":117,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47588,"byte_end":47591,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The processor may yield using the *YIELD* or *PAUSE* instruction.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47596,"byte_end":47665,"line_start":119,"line_end":119,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47670,"byte_end":47673,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47678,"byte_end":47692,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47697,"byte_end":47700,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Backing off in a lock-free loop:","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47705,"byte_end":47741,"line_start":123,"line_end":123,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47746,"byte_end":47749,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47754,"byte_end":47761,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47766,"byte_end":47799,"line_start":126,"line_end":126,"column_start":5,"column_end":38}},{"value":"/ use std::sync::atomic::AtomicUsize;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47804,"byte_end":47843,"line_start":127,"line_end":127,"column_start":5,"column_end":44}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47848,"byte_end":47892,"line_start":128,"line_end":128,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47897,"byte_end":47900,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ fn fetch_mul(a: &AtomicUsize, b: usize) -> usize {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47905,"byte_end":47959,"line_start":130,"line_end":130,"column_start":5,"column_end":59}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":47964,"byte_end":48001,"line_start":131,"line_end":131,"column_start":5,"column_end":42}},{"value":"/     loop {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":48006,"byte_end":48020,"line_start":132,"line_end":132,"column_start":5,"column_end":19}},{"value":"/         let val = a.load(SeqCst);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":48025,"byte_end":48062,"line_start":133,"line_end":133,"column_start":5,"column_end":42}},{"value":"/         if a.compare_exchange(val, val.wrapping_mul(b), SeqCst, SeqCst).is_ok() {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":48067,"byte_end":48152,"line_start":134,"line_end":134,"column_start":5,"column_end":90}},{"value":"/             return val;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":48157,"byte_end":48184,"line_start":135,"line_end":135,"column_start":5,"column_end":32}},{"value":"/         }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":48189,"byte_end":48202,"line_start":136,"line_end":136,"column_start":5,"column_end":18}},{"value":"/         backoff.spin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":48207,"byte_end":48234,"line_start":137,"line_end":137,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":48239,"byte_end":48248,"line_start":138,"line_end":138,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":48253,"byte_end":48258,"line_start":139,"line_end":139,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":48263,"byte_end":48266,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicUsize::new(7);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":48271,"byte_end":48303,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(fetch_mul(&a, 8), 7);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":48308,"byte_end":48344,"line_start":142,"line_end":142,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(a.load(SeqCst), 56);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":48349,"byte_end":48384,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":48389,"byte_end":48396,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":48401,"byte_end":48410,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":50485,"byte_end":50491,"line_start":208,"line_end":208,"column_start":12,"column_end":18},"name":"snooze","qualname":"<Backoff>::snooze","value":"pub fn snooze(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Backs off in a blocking loop.","sig":null,"attributes":[{"value":"/ Backs off in a blocking loop.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":48830,"byte_end":48863,"line_start":159,"line_end":159,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":48868,"byte_end":48871,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ This method should be used when we need to wait for another thread to make progress.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":48876,"byte_end":48964,"line_start":161,"line_end":161,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":48969,"byte_end":48972,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ The processor may yield using the *YIELD* or *PAUSE* instruction and the current thread","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":48977,"byte_end":49068,"line_start":163,"line_end":163,"column_start":5,"column_end":96}},{"value":"/ may yield by giving up a timeslice to the OS scheduler.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":49073,"byte_end":49132,"line_start":164,"line_end":164,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":49137,"byte_end":49140,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ In `#[no_std]` environments, this method is equivalent to [`spin`].","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":49145,"byte_end":49216,"line_start":166,"line_end":166,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":49221,"byte_end":49224,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ If possible, use [`is_completed`] to check when it is advised to stop using backoff and","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":49229,"byte_end":49320,"line_start":168,"line_end":168,"column_start":5,"column_end":96}},{"value":"/ block the current thread using a different synchronization mechanism instead.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":49325,"byte_end":49406,"line_start":169,"line_end":169,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":49411,"byte_end":49414,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ [`spin`]: Backoff::spin","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":49419,"byte_end":49446,"line_start":171,"line_end":171,"column_start":5,"column_end":32}},{"value":"/ [`is_completed`]: Backoff::is_completed","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":49451,"byte_end":49494,"line_start":172,"line_end":172,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":49499,"byte_end":49502,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":49507,"byte_end":49521,"line_start":174,"line_end":174,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":49526,"byte_end":49529,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Waiting for an [`AtomicBool`] to become `true`:","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":49534,"byte_end":49585,"line_start":176,"line_end":176,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":49590,"byte_end":49593,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":49598,"byte_end":49605,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":49610,"byte_end":49643,"line_start":179,"line_end":179,"column_start":5,"column_end":38}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":49648,"byte_end":49671,"line_start":180,"line_end":180,"column_start":5,"column_end":28}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":49676,"byte_end":49714,"line_start":181,"line_end":181,"column_start":5,"column_end":43}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":49719,"byte_end":49763,"line_start":182,"line_end":182,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":49768,"byte_end":49788,"line_start":183,"line_end":183,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":49793,"byte_end":49821,"line_start":184,"line_end":184,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":49826,"byte_end":49829,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ fn spin_wait(ready: &AtomicBool) {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":49834,"byte_end":49872,"line_start":186,"line_end":186,"column_start":5,"column_end":43}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":49877,"byte_end":49914,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/     while !ready.load(SeqCst) {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":49919,"byte_end":49954,"line_start":188,"line_end":188,"column_start":5,"column_end":40}},{"value":"/         backoff.snooze();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":49959,"byte_end":49988,"line_start":189,"line_end":189,"column_start":5,"column_end":34}},{"value":"/     }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":49993,"byte_end":50002,"line_start":190,"line_end":190,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":50007,"byte_end":50012,"line_start":191,"line_end":191,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":50017,"byte_end":50020,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ let ready = Arc::new(AtomicBool::new(false));","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":50025,"byte_end":50074,"line_start":193,"line_end":193,"column_start":5,"column_end":54}},{"value":"/ let ready2 = ready.clone();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":50079,"byte_end":50110,"line_start":194,"line_end":194,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":50115,"byte_end":50118,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":50123,"byte_end":50150,"line_start":196,"line_end":196,"column_start":5,"column_end":32}},{"value":"/     thread::sleep(Duration::from_millis(100));","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":50155,"byte_end":50205,"line_start":197,"line_end":197,"column_start":5,"column_end":55}},{"value":"/     ready2.store(true, SeqCst);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":50210,"byte_end":50245,"line_start":198,"line_end":198,"column_start":5,"column_end":40}},{"value":"/ });","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":50250,"byte_end":50257,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":50262,"byte_end":50265,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(ready.load(SeqCst), false);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":50270,"byte_end":50312,"line_start":201,"line_end":201,"column_start":5,"column_end":47}},{"value":"/ spin_wait(&ready);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":50317,"byte_end":50339,"line_start":202,"line_end":202,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(ready.load(SeqCst), true);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":50344,"byte_end":50385,"line_start":203,"line_end":203,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":50390,"byte_end":50397,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":50402,"byte_end":50405,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ [`AtomicBool`]: std::sync::atomic::AtomicBool","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":50410,"byte_end":50459,"line_start":206,"line_end":206,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":50464,"byte_end":50473,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":52708,"byte_end":52720,"line_start":276,"line_end":276,"column_start":12,"column_end":24},"name":"is_completed","qualname":"<Backoff>::is_completed","value":"pub fn is_completed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if exponential backoff has completed and blocking the thread is advised.","sig":null,"attributes":[{"value":"/ Returns `true` if exponential backoff has completed and blocking the thread is advised.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":51381,"byte_end":51472,"line_start":234,"line_end":234,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":51477,"byte_end":51480,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":51485,"byte_end":51499,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":51504,"byte_end":51507,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Waiting for an [`AtomicBool`] to become `true` and parking the thread after a long wait:","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":51512,"byte_end":51604,"line_start":238,"line_end":238,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":51609,"byte_end":51612,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":51617,"byte_end":51624,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":51629,"byte_end":51662,"line_start":241,"line_end":241,"column_start":5,"column_end":38}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":51667,"byte_end":51690,"line_start":242,"line_end":242,"column_start":5,"column_end":28}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":51695,"byte_end":51733,"line_start":243,"line_end":243,"column_start":5,"column_end":43}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":51738,"byte_end":51782,"line_start":244,"line_end":244,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":51787,"byte_end":51807,"line_start":245,"line_end":245,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":51812,"byte_end":51840,"line_start":246,"line_end":246,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":51845,"byte_end":51848,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ fn blocking_wait(ready: &AtomicBool) {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":51853,"byte_end":51895,"line_start":248,"line_end":248,"column_start":5,"column_end":47}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":51900,"byte_end":51937,"line_start":249,"line_end":249,"column_start":5,"column_end":42}},{"value":"/     while !ready.load(SeqCst) {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":51942,"byte_end":51977,"line_start":250,"line_end":250,"column_start":5,"column_end":40}},{"value":"/         if backoff.is_completed() {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":51982,"byte_end":52021,"line_start":251,"line_end":251,"column_start":5,"column_end":44}},{"value":"/             thread::park();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":52026,"byte_end":52057,"line_start":252,"line_end":252,"column_start":5,"column_end":36}},{"value":"/         } else {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":52062,"byte_end":52082,"line_start":253,"line_end":253,"column_start":5,"column_end":25}},{"value":"/             backoff.snooze();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":52087,"byte_end":52120,"line_start":254,"line_end":254,"column_start":5,"column_end":38}},{"value":"/         }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":52125,"byte_end":52138,"line_start":255,"line_end":255,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":52143,"byte_end":52152,"line_start":256,"line_end":256,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":52157,"byte_end":52162,"line_start":257,"line_end":257,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":52167,"byte_end":52170,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ let ready = Arc::new(AtomicBool::new(false));","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":52175,"byte_end":52224,"line_start":259,"line_end":259,"column_start":5,"column_end":54}},{"value":"/ let ready2 = ready.clone();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":52229,"byte_end":52260,"line_start":260,"line_end":260,"column_start":5,"column_end":36}},{"value":"/ let waiter = thread::current();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":52265,"byte_end":52300,"line_start":261,"line_end":261,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":52305,"byte_end":52308,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":52313,"byte_end":52340,"line_start":263,"line_end":263,"column_start":5,"column_end":32}},{"value":"/     thread::sleep(Duration::from_millis(100));","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":52345,"byte_end":52395,"line_start":264,"line_end":264,"column_start":5,"column_end":55}},{"value":"/     ready2.store(true, SeqCst);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":52400,"byte_end":52435,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/     waiter.unpark();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":52440,"byte_end":52464,"line_start":266,"line_end":266,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":52469,"byte_end":52476,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":52481,"byte_end":52484,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(ready.load(SeqCst), false);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":52489,"byte_end":52531,"line_start":269,"line_end":269,"column_start":5,"column_end":47}},{"value":"/ blocking_wait(&ready);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":52536,"byte_end":52562,"line_start":270,"line_end":270,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(ready.load(SeqCst), true);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":52567,"byte_end":52608,"line_start":271,"line_end":271,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":52613,"byte_end":52620,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":52625,"byte_end":52628,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ [`AtomicBool`]: std::sync::atomic::AtomicBool","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":52633,"byte_end":52682,"line_start":274,"line_end":274,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":52687,"byte_end":52696,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":324},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":375},{"krate":0,"index":496},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525}],"decl_id":null,"docs":" Thread synchronization primitives.","sig":null,"attributes":[{"value":"/ Thread synchronization primitives.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/mod.rs","byte_start":10010818,"byte_end":10010856,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/mod.rs","byte_start":10010857,"byte_end":10010860,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ * [`Parker`], a thread parking primitive.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/mod.rs","byte_start":10010861,"byte_end":10010906,"line_start":3,"line_end":3,"column_start":1,"column_end":46}},{"value":"/ * [`ShardedLock`], a sharded reader-writer lock with fast concurrent reads.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/mod.rs","byte_start":10010907,"byte_end":10010986,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ * [`WaitGroup`], for synchronizing the beginning or end of some computation.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/mod.rs","byte_start":10010987,"byte_end":10011067,"line_start":5,"line_end":5,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":337},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012993,"byte_end":10012999,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"Parker","qualname":"::sync::parker::Parker","value":"Parker {  }","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339}],"decl_id":null,"docs":" A thread parking primitive.","sig":null,"attributes":[{"value":"/ A thread parking primitive.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10011563,"byte_end":10011594,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10011595,"byte_end":10011598,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Conceptually, each `Parker` has an associated token which is initially not present:","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10011599,"byte_end":10011686,"line_start":10,"line_end":10,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10011687,"byte_end":10011690,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ * The [`park`] method blocks the current thread unless or until the token is available, at","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10011691,"byte_end":10011785,"line_start":12,"line_end":12,"column_start":1,"column_end":95}},{"value":"/   which point it automatically consumes the token.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10011786,"byte_end":10011840,"line_start":13,"line_end":13,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10011841,"byte_end":10011844,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * The [`park_timeout`] and [`park_deadline`] methods work the same as [`park`], but block for","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10011845,"byte_end":10011942,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/   a specified maximum time.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10011943,"byte_end":10011974,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10011975,"byte_end":10011978,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * The [`unpark`] method atomically makes the token available if it wasn't already. Because the","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10011979,"byte_end":10012077,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/   token is initially absent, [`unpark`] followed by [`park`] will result in the second call","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012078,"byte_end":10012173,"line_start":19,"line_end":19,"column_start":1,"column_end":96}},{"value":"/   returning immediately.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012174,"byte_end":10012202,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012203,"byte_end":10012206,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In other words, each `Parker` acts a bit like a spinlock that can be locked and unlocked using","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012207,"byte_end":10012305,"line_start":22,"line_end":22,"column_start":1,"column_end":99}},{"value":"/ [`park`] and [`unpark`].","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012306,"byte_end":10012334,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012335,"byte_end":10012338,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012339,"byte_end":10012353,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012354,"byte_end":10012357,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012358,"byte_end":10012365,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ use std::thread;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012366,"byte_end":10012386,"line_start":28,"line_end":28,"column_start":1,"column_end":21}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012387,"byte_end":10012415,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012416,"byte_end":10012454,"line_start":30,"line_end":30,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012455,"byte_end":10012458,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012459,"byte_end":10012485,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012486,"byte_end":10012519,"line_start":33,"line_end":33,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012520,"byte_end":10012523,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ // Make the token available.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012524,"byte_end":10012556,"line_start":35,"line_end":35,"column_start":1,"column_end":33}},{"value":"/ u.unpark();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012557,"byte_end":10012572,"line_start":36,"line_end":36,"column_start":1,"column_end":16}},{"value":"/ // Wakes up immediately and consumes the token.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012573,"byte_end":10012624,"line_start":37,"line_end":37,"column_start":1,"column_end":52}},{"value":"/ p.park();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012625,"byte_end":10012638,"line_start":38,"line_end":38,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012639,"byte_end":10012642,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012643,"byte_end":10012670,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/     thread::sleep(Duration::from_millis(500));","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012671,"byte_end":10012721,"line_start":41,"line_end":41,"column_start":1,"column_end":51}},{"value":"/     u.unpark();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012722,"byte_end":10012741,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/ });","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012742,"byte_end":10012749,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012750,"byte_end":10012753,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Wakes up when `u.unpark()` provides the token.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012754,"byte_end":10012807,"line_start":45,"line_end":45,"column_start":1,"column_end":54}},{"value":"/ p.park();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012808,"byte_end":10012821,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012822,"byte_end":10012829,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012830,"byte_end":10012833,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ [`park`]: Parker::park","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012834,"byte_end":10012860,"line_start":49,"line_end":49,"column_start":1,"column_end":27}},{"value":"/ [`park_timeout`]: Parker::park_timeout","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012861,"byte_end":10012903,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ [`park_deadline`]: Parker::park_deadline","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012904,"byte_end":10012948,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/ [`unpark`]: Unparker::unpark","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10012949,"byte_end":10012981,"line_start":52,"line_end":52,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10013669,"byte_end":10013672,"line_start":86,"line_end":86,"column_start":12,"column_end":15},"name":"new","qualname":"<Parker>::new","value":"pub fn new() -> Parker","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Parker`.","sig":null,"attributes":[{"value":"/ Creates a new `Parker`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10013481,"byte_end":10013508,"line_start":76,"line_end":76,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10013513,"byte_end":10013516,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10013521,"byte_end":10013535,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10013540,"byte_end":10013543,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10013548,"byte_end":10013555,"line_start":80,"line_end":80,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10013560,"byte_end":10013598,"line_start":81,"line_end":81,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10013603,"byte_end":10013606,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10013611,"byte_end":10013637,"line_start":83,"line_end":83,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10013642,"byte_end":10013649,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10013654,"byte_end":10013657,"line_start":85,"line_end":85,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10014124,"byte_end":10014128,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"park","qualname":"<Parker>::park","value":"pub fn park(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until the token is made available.","sig":null,"attributes":[{"value":"/ Blocks the current thread until the token is made available.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10013722,"byte_end":10013786,"line_start":90,"line_end":90,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10013791,"byte_end":10013794,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10013799,"byte_end":10013813,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10013818,"byte_end":10013821,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10013826,"byte_end":10013833,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10013838,"byte_end":10013876,"line_start":95,"line_end":95,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10013881,"byte_end":10013884,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10013889,"byte_end":10013915,"line_start":97,"line_end":97,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10013920,"byte_end":10013953,"line_start":98,"line_end":98,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10013958,"byte_end":10013961,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ // Make the token available.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10013966,"byte_end":10013998,"line_start":100,"line_end":100,"column_start":5,"column_end":37}},{"value":"/ u.unpark();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10014003,"byte_end":10014018,"line_start":101,"line_end":101,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10014023,"byte_end":10014026,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ // Wakes up immediately and consumes the token.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10014031,"byte_end":10014082,"line_start":103,"line_end":103,"column_start":5,"column_end":56}},{"value":"/ p.park();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10014087,"byte_end":10014100,"line_start":104,"line_end":104,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10014105,"byte_end":10014112,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10014618,"byte_end":10014630,"line_start":123,"line_end":123,"column_start":12,"column_end":24},"name":"park_timeout","qualname":"<Parker>::park_timeout","value":"pub fn park_timeout(&Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until the token is made available, but only for a limited time.","sig":null,"attributes":[{"value":"/ Blocks the current thread until the token is made available, but only for a limited time.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10014189,"byte_end":10014282,"line_start":110,"line_end":110,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10014287,"byte_end":10014290,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10014295,"byte_end":10014309,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10014314,"byte_end":10014317,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10014322,"byte_end":10014329,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10014334,"byte_end":10014362,"line_start":115,"line_end":115,"column_start":5,"column_end":33}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10014367,"byte_end":10014405,"line_start":116,"line_end":116,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10014410,"byte_end":10014413,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10014418,"byte_end":10014444,"line_start":118,"line_end":118,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10014449,"byte_end":10014452,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ // Waits for the token to become available, but will not wait longer than 500 ms.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10014457,"byte_end":10014542,"line_start":120,"line_end":120,"column_start":5,"column_end":90}},{"value":"/ p.park_timeout(Duration::from_millis(500));","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10014547,"byte_end":10014594,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10014599,"byte_end":10014606,"line_start":122,"line_end":122,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10015214,"byte_end":10015227,"line_start":141,"line_end":141,"column_start":12,"column_end":25},"name":"park_deadline","qualname":"<Parker>::park_deadline","value":"pub fn park_deadline(&Self, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until the token is made available, or until a certain deadline.","sig":null,"attributes":[{"value":"/ Blocks the current thread until the token is made available, or until a certain deadline.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10014723,"byte_end":10014816,"line_start":127,"line_end":127,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10014821,"byte_end":10014824,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10014829,"byte_end":10014843,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10014848,"byte_end":10014851,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10014856,"byte_end":10014863,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10014868,"byte_end":10014907,"line_start":132,"line_end":132,"column_start":5,"column_end":44}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10014912,"byte_end":10014950,"line_start":133,"line_end":133,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10014955,"byte_end":10014958,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10014963,"byte_end":10014989,"line_start":135,"line_end":135,"column_start":5,"column_end":31}},{"value":"/ let deadline = Instant::now() + Duration::from_millis(500);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10014994,"byte_end":10015057,"line_start":136,"line_end":136,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10015062,"byte_end":10015065,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ // Waits for the token to become available, but will not wait longer than 500 ms.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10015070,"byte_end":10015155,"line_start":138,"line_end":138,"column_start":5,"column_end":90}},{"value":"/ p.park_deadline(deadline);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10015160,"byte_end":10015190,"line_start":139,"line_end":139,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10015195,"byte_end":10015202,"line_start":140,"line_end":140,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10015890,"byte_end":10015898,"line_start":165,"line_end":165,"column_start":12,"column_end":20},"name":"unparker","qualname":"<Parker>::unparker","value":"pub fn unparker(&Self) -> &Unparker","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to an associated [`Unparker`].","sig":null,"attributes":[{"value":"/ Returns a reference to an associated [`Unparker`].","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10015316,"byte_end":10015370,"line_start":145,"line_end":145,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10015375,"byte_end":10015378,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ The returned [`Unparker`] doesn't have to be used by reference - it can also be cloned.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10015383,"byte_end":10015474,"line_start":147,"line_end":147,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10015479,"byte_end":10015482,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10015487,"byte_end":10015501,"line_start":149,"line_end":149,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10015506,"byte_end":10015509,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10015514,"byte_end":10015521,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10015526,"byte_end":10015564,"line_start":152,"line_end":152,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10015569,"byte_end":10015572,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10015577,"byte_end":10015603,"line_start":154,"line_end":154,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10015608,"byte_end":10015641,"line_start":155,"line_end":155,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10015646,"byte_end":10015649,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ // Make the token available.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10015654,"byte_end":10015686,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/ u.unpark();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10015691,"byte_end":10015706,"line_start":158,"line_end":158,"column_start":5,"column_end":20}},{"value":"/ // Wakes up immediately and consumes the token.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10015711,"byte_end":10015762,"line_start":159,"line_end":159,"column_start":5,"column_end":56}},{"value":"/ p.park();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10015767,"byte_end":10015780,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10015785,"byte_end":10015792,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10015797,"byte_end":10015800,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ [`park`]: Parker::park","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10015805,"byte_end":10015831,"line_start":163,"line_end":163,"column_start":5,"column_end":31}},{"value":"/ [`park_timeout`]: Parker::park_timeout","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10015836,"byte_end":10015878,"line_start":164,"line_end":164,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10016242,"byte_end":10016250,"line_start":180,"line_end":180,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<Parker>::into_raw","value":"pub fn into_raw(Parker) -> *const ()","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Parker` into a raw pointer.","sig":null,"attributes":[{"value":"/ Converts a `Parker` into a raw pointer.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10015955,"byte_end":10015998,"line_start":169,"line_end":169,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10016003,"byte_end":10016006,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10016011,"byte_end":10016025,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10016030,"byte_end":10016033,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10016038,"byte_end":10016045,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10016050,"byte_end":10016088,"line_start":174,"line_end":174,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10016093,"byte_end":10016096,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10016101,"byte_end":10016127,"line_start":176,"line_end":176,"column_start":5,"column_end":31}},{"value":"/ let raw = Parker::into_raw(p);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10016132,"byte_end":10016166,"line_start":177,"line_end":177,"column_start":5,"column_end":39}},{"value":"/ # let _ = unsafe { Parker::from_raw(raw) };","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10016171,"byte_end":10016218,"line_start":178,"line_end":178,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10016223,"byte_end":10016230,"line_start":179,"line_end":179,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10016746,"byte_end":10016754,"line_start":199,"line_end":199,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Parker>::from_raw","value":"pub unsafe fn from_raw(*const ()) -> Parker","parent":null,"children":[],"decl_id":null,"docs":" Converts a raw pointer into a `Parker`.","sig":null,"attributes":[{"value":"/ Converts a raw pointer into a `Parker`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10016333,"byte_end":10016376,"line_start":184,"line_end":184,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10016381,"byte_end":10016384,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10016389,"byte_end":10016401,"line_start":186,"line_end":186,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10016406,"byte_end":10016409,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ This method is safe to use only with pointers returned by [`Parker::into_raw`].","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10016414,"byte_end":10016497,"line_start":188,"line_end":188,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10016502,"byte_end":10016505,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10016510,"byte_end":10016524,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10016529,"byte_end":10016532,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10016537,"byte_end":10016544,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10016549,"byte_end":10016587,"line_start":193,"line_end":193,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10016592,"byte_end":10016595,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10016600,"byte_end":10016626,"line_start":195,"line_end":195,"column_start":5,"column_end":31}},{"value":"/ let raw = Parker::into_raw(p);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10016631,"byte_end":10016665,"line_start":196,"line_end":196,"column_start":5,"column_end":39}},{"value":"/ let p = unsafe { Parker::from_raw(raw) };","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10016670,"byte_end":10016715,"line_start":197,"line_end":197,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10016720,"byte_end":10016727,"line_start":198,"line_end":198,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":353},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017101,"byte_end":10017109,"line_start":214,"line_end":214,"column_start":12,"column_end":20},"name":"Unparker","qualname":"::sync::parker::Unparker","value":"Unparker {  }","parent":null,"children":[{"krate":0,"index":354}],"decl_id":null,"docs":" Unparks a thread parked by the associated [`Parker`].\n","sig":null,"attributes":[{"value":"/ Unparks a thread parked by the associated [`Parker`].","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017032,"byte_end":10017089,"line_start":213,"line_end":213,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017955,"byte_end":10017961,"line_start":248,"line_end":248,"column_start":12,"column_end":18},"name":"unpark","qualname":"<Unparker>::unpark","value":"pub fn unpark(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Atomically makes the token available if it is not already.","sig":null,"attributes":[{"value":"/ Atomically makes the token available if it is not already.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017225,"byte_end":10017287,"line_start":222,"line_end":222,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017292,"byte_end":10017295,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ This method will wake up the thread blocked on [`park`] or [`park_timeout`], if there is","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017300,"byte_end":10017392,"line_start":224,"line_end":224,"column_start":5,"column_end":97}},{"value":"/ any.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017397,"byte_end":10017405,"line_start":225,"line_end":225,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017410,"byte_end":10017413,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017418,"byte_end":10017432,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017437,"byte_end":10017440,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017445,"byte_end":10017452,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017457,"byte_end":10017477,"line_start":230,"line_end":230,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017482,"byte_end":10017510,"line_start":231,"line_end":231,"column_start":5,"column_end":33}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017515,"byte_end":10017553,"line_start":232,"line_end":232,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017558,"byte_end":10017561,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017566,"byte_end":10017592,"line_start":234,"line_end":234,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017597,"byte_end":10017630,"line_start":235,"line_end":235,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017635,"byte_end":10017638,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017643,"byte_end":10017670,"line_start":237,"line_end":237,"column_start":5,"column_end":32}},{"value":"/     thread::sleep(Duration::from_millis(500));","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017675,"byte_end":10017725,"line_start":238,"line_end":238,"column_start":5,"column_end":55}},{"value":"/     u.unpark();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017730,"byte_end":10017749,"line_start":239,"line_end":239,"column_start":5,"column_end":24}},{"value":"/ });","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017754,"byte_end":10017761,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017766,"byte_end":10017769,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ // Wakes up when `u.unpark()` provides the token.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017774,"byte_end":10017827,"line_start":242,"line_end":242,"column_start":5,"column_end":58}},{"value":"/ p.park();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017832,"byte_end":10017845,"line_start":243,"line_end":243,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017850,"byte_end":10017857,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017862,"byte_end":10017865,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ [`park`]: Parker::park","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017870,"byte_end":10017896,"line_start":246,"line_end":246,"column_start":5,"column_end":31}},{"value":"/ [`park_timeout`]: Parker::park_timeout","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017901,"byte_end":10017943,"line_start":247,"line_end":247,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10018354,"byte_end":10018362,"line_start":264,"line_end":264,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<Unparker>::into_raw","value":"pub fn into_raw(Unparker) -> *const ()","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Unparker` into a raw pointer.","sig":null,"attributes":[{"value":"/ Converts an `Unparker` into a raw pointer.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10018010,"byte_end":10018056,"line_start":252,"line_end":252,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10018061,"byte_end":10018064,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10018069,"byte_end":10018083,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10018088,"byte_end":10018091,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10018096,"byte_end":10018103,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::{Parker, Unparker};","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10018108,"byte_end":10018158,"line_start":257,"line_end":257,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10018163,"byte_end":10018166,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10018171,"byte_end":10018197,"line_start":259,"line_end":259,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10018202,"byte_end":10018235,"line_start":260,"line_end":260,"column_start":5,"column_end":38}},{"value":"/ let raw = Unparker::into_raw(u);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10018240,"byte_end":10018276,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/ # let _ = unsafe { Unparker::from_raw(raw) };","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10018281,"byte_end":10018330,"line_start":262,"line_end":262,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10018335,"byte_end":10018342,"line_start":263,"line_end":263,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10018932,"byte_end":10018940,"line_start":285,"line_end":285,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Unparker>::from_raw","value":"pub unsafe fn from_raw(*const ()) -> Unparker","parent":null,"children":[],"decl_id":null,"docs":" Converts a raw pointer into an `Unparker`.","sig":null,"attributes":[{"value":"/ Converts a raw pointer into an `Unparker`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10018452,"byte_end":10018498,"line_start":268,"line_end":268,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10018503,"byte_end":10018506,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10018511,"byte_end":10018523,"line_start":270,"line_end":270,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10018528,"byte_end":10018531,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This method is safe to use only with pointers returned by [`Unparker::into_raw`].","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10018536,"byte_end":10018621,"line_start":272,"line_end":272,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10018626,"byte_end":10018629,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10018634,"byte_end":10018648,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10018653,"byte_end":10018656,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10018661,"byte_end":10018668,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::{Parker, Unparker};","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10018673,"byte_end":10018723,"line_start":277,"line_end":277,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10018728,"byte_end":10018731,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10018736,"byte_end":10018762,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10018767,"byte_end":10018800,"line_start":280,"line_end":280,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10018805,"byte_end":10018808,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ let raw = Unparker::into_raw(u);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10018813,"byte_end":10018849,"line_start":282,"line_end":282,"column_start":5,"column_end":41}},{"value":"/ let u = unsafe { Unparker::from_raw(raw) };","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10018854,"byte_end":10018901,"line_start":283,"line_end":283,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10018906,"byte_end":10018913,"line_start":284,"line_end":284,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":406},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10026654,"byte_end":10026665,"line_start":76,"line_end":76,"column_start":12,"column_end":23},"name":"ShardedLock","qualname":"::sync::sharded_lock::ShardedLock","value":"ShardedLock {  }","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409}],"decl_id":null,"docs":" A sharded reader-writer lock.","sig":null,"attributes":[{"value":"/ A sharded reader-writer lock.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10024903,"byte_end":10024936,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10024937,"byte_end":10024940,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This lock is equivalent to [`RwLock`], except read operations are faster and write operations","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10024941,"byte_end":10025038,"line_start":32,"line_end":32,"column_start":1,"column_end":98}},{"value":"/ are slower.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10025039,"byte_end":10025054,"line_start":33,"line_end":33,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10025055,"byte_end":10025058,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ A `ShardedLock` is internally made of a list of *shards*, each being a [`RwLock`] occupying a","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10025059,"byte_end":10025156,"line_start":35,"line_end":35,"column_start":1,"column_end":98}},{"value":"/ single cache line. Read operations will pick one of the shards depending on the current thread","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10025157,"byte_end":10025255,"line_start":36,"line_end":36,"column_start":1,"column_end":99}},{"value":"/ and lock it. Write operations need to lock all shards in succession.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10025256,"byte_end":10025328,"line_start":37,"line_end":37,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10025329,"byte_end":10025332,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ By splitting the lock into shards, concurrent read operations will in most cases choose","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10025333,"byte_end":10025424,"line_start":39,"line_end":39,"column_start":1,"column_end":92}},{"value":"/ different shards and thus update different cache lines, which is good for scalability. However,","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10025425,"byte_end":10025524,"line_start":40,"line_end":40,"column_start":1,"column_end":100}},{"value":"/ write operations need to do more work and are therefore slower than usual.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10025525,"byte_end":10025603,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10025604,"byte_end":10025607,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The priority policy of the lock is dependent on the underlying operating system's","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10025608,"byte_end":10025693,"line_start":43,"line_end":43,"column_start":1,"column_end":86}},{"value":"/ implementation, and this type does not guarantee that any particular policy will be used.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10025694,"byte_end":10025787,"line_start":44,"line_end":44,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10025788,"byte_end":10025791,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Poisoning","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10025792,"byte_end":10025807,"line_start":46,"line_end":46,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10025808,"byte_end":10025811,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ A `ShardedLock`, like [`RwLock`], will become poisoned on a panic. Note that it may only be","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10025812,"byte_end":10025907,"line_start":48,"line_end":48,"column_start":1,"column_end":96}},{"value":"/ poisoned if a panic occurs while a write operation is in progress. If a panic occurs in any","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10025908,"byte_end":10026003,"line_start":49,"line_end":49,"column_start":1,"column_end":96}},{"value":"/ read operation, the lock will not be poisoned.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10026004,"byte_end":10026054,"line_start":50,"line_end":50,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10026055,"byte_end":10026058,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10026059,"byte_end":10026073,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10026074,"byte_end":10026077,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10026078,"byte_end":10026085,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10026086,"byte_end":10026129,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10026130,"byte_end":10026133,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let lock = ShardedLock::new(5);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10026134,"byte_end":10026169,"line_start":57,"line_end":57,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10026170,"byte_end":10026173,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // Any number of read locks can be held at once.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10026174,"byte_end":10026226,"line_start":59,"line_end":59,"column_start":1,"column_end":53}},{"value":"/ {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10026227,"byte_end":10026232,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/     let r1 = lock.read().unwrap();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10026233,"byte_end":10026271,"line_start":61,"line_end":61,"column_start":1,"column_end":39}},{"value":"/     let r2 = lock.read().unwrap();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10026272,"byte_end":10026310,"line_start":62,"line_end":62,"column_start":1,"column_end":39}},{"value":"/     assert_eq!(*r1, 5);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10026311,"byte_end":10026338,"line_start":63,"line_end":63,"column_start":1,"column_end":28}},{"value":"/     assert_eq!(*r2, 5);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10026339,"byte_end":10026366,"line_start":64,"line_end":64,"column_start":1,"column_end":28}},{"value":"/ } // Read locks are dropped at this point.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10026367,"byte_end":10026413,"line_start":65,"line_end":65,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10026414,"byte_end":10026417,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ // However, only one write lock may be held.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10026418,"byte_end":10026466,"line_start":67,"line_end":67,"column_start":1,"column_end":49}},{"value":"/ {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10026467,"byte_end":10026472,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/     let mut w = lock.write().unwrap();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10026473,"byte_end":10026515,"line_start":69,"line_end":69,"column_start":1,"column_end":43}},{"value":"/     *w += 1;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10026516,"byte_end":10026532,"line_start":70,"line_end":70,"column_start":1,"column_end":17}},{"value":"/     assert_eq!(*w, 6);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10026533,"byte_end":10026559,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/ } // Write lock is dropped here.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10026560,"byte_end":10026596,"line_start":72,"line_end":72,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10026597,"byte_end":10026604,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10026605,"byte_end":10026608,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ [`RwLock`]: std::sync::RwLock","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10026609,"byte_end":10026642,"line_start":75,"line_end":75,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10027294,"byte_end":10027297,"line_start":100,"line_end":100,"column_start":12,"column_end":15},"name":"new","qualname":"<ShardedLock<T>>::new","value":"pub fn new(T) -> ShardedLock<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new sharded reader-writer lock.","sig":null,"attributes":[{"value":"/ Creates a new sharded reader-writer lock.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10027082,"byte_end":10027127,"line_start":91,"line_end":91,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10027132,"byte_end":10027135,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10027140,"byte_end":10027154,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10027159,"byte_end":10027162,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10027167,"byte_end":10027174,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10027179,"byte_end":10027222,"line_start":96,"line_end":96,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10027227,"byte_end":10027230,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(5);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10027235,"byte_end":10027270,"line_start":98,"line_end":98,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10027275,"byte_end":10027282,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10028270,"byte_end":10028280,"line_start":133,"line_end":133,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ShardedLock<T>>::into_inner","value":"pub fn into_inner(Self) -> LockResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this lock, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this lock, returning the underlying data.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10027711,"byte_end":10027765,"line_start":114,"line_end":114,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10027770,"byte_end":10027773,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10027778,"byte_end":10027790,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10027795,"byte_end":10027798,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10027803,"byte_end":10027898,"line_start":118,"line_end":118,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10027903,"byte_end":10027924,"line_start":119,"line_end":119,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10027929,"byte_end":10027932,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10027937,"byte_end":10027951,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10027956,"byte_end":10027959,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10027964,"byte_end":10027971,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10027976,"byte_end":10028019,"line_start":124,"line_end":124,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10028024,"byte_end":10028027,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(String::new());","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10028032,"byte_end":10028079,"line_start":126,"line_end":126,"column_start":5,"column_end":52}},{"value":"/ {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10028084,"byte_end":10028089,"line_start":127,"line_end":127,"column_start":5,"column_end":10}},{"value":"/     let mut s = lock.write().unwrap();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10028094,"byte_end":10028136,"line_start":128,"line_end":128,"column_start":5,"column_end":47}},{"value":"/     *s = \"modified\".to_owned();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10028141,"byte_end":10028176,"line_start":129,"line_end":129,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10028181,"byte_end":10028186,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(lock.into_inner().unwrap(), \"modified\");","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10028191,"byte_end":10028246,"line_start":131,"line_end":131,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10028251,"byte_end":10028258,"line_start":132,"line_end":132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10029257,"byte_end":10029268,"line_start":167,"line_end":167,"column_start":12,"column_end":23},"name":"is_poisoned","qualname":"<ShardedLock<T>>::is_poisoned","value":"pub fn is_poisoned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the lock is poisoned.","sig":null,"attributes":[{"value":"/ Returns `true` if the lock is poisoned.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10028559,"byte_end":10028602,"line_start":146,"line_end":146,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10028607,"byte_end":10028610,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If another thread can still access the lock, it may become poisoned at any time. A `false`","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10028615,"byte_end":10028709,"line_start":148,"line_end":148,"column_start":5,"column_end":99}},{"value":"/ result should not be trusted without additional synchronization.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10028714,"byte_end":10028782,"line_start":149,"line_end":149,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10028787,"byte_end":10028790,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10028795,"byte_end":10028809,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10028814,"byte_end":10028817,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10028822,"byte_end":10028829,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10028834,"byte_end":10028877,"line_start":154,"line_end":154,"column_start":5,"column_end":48}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10028882,"byte_end":10028905,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/ use std::thread;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10028910,"byte_end":10028930,"line_start":156,"line_end":156,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10028935,"byte_end":10028938,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ let lock = Arc::new(ShardedLock::new(0));","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10028943,"byte_end":10028988,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/ let c_lock = lock.clone();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10028993,"byte_end":10029023,"line_start":159,"line_end":159,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10029028,"byte_end":10029031,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let _ = thread::spawn(move || {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10029036,"byte_end":10029071,"line_start":161,"line_end":161,"column_start":5,"column_end":40}},{"value":"/     let _lock = c_lock.write().unwrap();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10029076,"byte_end":10029120,"line_start":162,"line_end":162,"column_start":5,"column_end":49}},{"value":"/     panic!(); // the lock gets poisoned","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10029125,"byte_end":10029168,"line_start":163,"line_end":163,"column_start":5,"column_end":48}},{"value":"/ }).join();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10029173,"byte_end":10029187,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(lock.is_poisoned(), true);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10029192,"byte_end":10029233,"line_start":165,"line_end":165,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10029238,"byte_end":10029245,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10029907,"byte_end":10029914,"line_start":189,"line_end":189,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ShardedLock<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> LockResult<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10029339,"byte_end":10029394,"line_start":171,"line_end":171,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10029399,"byte_end":10029402,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the lock mutably, no actual locking needs to take place.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10029407,"byte_end":10029491,"line_start":173,"line_end":173,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10029496,"byte_end":10029499,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10029504,"byte_end":10029516,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10029521,"byte_end":10029524,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10029529,"byte_end":10029624,"line_start":177,"line_end":177,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10029629,"byte_end":10029650,"line_start":178,"line_end":178,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10029655,"byte_end":10029658,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10029663,"byte_end":10029677,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10029682,"byte_end":10029685,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10029690,"byte_end":10029697,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10029702,"byte_end":10029745,"line_start":183,"line_end":183,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10029750,"byte_end":10029753,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ let mut lock = ShardedLock::new(0);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10029758,"byte_end":10029797,"line_start":185,"line_end":185,"column_start":5,"column_end":44}},{"value":"/ *lock.get_mut().unwrap() = 10;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10029802,"byte_end":10029836,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(*lock.read().unwrap(), 10);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10029841,"byte_end":10029883,"line_start":187,"line_end":187,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10029888,"byte_end":10029895,"line_start":188,"line_end":188,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10031034,"byte_end":10031042,"line_start":224,"line_end":224,"column_start":12,"column_end":20},"name":"try_read","qualname":"<ShardedLock<T>>::try_read","value":"pub fn try_read(&Self) -> TryLockResult<ShardedLockReadGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this lock with shared read access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this lock with shared read access.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10030178,"byte_end":10030236,"line_start":200,"line_end":200,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10030241,"byte_end":10030244,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ If the access could not be granted at this time, an error is returned. Otherwise, a guard","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10030249,"byte_end":10030342,"line_start":202,"line_end":202,"column_start":5,"column_end":98}},{"value":"/ is returned which will release the shared access when it is dropped. This method does not","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10030347,"byte_end":10030440,"line_start":203,"line_end":203,"column_start":5,"column_end":98}},{"value":"/ provide any guarantees with respect to the ordering of whether contentious readers or","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10030445,"byte_end":10030534,"line_start":204,"line_end":204,"column_start":5,"column_end":94}},{"value":"/ writers will acquire the lock first.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10030539,"byte_end":10030579,"line_start":205,"line_end":205,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10030584,"byte_end":10030587,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10030592,"byte_end":10030604,"line_start":207,"line_end":207,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10030609,"byte_end":10030612,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10030617,"byte_end":10030712,"line_start":209,"line_end":209,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10030717,"byte_end":10030738,"line_start":210,"line_end":210,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10030743,"byte_end":10030746,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10030751,"byte_end":10030765,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10030770,"byte_end":10030773,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10030778,"byte_end":10030785,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10030790,"byte_end":10030833,"line_start":215,"line_end":215,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10030838,"byte_end":10030841,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(1);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10030846,"byte_end":10030881,"line_start":217,"line_end":217,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10030886,"byte_end":10030889,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ match lock.try_read() {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10030894,"byte_end":10030921,"line_start":219,"line_end":219,"column_start":5,"column_end":32}},{"value":"/     Ok(n) => assert_eq!(*n, 1),","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10030926,"byte_end":10030961,"line_start":220,"line_end":220,"column_start":5,"column_end":40}},{"value":"/     Err(_) => unreachable!(),","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10030966,"byte_end":10030999,"line_start":221,"line_end":221,"column_start":5,"column_end":38}},{"value":"/ };","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10031004,"byte_end":10031010,"line_start":222,"line_end":222,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10031015,"byte_end":10031022,"line_start":223,"line_end":223,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10033343,"byte_end":10033347,"line_start":284,"line_end":284,"column_start":12,"column_end":16},"name":"read","qualname":"<ShardedLock<T>>::read","value":"pub fn read(&Self) -> LockResult<ShardedLockReadGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Locks with shared read access, blocking the current thread until it can be acquired.","sig":null,"attributes":[{"value":"/ Locks with shared read access, blocking the current thread until it can be acquired.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10032061,"byte_end":10032149,"line_start":248,"line_end":248,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10032154,"byte_end":10032157,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ The calling thread will be blocked until there are no more writers which hold the lock.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10032162,"byte_end":10032253,"line_start":250,"line_end":250,"column_start":5,"column_end":96}},{"value":"/ There may be other readers currently inside the lock when this method returns. This method","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10032258,"byte_end":10032352,"line_start":251,"line_end":251,"column_start":5,"column_end":99}},{"value":"/ does not provide any guarantees with respect to the ordering of whether contentious readers","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10032357,"byte_end":10032452,"line_start":252,"line_end":252,"column_start":5,"column_end":100}},{"value":"/ or writers will acquire the lock first.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10032457,"byte_end":10032500,"line_start":253,"line_end":253,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10032505,"byte_end":10032508,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ Returns a guard which will release the shared access when dropped.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10032513,"byte_end":10032583,"line_start":255,"line_end":255,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10032588,"byte_end":10032591,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10032596,"byte_end":10032608,"line_start":257,"line_end":257,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10032613,"byte_end":10032616,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10032621,"byte_end":10032716,"line_start":259,"line_end":259,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10032721,"byte_end":10032742,"line_start":260,"line_end":260,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10032747,"byte_end":10032750,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10032755,"byte_end":10032767,"line_start":262,"line_end":262,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10032772,"byte_end":10032775,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ This method might panic when called if the lock is already held by the current thread.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10032780,"byte_end":10032870,"line_start":264,"line_end":264,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10032875,"byte_end":10032878,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10032883,"byte_end":10032897,"line_start":266,"line_end":266,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10032902,"byte_end":10032905,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10032910,"byte_end":10032917,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10032922,"byte_end":10032965,"line_start":269,"line_end":269,"column_start":5,"column_end":48}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10032970,"byte_end":10032993,"line_start":270,"line_end":270,"column_start":5,"column_end":28}},{"value":"/ use std::thread;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10032998,"byte_end":10033018,"line_start":271,"line_end":271,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10033023,"byte_end":10033026,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ let lock = Arc::new(ShardedLock::new(1));","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10033031,"byte_end":10033076,"line_start":273,"line_end":273,"column_start":5,"column_end":50}},{"value":"/ let c_lock = lock.clone();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10033081,"byte_end":10033111,"line_start":274,"line_end":274,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10033116,"byte_end":10033119,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ let n = lock.read().unwrap();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10033124,"byte_end":10033157,"line_start":276,"line_end":276,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10033162,"byte_end":10033184,"line_start":277,"line_end":277,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10033189,"byte_end":10033192,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10033197,"byte_end":10033224,"line_start":279,"line_end":279,"column_start":5,"column_end":32}},{"value":"/     let r = c_lock.read();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10033229,"byte_end":10033259,"line_start":280,"line_end":280,"column_start":5,"column_end":35}},{"value":"/     assert!(r.is_ok());","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10033264,"byte_end":10033291,"line_start":281,"line_end":281,"column_start":5,"column_end":32}},{"value":"/ }).join().unwrap();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10033296,"byte_end":10033319,"line_start":282,"line_end":282,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10033324,"byte_end":10033331,"line_start":283,"line_end":283,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10035012,"byte_end":10035021,"line_start":328,"line_end":328,"column_start":12,"column_end":21},"name":"try_write","qualname":"<ShardedLock<T>>::try_write","value":"pub fn try_write(&Self) -> TryLockResult<ShardedLockWriteGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this lock with exclusive write access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this lock with exclusive write access.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10034153,"byte_end":10034215,"line_start":304,"line_end":304,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10034220,"byte_end":10034223,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ If the access could not be granted at this time, an error is returned. Otherwise, a guard","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10034228,"byte_end":10034321,"line_start":306,"line_end":306,"column_start":5,"column_end":98}},{"value":"/ is returned which will release the exclusive access when it is dropped. This method does","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10034326,"byte_end":10034418,"line_start":307,"line_end":307,"column_start":5,"column_end":97}},{"value":"/ not provide any guarantees with respect to the ordering of whether contentious readers or","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10034423,"byte_end":10034516,"line_start":308,"line_end":308,"column_start":5,"column_end":98}},{"value":"/ writers will acquire the lock first.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10034521,"byte_end":10034561,"line_start":309,"line_end":309,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10034566,"byte_end":10034569,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10034574,"byte_end":10034586,"line_start":311,"line_end":311,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10034591,"byte_end":10034594,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10034599,"byte_end":10034694,"line_start":313,"line_end":313,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10034699,"byte_end":10034720,"line_start":314,"line_end":314,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10034725,"byte_end":10034728,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10034733,"byte_end":10034747,"line_start":316,"line_end":316,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10034752,"byte_end":10034755,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10034760,"byte_end":10034767,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10034772,"byte_end":10034815,"line_start":319,"line_end":319,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10034820,"byte_end":10034823,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(1);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10034828,"byte_end":10034863,"line_start":321,"line_end":321,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10034868,"byte_end":10034871,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let n = lock.read().unwrap();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10034876,"byte_end":10034909,"line_start":323,"line_end":323,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10034914,"byte_end":10034936,"line_start":324,"line_end":324,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10034941,"byte_end":10034944,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_write().is_err());","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10034949,"byte_end":10034988,"line_start":326,"line_end":326,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10034993,"byte_end":10035000,"line_start":327,"line_end":327,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10037809,"byte_end":10037814,"line_start":408,"line_end":408,"column_start":12,"column_end":17},"name":"write","qualname":"<ShardedLock<T>>::write","value":"pub fn write(&Self) -> LockResult<ShardedLockWriteGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Locks with exclusive write access, blocking the current thread until it can be acquired.","sig":null,"attributes":[{"value":"/ Locks with exclusive write access, blocking the current thread until it can be acquired.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10036708,"byte_end":10036800,"line_start":378,"line_end":378,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10036805,"byte_end":10036808,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ The calling thread will be blocked until there are no more writers which hold the lock.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10036813,"byte_end":10036904,"line_start":380,"line_end":380,"column_start":5,"column_end":96}},{"value":"/ There may be other readers currently inside the lock when this method returns. This method","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10036909,"byte_end":10037003,"line_start":381,"line_end":381,"column_start":5,"column_end":99}},{"value":"/ does not provide any guarantees with respect to the ordering of whether contentious readers","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10037008,"byte_end":10037103,"line_start":382,"line_end":382,"column_start":5,"column_end":100}},{"value":"/ or writers will acquire the lock first.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10037108,"byte_end":10037151,"line_start":383,"line_end":383,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10037156,"byte_end":10037159,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ Returns a guard which will release the exclusive access when dropped.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10037164,"byte_end":10037237,"line_start":385,"line_end":385,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10037242,"byte_end":10037245,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10037250,"byte_end":10037262,"line_start":387,"line_end":387,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10037267,"byte_end":10037270,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10037275,"byte_end":10037370,"line_start":389,"line_end":389,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10037375,"byte_end":10037396,"line_start":390,"line_end":390,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10037401,"byte_end":10037404,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10037409,"byte_end":10037421,"line_start":392,"line_end":392,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10037426,"byte_end":10037429,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ This method might panic when called if the lock is already held by the current thread.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10037434,"byte_end":10037524,"line_start":394,"line_end":394,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10037529,"byte_end":10037532,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10037537,"byte_end":10037551,"line_start":396,"line_end":396,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10037556,"byte_end":10037559,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10037564,"byte_end":10037571,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10037576,"byte_end":10037619,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10037624,"byte_end":10037627,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(1);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10037632,"byte_end":10037667,"line_start":401,"line_end":401,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10037672,"byte_end":10037675,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ let mut n = lock.write().unwrap();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10037680,"byte_end":10037718,"line_start":403,"line_end":403,"column_start":5,"column_end":43}},{"value":"/ *n = 2;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10037723,"byte_end":10037734,"line_start":404,"line_end":404,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10037739,"byte_end":10037742,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_err());","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10037747,"byte_end":10037785,"line_start":406,"line_end":406,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10037790,"byte_end":10037797,"line_start":407,"line_end":407,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":444},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10040148,"byte_end":10040168,"line_start":483,"line_end":483,"column_start":12,"column_end":32},"name":"ShardedLockReadGuard","qualname":"::sync::sharded_lock::ShardedLockReadGuard","value":"ShardedLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449}],"decl_id":null,"docs":" A guard used to release the shared read access of a [`ShardedLock`] when dropped.\n","sig":null,"attributes":[{"value":"/ A guard used to release the shared read access of a [`ShardedLock`] when dropped.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10040051,"byte_end":10040136,"line_start":482,"line_end":482,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":462},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10041055,"byte_end":10041076,"line_start":514,"line_end":514,"column_start":12,"column_end":33},"name":"ShardedLockWriteGuard","qualname":"::sync::sharded_lock::ShardedLockWriteGuard","value":"ShardedLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466}],"decl_id":null,"docs":" A guard used to release the exclusive write access of a [`ShardedLock`] when dropped.\n","sig":null,"attributes":[{"value":"/ A guard used to release the exclusive write access of a [`ShardedLock`] when dropped.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10040954,"byte_end":10041043,"line_start":513,"line_end":513,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":502},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10045678,"byte_end":10045687,"line_start":48,"line_end":48,"column_start":12,"column_end":21},"name":"WaitGroup","qualname":"::sync::wait_group::WaitGroup","value":"WaitGroup {  }","parent":null,"children":[{"krate":0,"index":503}],"decl_id":null,"docs":" Enables threads to synchronize the beginning or end of some computation.","sig":null,"attributes":[{"value":"/ Enables threads to synchronize the beginning or end of some computation.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10044466,"byte_end":10044542,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10044543,"byte_end":10044546,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Wait groups vs barriers","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10044547,"byte_end":10044576,"line_start":9,"line_end":9,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10044577,"byte_end":10044580,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `WaitGroup` is very similar to [`Barrier`], but there are a few differences:","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10044581,"byte_end":10044661,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10044662,"byte_end":10044665,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * [`Barrier`] needs to know the number of threads at construction, while `WaitGroup` is cloned to","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10044666,"byte_end":10044767,"line_start":13,"line_end":13,"column_start":1,"column_end":102}},{"value":"/   register more threads.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10044768,"byte_end":10044796,"line_start":14,"line_end":14,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10044797,"byte_end":10044800,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * A [`Barrier`] can be reused even after all threads have synchronized, while a `WaitGroup`","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10044801,"byte_end":10044896,"line_start":16,"line_end":16,"column_start":1,"column_end":96}},{"value":"/   synchronizes threads only once.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10044897,"byte_end":10044934,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10044935,"byte_end":10044938,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * All threads wait for others to reach the [`Barrier`]. With `WaitGroup`, each thread can choose","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10044939,"byte_end":10045039,"line_start":19,"line_end":19,"column_start":1,"column_end":101}},{"value":"/   to either wait for other threads or to continue without blocking.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10045040,"byte_end":10045111,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10045112,"byte_end":10045115,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10045116,"byte_end":10045130,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10045131,"byte_end":10045134,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10045135,"byte_end":10045142,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::sync::WaitGroup;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10045143,"byte_end":10045184,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/ use std::thread;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10045185,"byte_end":10045205,"line_start":26,"line_end":26,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10045206,"byte_end":10045209,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ // Create a new wait group.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10045210,"byte_end":10045241,"line_start":28,"line_end":28,"column_start":1,"column_end":32}},{"value":"/ let wg = WaitGroup::new();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10045242,"byte_end":10045272,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10045273,"byte_end":10045276,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..4 {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10045277,"byte_end":10045296,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/     // Create another reference to the wait group.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10045297,"byte_end":10045351,"line_start":32,"line_end":32,"column_start":1,"column_end":55}},{"value":"/     let wg = wg.clone();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10045352,"byte_end":10045380,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10045381,"byte_end":10045384,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/     thread::spawn(move || {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10045385,"byte_end":10045416,"line_start":35,"line_end":35,"column_start":1,"column_end":32}},{"value":"/         // Do some work.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10045417,"byte_end":10045445,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10045446,"byte_end":10045449,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/         // Drop the reference to the wait group.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10045450,"byte_end":10045502,"line_start":38,"line_end":38,"column_start":1,"column_end":53}},{"value":"/         drop(wg);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10045503,"byte_end":10045524,"line_start":39,"line_end":39,"column_start":1,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10045525,"byte_end":10045536,"line_start":40,"line_end":40,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10045537,"byte_end":10045542,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10045543,"byte_end":10045546,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // Block until all threads have finished their work.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10045547,"byte_end":10045603,"line_start":43,"line_end":43,"column_start":1,"column_end":57}},{"value":"/ wg.wait();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10045604,"byte_end":10045618,"line_start":44,"line_end":44,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10045619,"byte_end":10045626,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10045627,"byte_end":10045630,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ [`Barrier`]: std::sync::Barrier","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10045631,"byte_end":10045666,"line_start":47,"line_end":47,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046279,"byte_end":10046282,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"new","qualname":"<WaitGroup>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new wait group and returns the single reference to it.","sig":null,"attributes":[{"value":"/ Creates a new wait group and returns the single reference to it.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046051,"byte_end":10046119,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046124,"byte_end":10046127,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046132,"byte_end":10046146,"line_start":72,"line_end":72,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046151,"byte_end":10046154,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046159,"byte_end":10046166,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::WaitGroup;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046171,"byte_end":10046212,"line_start":75,"line_end":75,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046217,"byte_end":10046220,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let wg = WaitGroup::new();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046225,"byte_end":10046255,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046260,"byte_end":10046267,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046882,"byte_end":10046886,"line_start":104,"line_end":104,"column_start":12,"column_end":16},"name":"wait","qualname":"<WaitGroup>::wait","value":"pub fn wait(Self)","parent":null,"children":[],"decl_id":null,"docs":" Drops this reference and waits until all other references are dropped.","sig":null,"attributes":[{"value":"/ Drops this reference and waits until all other references are dropped.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046330,"byte_end":10046404,"line_start":83,"line_end":83,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046409,"byte_end":10046412,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046417,"byte_end":10046431,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046436,"byte_end":10046439,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046444,"byte_end":10046451,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::WaitGroup;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046456,"byte_end":10046497,"line_start":88,"line_end":88,"column_start":5,"column_end":46}},{"value":"/ use std::thread;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046502,"byte_end":10046522,"line_start":89,"line_end":89,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046527,"byte_end":10046530,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let wg = WaitGroup::new();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046535,"byte_end":10046565,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046570,"byte_end":10046573,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ thread::spawn({","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046578,"byte_end":10046597,"line_start":93,"line_end":93,"column_start":5,"column_end":24}},{"value":"/     let wg = wg.clone();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046602,"byte_end":10046630,"line_start":94,"line_end":94,"column_start":5,"column_end":33}},{"value":"/     move || {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046635,"byte_end":10046652,"line_start":95,"line_end":95,"column_start":5,"column_end":22}},{"value":"/         // Block until both threads have reached `wait()`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046657,"byte_end":10046719,"line_start":96,"line_end":96,"column_start":5,"column_end":67}},{"value":"/         wg.wait();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046724,"byte_end":10046746,"line_start":97,"line_end":97,"column_start":5,"column_end":27}},{"value":"/     }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046751,"byte_end":10046760,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046765,"byte_end":10046772,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046777,"byte_end":10046780,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ // Block until both threads have reached `wait()`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046785,"byte_end":10046839,"line_start":101,"line_end":101,"column_start":5,"column_end":59}},{"value":"/ wg.wait();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046844,"byte_end":10046858,"line_start":102,"line_end":102,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046863,"byte_end":10046870,"line_start":103,"line_end":103,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":526},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"thread","qualname":"::thread","value":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":794},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":798},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":540},{"krate":0,"index":542},{"krate":0,"index":549},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":563},{"krate":0,"index":597},{"krate":0,"index":602},{"krate":0,"index":565},{"krate":0,"index":574},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":585},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":590}],"decl_id":null,"docs":" Threads that can borrow variables from the stack.","sig":null,"attributes":[{"value":"cfg(not(crossbeam_loom))","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":3288,"byte_end":3315,"line_start":101,"line_end":101,"column_start":9,"column_end":36}},{"value":"/ Threads that can borrow variables from the stack.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10047863,"byte_end":10047916,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10047917,"byte_end":10047920,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Create a scope when spawned threads need to access variables on the stack:","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10047921,"byte_end":10047999,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048000,"byte_end":10048003,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048004,"byte_end":10048011,"line_start":5,"line_end":5,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048012,"byte_end":10048044,"line_start":6,"line_end":6,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048045,"byte_end":10048048,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ let people = vec![","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048049,"byte_end":10048071,"line_start":8,"line_end":8,"column_start":1,"column_end":23}},{"value":"/     \"Alice\".to_string(),","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048072,"byte_end":10048100,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/     \"Bob\".to_string(),","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048101,"byte_end":10048127,"line_start":10,"line_end":10,"column_start":1,"column_end":27}},{"value":"/     \"Carol\".to_string(),","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048128,"byte_end":10048156,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/ ];","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048157,"byte_end":10048163,"line_start":12,"line_end":12,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048164,"byte_end":10048167,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048168,"byte_end":10048191,"line_start":14,"line_end":14,"column_start":1,"column_end":24}},{"value":"/     for person in &people {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048192,"byte_end":10048223,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/         s.spawn(move |_| {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048224,"byte_end":10048254,"line_start":16,"line_end":16,"column_start":1,"column_end":31}},{"value":"/             println!(\"Hello, {}!\", person);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048255,"byte_end":10048302,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/         });","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048303,"byte_end":10048318,"line_start":18,"line_end":18,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048319,"byte_end":10048328,"line_start":19,"line_end":19,"column_start":1,"column_end":10}},{"value":"/ }).unwrap();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048329,"byte_end":10048345,"line_start":20,"line_end":20,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048346,"byte_end":10048353,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048354,"byte_end":10048357,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Why scoped threads?","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048358,"byte_end":10048383,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048384,"byte_end":10048387,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Suppose we wanted to re-write the previous example using plain threads:","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048388,"byte_end":10048463,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048464,"byte_end":10048467,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail,E0597","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048468,"byte_end":10048493,"line_start":27,"line_end":27,"column_start":1,"column_end":26}},{"value":"/ use std::thread;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048494,"byte_end":10048514,"line_start":28,"line_end":28,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048515,"byte_end":10048518,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let people = vec![","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048519,"byte_end":10048541,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"/     \"Alice\".to_string(),","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048542,"byte_end":10048570,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/     \"Bob\".to_string(),","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048571,"byte_end":10048597,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/     \"Carol\".to_string(),","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048598,"byte_end":10048626,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ ];","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048627,"byte_end":10048633,"line_start":34,"line_end":34,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048634,"byte_end":10048637,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let mut threads = Vec::new();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048638,"byte_end":10048671,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048672,"byte_end":10048675,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ for person in &people {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048676,"byte_end":10048703,"line_start":38,"line_end":38,"column_start":1,"column_end":28}},{"value":"/     threads.push(thread::spawn(move || {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048704,"byte_end":10048748,"line_start":39,"line_end":39,"column_start":1,"column_end":45}},{"value":"/         println!(\"Hello, {}!\", person);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048749,"byte_end":10048792,"line_start":40,"line_end":40,"column_start":1,"column_end":44}},{"value":"/     }));","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048793,"byte_end":10048805,"line_start":41,"line_end":41,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048806,"byte_end":10048811,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048812,"byte_end":10048815,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ for thread in threads {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048816,"byte_end":10048843,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/     thread.join().unwrap();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048844,"byte_end":10048875,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048876,"byte_end":10048881,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048882,"byte_end":10048889,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048890,"byte_end":10048893,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ This doesn't work because the borrow checker complains about `people` not living long enough:","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048894,"byte_end":10048991,"line_start":49,"line_end":49,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048992,"byte_end":10048995,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10048996,"byte_end":10049007,"line_start":51,"line_end":51,"column_start":1,"column_end":12}},{"value":"/ error[E0597]: `people` does not live long enough","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10049008,"byte_end":10049060,"line_start":52,"line_end":52,"column_start":1,"column_end":53}},{"value":"/   --> src/main.rs:12:20","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10049061,"byte_end":10049088,"line_start":53,"line_end":53,"column_start":1,"column_end":28}},{"value":"/    |","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10049089,"byte_end":10049097,"line_start":54,"line_end":54,"column_start":1,"column_end":9}},{"value":"/ 12 |     for person in &people {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10049098,"byte_end":10049134,"line_start":55,"line_end":55,"column_start":1,"column_end":37}},{"value":"/    |                    ^^^^^^ borrowed value does not live long enough","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10049135,"byte_end":10049210,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"/ ...","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10049211,"byte_end":10049218,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ 21 | }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10049219,"byte_end":10049229,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/    | - borrowed value only lives until here","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10049230,"byte_end":10049277,"line_start":59,"line_end":59,"column_start":1,"column_end":48}},{"value":"/    |","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10049278,"byte_end":10049286,"line_start":60,"line_end":60,"column_start":1,"column_end":9}},{"value":"/    = note: borrowed value must be valid for the static lifetime...","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10049287,"byte_end":10049357,"line_start":61,"line_end":61,"column_start":1,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10049358,"byte_end":10049365,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10049366,"byte_end":10049369,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The problem here is that spawned threads are not allowed to borrow variables on stack because","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10049370,"byte_end":10049467,"line_start":64,"line_end":64,"column_start":1,"column_end":98}},{"value":"/ the compiler cannot prove they will be joined before `people` is destroyed.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10049468,"byte_end":10049547,"line_start":65,"line_end":65,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10049548,"byte_end":10049551,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Scoped threads are a mechanism to guarantee to the compiler that spawned threads will be joined","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10049552,"byte_end":10049651,"line_start":67,"line_end":67,"column_start":1,"column_end":100}},{"value":"/ before the scope ends.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10049652,"byte_end":10049678,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10049679,"byte_end":10049682,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # How scoped threads work","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10049683,"byte_end":10049712,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10049713,"byte_end":10049716,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ If a variable is borrowed by a thread, the thread must complete before the variable is","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10049717,"byte_end":10049807,"line_start":72,"line_end":72,"column_start":1,"column_end":91}},{"value":"/ destroyed. Threads spawned using [`std::thread::spawn`] can only borrow variables with the","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10049808,"byte_end":10049902,"line_start":73,"line_end":73,"column_start":1,"column_end":95}},{"value":"/ `'static` lifetime because the borrow checker cannot be sure when the thread will complete.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10049903,"byte_end":10049998,"line_start":74,"line_end":74,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10049999,"byte_end":10050002,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ A scope creates a clear boundary between variables outside the scope and threads inside the","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10050003,"byte_end":10050098,"line_start":76,"line_end":76,"column_start":1,"column_end":96}},{"value":"/ scope. Whenever a scope spawns a thread, it promises to join the thread before the scope ends.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10050099,"byte_end":10050197,"line_start":77,"line_end":77,"column_start":1,"column_end":99}},{"value":"/ This way we guarantee to the borrow checker that scoped threads only live within the scope and","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10050198,"byte_end":10050296,"line_start":78,"line_end":78,"column_start":1,"column_end":99}},{"value":"/ can safely access variables outside it.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10050297,"byte_end":10050340,"line_start":79,"line_end":79,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10050341,"byte_end":10050344,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # Nesting scoped threads","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10050345,"byte_end":10050373,"line_start":81,"line_end":81,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10050374,"byte_end":10050377,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Sometimes scoped threads need to spawn more threads within the same scope. This is a little","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10050378,"byte_end":10050473,"line_start":83,"line_end":83,"column_start":1,"column_end":96}},{"value":"/ tricky because argument `s` lives *inside* the invocation of `thread::scope()` and as such","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10050474,"byte_end":10050568,"line_start":84,"line_end":84,"column_start":1,"column_end":95}},{"value":"/ cannot be borrowed by scoped threads:","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10050569,"byte_end":10050610,"line_start":85,"line_end":85,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10050611,"byte_end":10050614,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail,E0373,E0521","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10050615,"byte_end":10050646,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10050647,"byte_end":10050679,"line_start":88,"line_end":88,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10050680,"byte_end":10050683,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10050684,"byte_end":10050707,"line_start":90,"line_end":90,"column_start":1,"column_end":24}},{"value":"/     s.spawn(|_| {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10050708,"byte_end":10050729,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/         // Not going to compile because we're trying to borrow `s`,","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10050730,"byte_end":10050801,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/         // which lives *inside* the scope! :(","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10050802,"byte_end":10050851,"line_start":93,"line_end":93,"column_start":1,"column_end":50}},{"value":"/         s.spawn(|_| println!(\"nested thread\"));","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10050852,"byte_end":10050903,"line_start":94,"line_end":94,"column_start":1,"column_end":52}},{"value":"/     });","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10050904,"byte_end":10050915,"line_start":95,"line_end":95,"column_start":1,"column_end":12}},{"value":"/ });","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10050916,"byte_end":10050923,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10050924,"byte_end":10050931,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10050932,"byte_end":10050935,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ Fortunately, there is a solution. Every scoped thread is passed a reference to its scope as an","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10050936,"byte_end":10051034,"line_start":99,"line_end":99,"column_start":1,"column_end":99}},{"value":"/ argument, which can be used for spawning nested threads:","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10051035,"byte_end":10051095,"line_start":100,"line_end":100,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10051096,"byte_end":10051099,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10051100,"byte_end":10051107,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10051108,"byte_end":10051140,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10051141,"byte_end":10051144,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10051145,"byte_end":10051168,"line_start":105,"line_end":105,"column_start":1,"column_end":24}},{"value":"/     // Note the `|s|` here.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10051169,"byte_end":10051200,"line_start":106,"line_end":106,"column_start":1,"column_end":32}},{"value":"/     s.spawn(|s| {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10051201,"byte_end":10051222,"line_start":107,"line_end":107,"column_start":1,"column_end":22}},{"value":"/         // Yay, this works because we're using a fresh argument `s`! :)","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10051223,"byte_end":10051298,"line_start":108,"line_end":108,"column_start":1,"column_end":76}},{"value":"/         s.spawn(|_| println!(\"nested thread\"));","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10051299,"byte_end":10051350,"line_start":109,"line_end":109,"column_start":1,"column_end":52}},{"value":"/     });","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10051351,"byte_end":10051362,"line_start":110,"line_end":110,"column_start":1,"column_end":12}},{"value":"/ }).unwrap();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10051363,"byte_end":10051379,"line_start":111,"line_end":111,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10051380,"byte_end":10051387,"line_start":112,"line_end":112,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":542},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10052310,"byte_end":10052315,"line_start":148,"line_end":148,"column_start":8,"column_end":13},"name":"scope","qualname":"::thread::scope","value":"pub fn scope<'env, F, R>(F) -> thread::Result<R> where F: FnOnce(&Scope) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new scope for spawning threads.","sig":null,"attributes":[{"value":"/ Creates a new scope for spawning threads.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10051659,"byte_end":10051704,"line_start":128,"line_end":128,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10051705,"byte_end":10051708,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ All child threads that haven't been manually joined will be automatically joined just before","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10051709,"byte_end":10051805,"line_start":130,"line_end":130,"column_start":1,"column_end":97}},{"value":"/ this function invocation ends. If all joined threads have successfully completed, `Ok` is","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10051806,"byte_end":10051899,"line_start":131,"line_end":131,"column_start":1,"column_end":94}},{"value":"/ returned with the return value of `f`. If any of the joined threads has panicked, an `Err` is","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10051900,"byte_end":10051997,"line_start":132,"line_end":132,"column_start":1,"column_end":98}},{"value":"/ returned containing errors from panicked threads.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10051998,"byte_end":10052051,"line_start":133,"line_end":133,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10052052,"byte_end":10052055,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10052056,"byte_end":10052070,"line_start":135,"line_end":135,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10052071,"byte_end":10052074,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10052075,"byte_end":10052082,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10052083,"byte_end":10052115,"line_start":138,"line_end":138,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10052116,"byte_end":10052119,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ let var = vec![1, 2, 3];","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10052120,"byte_end":10052148,"line_start":140,"line_end":140,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10052149,"byte_end":10052152,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10052153,"byte_end":10052176,"line_start":142,"line_end":142,"column_start":1,"column_end":24}},{"value":"/     s.spawn(|_| {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10052177,"byte_end":10052198,"line_start":143,"line_end":143,"column_start":1,"column_end":22}},{"value":"/         println!(\"A child thread borrowing `var`: {:?}\", var);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10052199,"byte_end":10052265,"line_start":144,"line_end":144,"column_start":1,"column_end":67}},{"value":"/     });","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10052266,"byte_end":10052277,"line_start":145,"line_end":145,"column_start":1,"column_end":12}},{"value":"/ }).unwrap();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10052278,"byte_end":10052294,"line_start":146,"line_end":146,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10052295,"byte_end":10052302,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":549},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10053625,"byte_end":10053630,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"Scope","qualname":"::thread::Scope","value":"Scope {  }","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553}],"decl_id":null,"docs":" A scope for spawning threads.\n","sig":null,"attributes":[{"value":"/ A scope for spawning threads.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10053580,"byte_end":10053613,"line_start":192,"line_end":192,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10055416,"byte_end":10055421,"line_start":245,"line_end":245,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Scope>::spawn","value":"pub fn spawn<'scope, F, T>(&'scope Self, F) -> ScopedJoinHandle where\nF: FnOnce(&Scope) -> T, F: Send + 'env, T: Send + 'env","parent":null,"children":[],"decl_id":null,"docs":" Spawns a scoped thread.","sig":null,"attributes":[{"value":"/ Spawns a scoped thread.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10053995,"byte_end":10054022,"line_start":207,"line_end":207,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10054027,"byte_end":10054030,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`spawn`] function in Rust's standard library. The difference","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10054035,"byte_end":10054130,"line_start":209,"line_end":209,"column_start":5,"column_end":100}},{"value":"/ is that this thread is scoped, meaning it's guaranteed to terminate before the scope exits,","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10054135,"byte_end":10054230,"line_start":210,"line_end":210,"column_start":5,"column_end":100}},{"value":"/ allowing it to reference variables outside the scope.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10054235,"byte_end":10054292,"line_start":211,"line_end":211,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10054297,"byte_end":10054300,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The scoped thread is passed a reference to this scope as an argument, which can be used for","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10054305,"byte_end":10054400,"line_start":213,"line_end":213,"column_start":5,"column_end":100}},{"value":"/ spawning nested threads.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10054405,"byte_end":10054433,"line_start":214,"line_end":214,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10054438,"byte_end":10054441,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ The returned [handle](ScopedJoinHandle) can be used to manually","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10054446,"byte_end":10054513,"line_start":216,"line_end":216,"column_start":5,"column_end":72}},{"value":"/ [join](ScopedJoinHandle::join) the thread before the scope exits.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10054518,"byte_end":10054587,"line_start":217,"line_end":217,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10054592,"byte_end":10054595,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ This will create a thread using default parameters of [`ScopedThreadBuilder`], if you want to specify the","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10054600,"byte_end":10054709,"line_start":219,"line_end":219,"column_start":5,"column_end":114}},{"value":"/ stack size or the name of the thread, use this API instead.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10054714,"byte_end":10054777,"line_start":220,"line_end":220,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10054782,"byte_end":10054785,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ [`spawn`]: std::thread::spawn","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10054790,"byte_end":10054823,"line_start":222,"line_end":222,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10054828,"byte_end":10054831,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10054836,"byte_end":10054848,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10054853,"byte_end":10054856,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Panics if the OS fails to create a thread; use [`ScopedThreadBuilder::spawn`]","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10054861,"byte_end":10054942,"line_start":226,"line_end":226,"column_start":5,"column_end":86}},{"value":"/ to recover from such errors.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10054947,"byte_end":10054979,"line_start":227,"line_end":227,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10054984,"byte_end":10054987,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10054992,"byte_end":10055006,"line_start":229,"line_end":229,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10055011,"byte_end":10055014,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10055019,"byte_end":10055026,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10055031,"byte_end":10055063,"line_start":232,"line_end":232,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10055068,"byte_end":10055071,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10055076,"byte_end":10055099,"line_start":234,"line_end":234,"column_start":5,"column_end":28}},{"value":"/     let handle = s.spawn(|_| {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10055104,"byte_end":10055138,"line_start":235,"line_end":235,"column_start":5,"column_end":39}},{"value":"/         println!(\"A child thread is running\");","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10055143,"byte_end":10055193,"line_start":236,"line_end":236,"column_start":5,"column_end":55}},{"value":"/         42","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10055198,"byte_end":10055212,"line_start":237,"line_end":237,"column_start":5,"column_end":19}},{"value":"/     });","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10055217,"byte_end":10055228,"line_start":238,"line_end":238,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10055233,"byte_end":10055236,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/     // Join the thread and retrieve its result.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10055241,"byte_end":10055292,"line_start":240,"line_end":240,"column_start":5,"column_end":56}},{"value":"/     let res = handle.join().unwrap();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10055297,"byte_end":10055338,"line_start":241,"line_end":241,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(res, 42);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10055343,"byte_end":10055371,"line_start":242,"line_end":242,"column_start":5,"column_end":33}},{"value":"/ }).unwrap();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10055376,"byte_end":10055392,"line_start":243,"line_end":243,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10055397,"byte_end":10055404,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10056046,"byte_end":10056053,"line_start":269,"line_end":269,"column_start":12,"column_end":19},"name":"builder","qualname":"<Scope>::builder","value":"pub fn builder<'scope>(&'scope Self) -> ScopedThreadBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a builder that can configure a thread before spawning.","sig":null,"attributes":[{"value":"/ Creates a builder that can configure a thread before spawning.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10055698,"byte_end":10055764,"line_start":256,"line_end":256,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10055769,"byte_end":10055772,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10055777,"byte_end":10055791,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10055796,"byte_end":10055799,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10055804,"byte_end":10055811,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10055816,"byte_end":10055848,"line_start":261,"line_end":261,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10055853,"byte_end":10055856,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10055861,"byte_end":10055884,"line_start":263,"line_end":263,"column_start":5,"column_end":28}},{"value":"/     s.builder()","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10055889,"byte_end":10055908,"line_start":264,"line_end":264,"column_start":5,"column_end":24}},{"value":"/         .spawn(|_| println!(\"A child thread is running\"))","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10055913,"byte_end":10055974,"line_start":265,"line_end":265,"column_start":5,"column_end":66}},{"value":"/         .unwrap();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10055979,"byte_end":10056001,"line_start":266,"line_end":266,"column_start":5,"column_end":27}},{"value":"/ }).unwrap();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10056006,"byte_end":10056022,"line_start":267,"line_end":267,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10056027,"byte_end":10056034,"line_start":268,"line_end":268,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":597},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057496,"byte_end":10057515,"line_start":316,"line_end":316,"column_start":12,"column_end":31},"name":"ScopedThreadBuilder","qualname":"::thread::ScopedThreadBuilder","value":"ScopedThreadBuilder {  }","parent":null,"children":[{"krate":0,"index":600},{"krate":0,"index":601}],"decl_id":null,"docs":" Configures the properties of a new thread.","sig":null,"attributes":[{"value":"/ Configures the properties of a new thread.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10056368,"byte_end":10056414,"line_start":283,"line_end":283,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10056415,"byte_end":10056418,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ The two configurable properties are:","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10056419,"byte_end":10056459,"line_start":285,"line_end":285,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10056460,"byte_end":10056463,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ - [`name`]: Specifies an [associated name for the thread][naming-threads].","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10056464,"byte_end":10056542,"line_start":287,"line_end":287,"column_start":1,"column_end":79}},{"value":"/ - [`stack_size`]: Specifies the [desired stack size for the thread][stack-size].","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10056543,"byte_end":10056627,"line_start":288,"line_end":288,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10056628,"byte_end":10056631,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ The [`spawn`] method will take ownership of the builder and return an [`io::Result`] of the","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10056632,"byte_end":10056727,"line_start":290,"line_end":290,"column_start":1,"column_end":96}},{"value":"/ thread handle with the given configuration.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10056728,"byte_end":10056775,"line_start":291,"line_end":291,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10056776,"byte_end":10056779,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ The [`Scope::spawn`] method uses a builder with default configuration and unwraps its return","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10056780,"byte_end":10056876,"line_start":293,"line_end":293,"column_start":1,"column_end":97}},{"value":"/ value. You may want to use this builder when you want to recover from a failure to launch a","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10056877,"byte_end":10056972,"line_start":294,"line_end":294,"column_start":1,"column_end":96}},{"value":"/ thread.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10056973,"byte_end":10056984,"line_start":295,"line_end":295,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10056985,"byte_end":10056988,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10056989,"byte_end":10057003,"line_start":297,"line_end":297,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057004,"byte_end":10057007,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057008,"byte_end":10057015,"line_start":299,"line_end":299,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057016,"byte_end":10057048,"line_start":300,"line_end":300,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057049,"byte_end":10057052,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057053,"byte_end":10057076,"line_start":302,"line_end":302,"column_start":1,"column_end":24}},{"value":"/     s.builder()","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057077,"byte_end":10057096,"line_start":303,"line_end":303,"column_start":1,"column_end":20}},{"value":"/         .spawn(|_| println!(\"Running a child thread\"))","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057097,"byte_end":10057155,"line_start":304,"line_end":304,"column_start":1,"column_end":59}},{"value":"/         .unwrap();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057156,"byte_end":10057178,"line_start":305,"line_end":305,"column_start":1,"column_end":23}},{"value":"/ }).unwrap();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057179,"byte_end":10057195,"line_start":306,"line_end":306,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057196,"byte_end":10057203,"line_start":307,"line_end":307,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057204,"byte_end":10057207,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ [`name`]: ScopedThreadBuilder::name","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057208,"byte_end":10057247,"line_start":309,"line_end":309,"column_start":1,"column_end":40}},{"value":"/ [`stack_size`]: ScopedThreadBuilder::stack_size","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057248,"byte_end":10057299,"line_start":310,"line_end":310,"column_start":1,"column_end":52}},{"value":"/ [`spawn`]: ScopedThreadBuilder::spawn","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057300,"byte_end":10057341,"line_start":311,"line_end":311,"column_start":1,"column_end":42}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057342,"byte_end":10057377,"line_start":312,"line_end":312,"column_start":1,"column_end":36}},{"value":"/ [naming-threads]: std::thread#naming-threads","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057378,"byte_end":10057426,"line_start":313,"line_end":313,"column_start":1,"column_end":49}},{"value":"/ [stack-size]: std::thread#stack-size","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057427,"byte_end":10057467,"line_start":314,"line_end":314,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10058274,"byte_end":10058278,"line_start":343,"line_end":343,"column_start":12,"column_end":16},"name":"name","qualname":"<ScopedThreadBuilder>::name","value":"pub fn name(Self, String) -> ScopedThreadBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the name for the new thread.","sig":null,"attributes":[{"value":"/ Sets the name for the new thread.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057656,"byte_end":10057693,"line_start":322,"line_end":322,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057698,"byte_end":10057701,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ The name must not contain null bytes (`\\0`).","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057706,"byte_end":10057754,"line_start":324,"line_end":324,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057759,"byte_end":10057762,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ For more information about named threads, see [here][naming-threads].","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057767,"byte_end":10057840,"line_start":326,"line_end":326,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057845,"byte_end":10057848,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057853,"byte_end":10057867,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057872,"byte_end":10057875,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057880,"byte_end":10057887,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057892,"byte_end":10057924,"line_start":331,"line_end":331,"column_start":5,"column_end":37}},{"value":"/ use std::thread::current;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057929,"byte_end":10057958,"line_start":332,"line_end":332,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057963,"byte_end":10057966,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057971,"byte_end":10057994,"line_start":334,"line_end":334,"column_start":5,"column_end":28}},{"value":"/     s.builder()","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057999,"byte_end":10058018,"line_start":335,"line_end":335,"column_start":5,"column_end":24}},{"value":"/         .name(\"my thread\".to_string())","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10058023,"byte_end":10058065,"line_start":336,"line_end":336,"column_start":5,"column_end":47}},{"value":"/         .spawn(|_| assert_eq!(current().name(), Some(\"my thread\")))","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10058070,"byte_end":10058141,"line_start":337,"line_end":337,"column_start":5,"column_end":76}},{"value":"/         .unwrap();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10058146,"byte_end":10058168,"line_start":338,"line_end":338,"column_start":5,"column_end":27}},{"value":"/ }).unwrap();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10058173,"byte_end":10058189,"line_start":339,"line_end":339,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10058194,"byte_end":10058201,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10058206,"byte_end":10058209,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ [naming-threads]: std::thread#naming-threads","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10058214,"byte_end":10058262,"line_start":342,"line_end":342,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10058983,"byte_end":10058993,"line_start":368,"line_end":368,"column_start":12,"column_end":22},"name":"stack_size","qualname":"<ScopedThreadBuilder>::stack_size","value":"pub fn stack_size(Self, usize) -> ScopedThreadBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the stack for the new thread.","sig":null,"attributes":[{"value":"/ Sets the size of the stack for the new thread.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10058414,"byte_end":10058464,"line_start":348,"line_end":348,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10058469,"byte_end":10058472,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ The stack size is measured in bytes.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10058477,"byte_end":10058517,"line_start":350,"line_end":350,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10058522,"byte_end":10058525,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ For more information about the stack size for threads, see [here][stack-size].","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10058530,"byte_end":10058612,"line_start":352,"line_end":352,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10058617,"byte_end":10058620,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10058625,"byte_end":10058639,"line_start":354,"line_end":354,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10058644,"byte_end":10058647,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10058652,"byte_end":10058659,"line_start":356,"line_end":356,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10058664,"byte_end":10058696,"line_start":357,"line_end":357,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10058701,"byte_end":10058704,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10058709,"byte_end":10058732,"line_start":359,"line_end":359,"column_start":5,"column_end":28}},{"value":"/     s.builder()","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10058737,"byte_end":10058756,"line_start":360,"line_end":360,"column_start":5,"column_end":24}},{"value":"/         .stack_size(32 * 1024)","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10058761,"byte_end":10058795,"line_start":361,"line_end":361,"column_start":5,"column_end":39}},{"value":"/         .spawn(|_| println!(\"Running a child thread\"))","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10058800,"byte_end":10058858,"line_start":362,"line_end":362,"column_start":5,"column_end":63}},{"value":"/         .unwrap();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10058863,"byte_end":10058885,"line_start":363,"line_end":363,"column_start":5,"column_end":27}},{"value":"/ }).unwrap();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10058890,"byte_end":10058906,"line_start":364,"line_end":364,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10058911,"byte_end":10058918,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10058923,"byte_end":10058926,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ [stack-size]: std::thread#stack-size","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10058931,"byte_end":10058971,"line_start":367,"line_end":367,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10060269,"byte_end":10060274,"line_start":410,"line_end":410,"column_start":12,"column_end":17},"name":"spawn","qualname":"<ScopedThreadBuilder>::spawn","value":"pub fn spawn<F, T>(Self, F) -> io::Result<ScopedJoinHandle> where\nF: FnOnce(&Scope) -> T, F: Send + 'env, T: Send + 'env","parent":null,"children":[],"decl_id":null,"docs":" Spawns a scoped thread with this configuration.","sig":null,"attributes":[{"value":"/ Spawns a scoped thread with this configuration.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10059134,"byte_end":10059185,"line_start":373,"line_end":373,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10059190,"byte_end":10059193,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ The scoped thread is passed a reference to this scope as an argument, which can be used for","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10059198,"byte_end":10059293,"line_start":375,"line_end":375,"column_start":5,"column_end":100}},{"value":"/ spawning nested threads.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10059298,"byte_end":10059326,"line_start":376,"line_end":376,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10059331,"byte_end":10059334,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ The returned handle can be used to manually join the thread before the scope exits.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10059339,"byte_end":10059426,"line_start":378,"line_end":378,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10059431,"byte_end":10059434,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10059439,"byte_end":10059451,"line_start":380,"line_end":380,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10059456,"byte_end":10059459,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ Unlike the [`Scope::spawn`] method, this method yields an","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10059464,"byte_end":10059525,"line_start":382,"line_end":382,"column_start":5,"column_end":66}},{"value":"/ [`io::Result`] to capture any failure to create the thread at","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10059530,"byte_end":10059595,"line_start":383,"line_end":383,"column_start":5,"column_end":70}},{"value":"/ the OS level.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10059600,"byte_end":10059617,"line_start":384,"line_end":384,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10059622,"byte_end":10059625,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10059630,"byte_end":10059665,"line_start":386,"line_end":386,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10059670,"byte_end":10059673,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10059678,"byte_end":10059690,"line_start":388,"line_end":388,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10059695,"byte_end":10059698,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ Panics if a thread name was set and it contained null bytes.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10059703,"byte_end":10059767,"line_start":390,"line_end":390,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10059772,"byte_end":10059775,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10059780,"byte_end":10059794,"line_start":392,"line_end":392,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10059799,"byte_end":10059802,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10059807,"byte_end":10059814,"line_start":394,"line_end":394,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10059819,"byte_end":10059851,"line_start":395,"line_end":395,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10059856,"byte_end":10059859,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10059864,"byte_end":10059887,"line_start":397,"line_end":397,"column_start":5,"column_end":28}},{"value":"/     let handle = s.builder()","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10059892,"byte_end":10059924,"line_start":398,"line_end":398,"column_start":5,"column_end":37}},{"value":"/         .spawn(|_| {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10059929,"byte_end":10059953,"line_start":399,"line_end":399,"column_start":5,"column_end":29}},{"value":"/             println!(\"A child thread is running\");","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10059958,"byte_end":10060012,"line_start":400,"line_end":400,"column_start":5,"column_end":59}},{"value":"/             42","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10060017,"byte_end":10060035,"line_start":401,"line_end":401,"column_start":5,"column_end":23}},{"value":"/         })","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10060040,"byte_end":10060054,"line_start":402,"line_end":402,"column_start":5,"column_end":19}},{"value":"/         .unwrap();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10060059,"byte_end":10060081,"line_start":403,"line_end":403,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10060086,"byte_end":10060089,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/     // Join the thread and retrieve its result.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10060094,"byte_end":10060145,"line_start":405,"line_end":405,"column_start":5,"column_end":56}},{"value":"/     let res = handle.join().unwrap();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10060150,"byte_end":10060191,"line_start":406,"line_end":406,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(res, 42);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10060196,"byte_end":10060224,"line_start":407,"line_end":407,"column_start":5,"column_end":33}},{"value":"/ }).unwrap();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10060229,"byte_end":10060245,"line_start":408,"line_end":408,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10060250,"byte_end":10060257,"line_start":409,"line_end":409,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":578},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10062557,"byte_end":10062573,"line_start":476,"line_end":476,"column_start":12,"column_end":28},"name":"ScopedJoinHandle","qualname":"::thread::ScopedJoinHandle","value":"ScopedJoinHandle {  }","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584}],"decl_id":null,"docs":" A handle that can be used to join its scoped thread.","sig":null,"attributes":[{"value":"/ A handle that can be used to join its scoped thread.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10062376,"byte_end":10062432,"line_start":472,"line_end":472,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10062433,"byte_end":10062436,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`Scope::spawn`] method and the","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10062437,"byte_end":10062502,"line_start":474,"line_end":474,"column_start":1,"column_end":66}},{"value":"/ [`ScopedThreadBuilder::spawn`] method.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10062503,"byte_end":10062545,"line_start":475,"line_end":475,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10063881,"byte_end":10063885,"line_start":518,"line_end":518,"column_start":12,"column_end":16},"name":"join","qualname":"<ScopedJoinHandle>::join","value":"pub fn join(Self) -> thread::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Waits for the thread to finish and returns its result.","sig":null,"attributes":[{"value":"/ Waits for the thread to finish and returns its result.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10062969,"byte_end":10063027,"line_start":491,"line_end":491,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10063032,"byte_end":10063035,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ If the child thread panics, an error is returned.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10063040,"byte_end":10063093,"line_start":493,"line_end":493,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10063098,"byte_end":10063101,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10063106,"byte_end":10063118,"line_start":495,"line_end":495,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10063123,"byte_end":10063126,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ This function may panic on some platforms if a thread attempts to join itself or otherwise","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10063131,"byte_end":10063225,"line_start":497,"line_end":497,"column_start":5,"column_end":99}},{"value":"/ may create a deadlock with joining threads.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10063230,"byte_end":10063277,"line_start":498,"line_end":498,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10063282,"byte_end":10063285,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10063290,"byte_end":10063304,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10063309,"byte_end":10063312,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10063317,"byte_end":10063324,"line_start":502,"line_end":502,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10063329,"byte_end":10063361,"line_start":503,"line_end":503,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10063366,"byte_end":10063369,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10063374,"byte_end":10063397,"line_start":505,"line_end":505,"column_start":5,"column_end":28}},{"value":"/     let handle1 = s.spawn(|_| println!(\"I'm a happy thread :)\"));","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10063402,"byte_end":10063471,"line_start":506,"line_end":506,"column_start":5,"column_end":74}},{"value":"/     let handle2 = s.spawn(|_| panic!(\"I'm a sad thread :(\"));","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10063476,"byte_end":10063541,"line_start":507,"line_end":507,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10063546,"byte_end":10063549,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/     // Join the first thread and verify that it succeeded.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10063554,"byte_end":10063616,"line_start":509,"line_end":509,"column_start":5,"column_end":67}},{"value":"/     let res = handle1.join();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10063621,"byte_end":10063654,"line_start":510,"line_end":510,"column_start":5,"column_end":38}},{"value":"/     assert!(res.is_ok());","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10063659,"byte_end":10063688,"line_start":511,"line_end":511,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10063693,"byte_end":10063696,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/     // Join the second thread and verify that it panicked.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10063701,"byte_end":10063763,"line_start":513,"line_end":513,"column_start":5,"column_end":67}},{"value":"/     let res = handle2.join();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10063768,"byte_end":10063801,"line_start":514,"line_end":514,"column_start":5,"column_end":38}},{"value":"/     assert!(res.is_err());","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10063806,"byte_end":10063836,"line_start":515,"line_end":515,"column_start":5,"column_end":35}},{"value":"/ }).unwrap();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10063841,"byte_end":10063857,"line_start":516,"line_end":516,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10063862,"byte_end":10063869,"line_start":517,"line_end":517,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10064694,"byte_end":10064700,"line_start":541,"line_end":541,"column_start":12,"column_end":18},"name":"thread","qualname":"<ScopedJoinHandle>::thread","value":"pub fn thread(&Self) -> &thread::Thread","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the underlying thread.","sig":null,"attributes":[{"value":"/ Returns a handle to the underlying thread.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10064333,"byte_end":10064379,"line_start":529,"line_end":529,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10064384,"byte_end":10064387,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10064392,"byte_end":10064406,"line_start":531,"line_end":531,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10064411,"byte_end":10064414,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10064419,"byte_end":10064426,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10064431,"byte_end":10064463,"line_start":534,"line_end":534,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10064468,"byte_end":10064471,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10064476,"byte_end":10064499,"line_start":536,"line_end":536,"column_start":5,"column_end":28}},{"value":"/     let handle = s.spawn(|_| println!(\"A child thread is running\"));","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10064504,"byte_end":10064576,"line_start":537,"line_end":537,"column_start":5,"column_end":77}},{"value":"/     println!(\"The child thread ID: {:?}\", handle.thread().id());","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10064581,"byte_end":10064649,"line_start":538,"line_end":538,"column_start":5,"column_end":73}},{"value":"/ }).unwrap();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10064654,"byte_end":10064670,"line_start":539,"line_end":539,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10064675,"byte_end":10064682,"line_start":540,"line_end":540,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/seq_lock.rs","byte_start":10008197,"byte_end":10008204,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/seq_lock.rs","byte_start":10009849,"byte_end":10009866,"line_start":75,"line_end":75,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/seq_lock.rs","byte_start":10010191,"byte_end":10010208,"line_start":87,"line_end":87,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":5974,"byte_end":5984,"line_start":44,"line_end":44,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6021,"byte_end":6031,"line_start":45,"line_end":45,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6086,"byte_end":6096,"line_start":48,"line_end":48,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6153,"byte_end":6163,"line_start":50,"line_end":50,"column_start":27,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6179,"byte_end":6189,"line_start":52,"line_end":52,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9146,"byte_end":9156,"line_start":157,"line_end":157,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9528,"byte_end":9538,"line_start":175,"line_end":175,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9979,"byte_end":9989,"line_start":194,"line_end":194,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":10339,"byte_end":10349,"line_start":211,"line_end":211,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":23173,"byte_end":23183,"line_start":580,"line_end":580,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":25024,"byte_end":25034,"line_start":645,"line_end":645,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":25143,"byte_end":25153,"line_start":651,"line_end":651,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":25292,"byte_end":25302,"line_start":658,"line_end":658,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":28146,"byte_end":28156,"line_start":726,"line_end":726,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/consume.rs","byte_start":38101,"byte_end":38110,"line_start":83,"line_end":83,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":43213,"byte_end":43224,"line_start":132,"line_end":132,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":43261,"byte_end":43272,"line_start":133,"line_end":133,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":43288,"byte_end":43299,"line_start":135,"line_end":135,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":43965,"byte_end":43976,"line_start":165,"line_end":165,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":44082,"byte_end":44093,"line_start":173,"line_end":173,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":44207,"byte_end":44218,"line_start":179,"line_end":179,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":44417,"byte_end":44428,"line_start":187,"line_end":187,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46877,"byte_end":46884,"line_start":84,"line_end":84,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":52805,"byte_end":52812,"line_start":281,"line_end":281,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":53056,"byte_end":53063,"line_start":290,"line_end":290,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10013087,"byte_end":10013093,"line_start":58,"line_end":58,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10013115,"byte_end":10013121,"line_start":60,"line_end":60,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10013468,"byte_end":10013474,"line_start":75,"line_end":75,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10016920,"byte_end":10016926,"line_start":207,"line_end":207,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017159,"byte_end":10017167,"line_start":218,"line_end":218,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017192,"byte_end":10017200,"line_start":219,"line_end":219,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017210,"byte_end":10017218,"line_start":221,"line_end":221,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10019084,"byte_end":10019092,"line_start":292,"line_end":292,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10019215,"byte_end":10019223,"line_start":298,"line_end":298,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10019501,"byte_end":10019506,"line_start":316,"line_end":316,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10026868,"byte_end":10026879,"line_start":84,"line_end":84,"column_start":40,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10026932,"byte_end":10026943,"line_start":85,"line_end":85,"column_start":47,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10026982,"byte_end":10026993,"line_start":87,"line_end":87,"column_start":32,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10027034,"byte_end":10027045,"line_start":88,"line_end":88,"column_start":35,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10027061,"byte_end":10027072,"line_start":90,"line_end":90,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10028538,"byte_end":10028549,"line_start":145,"line_end":145,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10038912,"byte_end":10038923,"line_start":444,"line_end":444,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10039461,"byte_end":10039478,"line_start":457,"line_end":457,"column_start":37,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10039841,"byte_end":10039852,"line_start":470,"line_end":470,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10039969,"byte_end":10039980,"line_start":476,"line_end":476,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10040345,"byte_end":10040365,"line_start":489,"line_end":489,"column_start":40,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10040403,"byte_end":10040423,"line_start":491,"line_end":491,"column_start":27,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10040570,"byte_end":10040590,"line_start":499,"line_end":499,"column_start":36,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10040828,"byte_end":10040848,"line_start":507,"line_end":507,"column_start":49,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10041217,"byte_end":10041238,"line_start":519,"line_end":519,"column_start":40,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10041275,"byte_end":10041296,"line_start":521,"line_end":521,"column_start":26,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10041680,"byte_end":10041701,"line_start":534,"line_end":534,"column_start":36,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10041940,"byte_end":10041961,"line_start":542,"line_end":542,"column_start":49,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10042093,"byte_end":10042114,"line_start":548,"line_end":548,"column_start":27,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10042255,"byte_end":10042276,"line_start":556,"line_end":556,"column_start":30,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10043574,"byte_end":10043586,"line_start":602,"line_end":602,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10045829,"byte_end":10045838,"line_start":58,"line_end":58,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046035,"byte_end":10046044,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":510},{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10047205,"byte_end":10047214,"line_start":119,"line_end":119,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10047423,"byte_end":10047432,"line_start":130,"line_end":130,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10047648,"byte_end":10047657,"line_start":141,"line_end":141,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10053952,"byte_end":10053957,"line_start":204,"line_end":204,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10053977,"byte_end":10053982,"line_start":206,"line_end":206,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10056254,"byte_end":10056259,"line_start":277,"line_end":277,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057616,"byte_end":10057635,"line_start":321,"line_end":321,"column_start":20,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10062297,"byte_end":10062313,"line_start":469,"line_end":469,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10062348,"byte_end":10062364,"line_start":470,"line_end":470,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10062939,"byte_end":10062955,"line_start":490,"line_end":490,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10064890,"byte_end":10064906,"line_start":550,"line_end":550,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10066117,"byte_end":10066133,"line_start":581,"line_end":581,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":3076,"byte_end":3082,"line_start":87,"line_end":87,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":25}},{"kind":"Mod","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":3273,"byte_end":3277,"line_start":99,"line_end":99,"column_start":17,"column_end":21},"ref_id":{"krate":0,"index":324}},{"kind":"Mod","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/lib.rs","byte_start":3332,"byte_end":3338,"line_start":102,"line_end":102,"column_start":17,"column_end":23},"ref_id":{"krate":0,"index":526}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/seq_lock.rs","byte_start":10008197,"byte_end":10008204,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/seq_lock.rs","byte_start":10009849,"byte_end":10009866,"line_start":75,"line_end":75,"column_start":6,"column_end":23},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/seq_lock.rs","byte_start":10010191,"byte_end":10010208,"line_start":87,"line_end":87,"column_start":15,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":185},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":5974,"byte_end":5984,"line_start":44,"line_end":44,"column_start":31,"column_end":41},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":39},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6021,"byte_end":6031,"line_start":45,"line_end":45,"column_start":31,"column_end":41},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":39},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6086,"byte_end":6096,"line_start":48,"line_end":48,"column_start":24,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":39},"to":{"krate":1,"index":4009}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6153,"byte_end":6163,"line_start":50,"line_end":50,"column_start":27,"column_end":37},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":39},"to":{"krate":1,"index":4010}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":6179,"byte_end":6189,"line_start":52,"line_end":52,"column_start":9,"column_end":19},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":39},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9146,"byte_end":9156,"line_start":157,"line_end":157,"column_start":17,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":39},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9528,"byte_end":9538,"line_start":175,"line_end":175,"column_start":18,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":39},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":9979,"byte_end":9989,"line_start":194,"line_end":194,"column_start":15,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":39},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":10339,"byte_end":10349,"line_start":211,"line_end":211,"column_start":20,"column_end":30},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":39},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":23173,"byte_end":23183,"line_start":580,"line_end":580,"column_start":6,"column_end":16},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":39},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":25024,"byte_end":25034,"line_start":645,"line_end":645,"column_start":30,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":39},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":25143,"byte_end":25153,"line_start":651,"line_end":651,"column_start":21,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":39},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":25292,"byte_end":25302,"line_start":658,"line_end":658,"column_start":43,"column_end":53},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":39},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/atomic_cell.rs","byte_start":28146,"byte_end":28156,"line_start":726,"line_end":726,"column_start":6,"column_end":16},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":94},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/atomic/consume.rs","byte_start":38101,"byte_end":38110,"line_start":83,"line_end":83,"column_start":47,"column_end":56},"kind":{"Impl":{"id":17}},"from":{"krate":2,"index":6582},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":43213,"byte_end":43224,"line_start":132,"line_end":132,"column_start":31,"column_end":42},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":298},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":43261,"byte_end":43272,"line_start":133,"line_end":133,"column_start":31,"column_end":42},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":298},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":43288,"byte_end":43299,"line_start":135,"line_end":135,"column_start":9,"column_end":20},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":43965,"byte_end":43976,"line_start":165,"line_end":165,"column_start":19,"column_end":30},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":298},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":44082,"byte_end":44093,"line_start":173,"line_end":173,"column_start":22,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":298},"to":{"krate":2,"index":2294}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":44207,"byte_end":44218,"line_start":179,"line_end":179,"column_start":36,"column_end":47},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":298},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/cache_padded.rs","byte_start":44417,"byte_end":44428,"line_start":187,"line_end":187,"column_start":21,"column_end":32},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":298},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":46877,"byte_end":46884,"line_start":84,"line_end":84,"column_start":6,"column_end":13},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":52805,"byte_end":52812,"line_start":281,"line_end":281,"column_start":21,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":157},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/backoff.rs","byte_start":53056,"byte_end":53063,"line_start":290,"line_end":290,"column_start":18,"column_end":25},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":157},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10013087,"byte_end":10013093,"line_start":58,"line_end":58,"column_start":22,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":337},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10013115,"byte_end":10013121,"line_start":60,"line_end":60,"column_start":18,"column_end":24},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":337},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10013468,"byte_end":10013474,"line_start":75,"line_end":75,"column_start":6,"column_end":12},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10016920,"byte_end":10016926,"line_start":207,"line_end":207,"column_start":21,"column_end":27},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":337},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017159,"byte_end":10017167,"line_start":218,"line_end":218,"column_start":22,"column_end":30},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":353},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017192,"byte_end":10017200,"line_start":219,"line_end":219,"column_start":22,"column_end":30},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":353},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10017210,"byte_end":10017218,"line_start":221,"line_end":221,"column_start":6,"column_end":14},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":353},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10019084,"byte_end":10019092,"line_start":292,"line_end":292,"column_start":21,"column_end":29},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":353},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10019215,"byte_end":10019223,"line_start":298,"line_end":298,"column_start":16,"column_end":24},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":353},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/parker.rs","byte_start":10019501,"byte_end":10019506,"line_start":316,"line_end":316,"column_start":6,"column_end":11},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10026868,"byte_end":10026879,"line_start":84,"line_end":84,"column_start":40,"column_end":51},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":406},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10026932,"byte_end":10026943,"line_start":85,"line_end":85,"column_start":47,"column_end":58},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":406},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10026982,"byte_end":10026993,"line_start":87,"line_end":87,"column_start":32,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":406},"to":{"krate":1,"index":4009}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10027034,"byte_end":10027045,"line_start":88,"line_end":88,"column_start":35,"column_end":46},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":406},"to":{"krate":1,"index":4010}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10027061,"byte_end":10027072,"line_start":90,"line_end":90,"column_start":9,"column_end":20},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10028538,"byte_end":10028549,"line_start":145,"line_end":145,"column_start":17,"column_end":28},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10038912,"byte_end":10038923,"line_start":444,"line_end":444,"column_start":45,"column_end":56},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":406},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10039461,"byte_end":10039478,"line_start":457,"line_end":457,"column_start":37,"column_end":54},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":434},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10039841,"byte_end":10039852,"line_start":470,"line_end":470,"column_start":30,"column_end":41},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":406},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10039969,"byte_end":10039980,"line_start":476,"line_end":476,"column_start":21,"column_end":32},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":406},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10040345,"byte_end":10040365,"line_start":489,"line_end":489,"column_start":40,"column_end":60},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10040403,"byte_end":10040423,"line_start":491,"line_end":491,"column_start":27,"column_end":47},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10040570,"byte_end":10040590,"line_start":499,"line_end":499,"column_start":36,"column_end":56},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10040828,"byte_end":10040848,"line_start":507,"line_end":507,"column_start":49,"column_end":69},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10041217,"byte_end":10041238,"line_start":519,"line_end":519,"column_start":40,"column_end":61},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":462},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10041275,"byte_end":10041296,"line_start":521,"line_end":521,"column_start":26,"column_end":47},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":462},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10041680,"byte_end":10041701,"line_start":534,"line_end":534,"column_start":36,"column_end":57},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":462},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10041940,"byte_end":10041961,"line_start":542,"line_end":542,"column_start":49,"column_end":70},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":462},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10042093,"byte_end":10042114,"line_start":548,"line_end":548,"column_start":27,"column_end":48},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":462},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10042255,"byte_end":10042276,"line_start":556,"line_end":556,"column_start":30,"column_end":51},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":462},"to":{"krate":2,"index":2294}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/sharded_lock.rs","byte_start":10043574,"byte_end":10043586,"line_start":602,"line_end":602,"column_start":15,"column_end":27},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":491},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10045829,"byte_end":10045838,"line_start":58,"line_end":58,"column_start":18,"column_end":27},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":502},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10046035,"byte_end":10046044,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10047205,"byte_end":10047214,"line_start":119,"line_end":119,"column_start":15,"column_end":24},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":502},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10047423,"byte_end":10047432,"line_start":130,"line_end":130,"column_start":16,"column_end":25},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":502},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/sync/wait_group.rs","byte_start":10047648,"byte_end":10047657,"line_start":141,"line_end":141,"column_start":21,"column_end":30},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":502},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10053952,"byte_end":10053957,"line_start":204,"line_end":204,"column_start":22,"column_end":27},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":549},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10053977,"byte_end":10053982,"line_start":206,"line_end":206,"column_start":12,"column_end":17},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10056254,"byte_end":10056259,"line_start":277,"line_end":277,"column_start":21,"column_end":26},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":549},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10057616,"byte_end":10057635,"line_start":321,"line_end":321,"column_start":20,"column_end":39},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10062297,"byte_end":10062313,"line_start":469,"line_end":469,"column_start":25,"column_end":41},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":578},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10062348,"byte_end":10062364,"line_start":470,"line_end":470,"column_start":25,"column_end":41},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":578},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10062939,"byte_end":10062955,"line_start":490,"line_end":490,"column_start":9,"column_end":25},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10064890,"byte_end":10064906,"line_start":550,"line_end":550,"column_start":35,"column_end":51},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":578},"to":{"krate":1,"index":9386}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.6/src/thread.rs","byte_start":10066117,"byte_end":10066133,"line_start":581,"line_end":581,"column_start":24,"column_end":40},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":578},"to":{"krate":2,"index":6953}}]}