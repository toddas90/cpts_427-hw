{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6","program":"/home/andrew/.rustup/toolchains/1.51.0-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","crossbeam_epoch","--edition=2018","/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=2415fc01b3e7ab49","-C","extra-filename=-2415fc01b3e7ab49","--out-dir","/home/andrew/Workspace/spring_2022/cpts_427-hw/hw1/hw1-solution-extra/target/rls/debug/deps","-L","dependency=/home/andrew/Workspace/spring_2022/cpts_427-hw/hw1/hw1-solution-extra/target/rls/debug/deps","--extern","cfg_if=/home/andrew/Workspace/spring_2022/cpts_427-hw/hw1/hw1-solution-extra/target/rls/debug/deps/libcfg_if-f4ca369f7d863b9e.rmeta","--extern","crossbeam_utils=/home/andrew/Workspace/spring_2022/cpts_427-hw/hw1/hw1-solution-extra/target/rls/debug/deps/libcrossbeam_utils-254fcc58a136c890.rmeta","--extern","lazy_static=/home/andrew/Workspace/spring_2022/cpts_427-hw/hw1/hw1-solution-extra/target/rls/debug/deps/liblazy_static-add60b10b58fc28f.rmeta","--extern","memoffset=/home/andrew/Workspace/spring_2022/cpts_427-hw/hw1/hw1-solution-extra/target/rls/debug/deps/libmemoffset-58dbafac705154dd.rmeta","--extern","scopeguard=/home/andrew/Workspace/spring_2022/cpts_427-hw/hw1/hw1-solution-extra/target/rls/debug/deps/libscopeguard-c3b4442f326a491c.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/andrew/.rustup/toolchains/1.51.0-x86_64-unknown-linux-gnu"],"output":"/home/andrew/Workspace/spring_2022/cpts_427-hw/hw1/hw1-solution-extra/target/rls/debug/deps/libcrossbeam_epoch-2415fc01b3e7ab49.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_epoch","disambiguator":[13523288163175831991,2169414450999420705]},"crate_root":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src","external_crates":[{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8363989277313806732,13723635736355452392]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5755871685339259462,14524450630327408145]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6095990061662150844,17257511342173735843]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13534664360101634333,15955848543282431589]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2576337310504802494,7533979301291365915]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5114841071718684731,1147767992231475921]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14891534813972024149,13771932312545804845]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[904103305253144465,12292134317329413205]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[16314738562439622889,10306027504818249940]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15843431334828571128,5286674190927770495]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17405625562201081622,10275716470817790619]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[11445955052790897216,5818918092474945162]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[14649202847011715524,6782578055671422766]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[7180995537586922820,7051902941398327739]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[9612987991627917998,10712864082221106628]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[17826240478786457486,5527832178130695808]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6600453779972510942,5977101663316138555]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":18,"id":{"name":"cfg_if","disambiguator":[1155024563974712189,5296233732488635092]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","num":19,"id":{"name":"lazy_static","disambiguator":[10949373214698449189,8475297847177132521]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","num":20,"id":{"name":"crossbeam_utils","disambiguator":[4446908749330738246,3119500440040884668]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","num":21,"id":{"name":"scopeguard","disambiguator":[6205199248654165238,6871896847252225167]}},{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","num":22,"id":{"name":"memoffset","disambiguator":[3602076047673484975,12617713563782164509]}}],"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":0,"byte_end":7175,"line_start":1,"line_end":186,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":84},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":6724,"byte_end":6733,"line_start":170,"line_end":170,"column_start":13,"column_end":22},"alias_span":null,"name":"Pointable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":118},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":6735,"byte_end":6741,"line_start":170,"line_end":170,"column_start":24,"column_end":30},"alias_span":null,"name":"Atomic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":57},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":6743,"byte_end":6763,"line_start":170,"line_end":170,"column_start":32,"column_end":52},"alias_span":null,"name":"CompareExchangeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":203},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":6777,"byte_end":6782,"line_start":171,"line_end":171,"column_start":13,"column_end":18},"alias_span":null,"name":"Owned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":199},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":6784,"byte_end":6791,"line_start":171,"line_end":171,"column_start":20,"column_end":27},"alias_span":null,"name":"Pointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":257},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":6793,"byte_end":6799,"line_start":171,"line_end":171,"column_start":29,"column_end":35},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":318},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":6846,"byte_end":6855,"line_start":173,"line_end":173,"column_start":35,"column_end":44},"alias_span":null,"name":"Collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":334},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":6857,"byte_end":6868,"line_start":173,"line_end":173,"column_start":46,"column_end":57},"alias_span":null,"name":"LocalHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":416},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":6901,"byte_end":6912,"line_start":174,"line_end":174,"column_start":31,"column_end":42},"alias_span":null,"name":"unprotected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":392},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":6914,"byte_end":6919,"line_start":174,"line_end":174,"column_start":44,"column_end":49},"alias_span":null,"name":"Guard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":53},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":6983,"byte_end":7001,"line_start":177,"line_end":177,"column_start":32,"column_end":50},"alias_span":null,"name":"CompareAndSetError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":67},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":7003,"byte_end":7024,"line_start":177,"line_end":177,"column_start":52,"column_end":73},"alias_span":null,"name":"CompareAndSetOrdering","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":690},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":7132,"byte_end":7149,"line_start":184,"line_end":184,"column_start":33,"column_end":50},"alias_span":null,"name":"default_collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":688},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":7151,"byte_end":7160,"line_start":184,"line_end":184,"column_start":52,"column_end":61},"alias_span":null,"name":"is_pinned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":686},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":7162,"byte_end":7165,"line_start":184,"line_end":184,"column_start":63,"column_end":66},"alias_span":null,"name":"pin","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":0,"byte_end":7175,"line_start":1,"line_end":186,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":311},{"krate":0,"index":344},{"krate":0,"index":369},{"krate":0,"index":384},{"krate":0,"index":422},{"krate":0,"index":517},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":678},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699}],"decl_id":null,"docs":" Epoch-based memory reclamation.","sig":null,"attributes":[{"value":"/ Epoch-based memory reclamation.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An interesting problem concurrent collections deal with comes from the remove operation.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":40,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ Suppose that a thread removes an element from a lock-free map, while another thread is reading","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":133,"byte_end":231,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ that same element at the same time. The first thread must wait until the second thread stops","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":232,"byte_end":328,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ reading the element. Only then it is safe to destruct it.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":329,"byte_end":390,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":391,"byte_end":394,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Programming languages that come with garbage collectors solve this problem trivially. The","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":395,"byte_end":488,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ garbage collector will destruct the removed element when no thread can hold a reference to it","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":489,"byte_end":586,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ anymore.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":587,"byte_end":599,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":600,"byte_end":603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate implements a basic memory reclamation mechanism, which is based on epochs. When an","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":604,"byte_end":701,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ element gets removed from a concurrent collection, it is inserted into a pile of garbage and","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":702,"byte_end":798,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ marked with the current epoch. Every time a thread accesses a collection, it checks the current","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":799,"byte_end":898,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ epoch, attempts to increment it, and destructs some garbage that became so old that no thread","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":899,"byte_end":996,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ can be referencing it anymore.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":997,"byte_end":1031,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1032,"byte_end":1035,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ That is the general mechanism behind epoch-based memory reclamation, but the details are a bit","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1036,"byte_end":1134,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ more complicated. Anyhow, memory reclamation is designed to be fully automatic and something","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1135,"byte_end":1231,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ users of concurrent collections don't have to worry much about.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1232,"byte_end":1299,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1300,"byte_end":1303,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Pointers","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1304,"byte_end":1318,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1319,"byte_end":1322,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Concurrent collections are built using atomic pointers. This module provides [`Atomic`], which","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1323,"byte_end":1421,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ is just a shared atomic pointer to a heap-allocated object. Loading an [`Atomic`] yields a","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1422,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/ [`Shared`], which is an epoch-protected pointer through which the loaded object can be safely","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1517,"byte_end":1614,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ read.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1615,"byte_end":1624,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1625,"byte_end":1628,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1629,"byte_end":1642,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1643,"byte_end":1646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Before an [`Atomic`] can be loaded, a participant must be [`pin`]ned. By pinning a participant","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1647,"byte_end":1745,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ we declare that any object that gets removed from now on must not be destructed just","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1746,"byte_end":1834,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ yet. Garbage collection of newly removed objects is suspended until the participant gets","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1835,"byte_end":1927,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ unpinned.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1928,"byte_end":1941,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1942,"byte_end":1945,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Garbage","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1946,"byte_end":1959,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1960,"byte_end":1963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Objects that get removed from concurrent collections must be stashed away until all currently","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":1964,"byte_end":2061,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ pinned participants get unpinned. Such objects can be stored into a thread-local or global","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":2062,"byte_end":2156,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ storage, where they are kept until the right time for their destruction comes.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":2157,"byte_end":2239,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":2240,"byte_end":2243,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ There is a global shared instance of garbage queue. You can [`defer`](Guard::defer) the execution of an","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":2244,"byte_end":2351,"line_start":42,"line_end":42,"column_start":1,"column_end":108}},{"value":"/ arbitrary function until the global epoch is advanced enough. Most notably, concurrent data","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":2352,"byte_end":2447,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"/ structures may defer the deallocation of an object.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":2448,"byte_end":2503,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":2504,"byte_end":2507,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # APIs","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":2508,"byte_end":2518,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":2519,"byte_end":2522,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ For majority of use cases, just use the default garbage collector by invoking [`pin`]. If you","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":2523,"byte_end":2620,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"/ want to create your own garbage collector, use the [`Collector`] API.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":2621,"byte_end":2694,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":2855,"byte_end":2961,"line_start":58,"line_end":63,"column_start":1,"column_end":3}}]},{"kind":"Type","id":{"krate":0,"index":53},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9970782,"byte_end":9970800,"line_start":31,"line_end":31,"column_start":10,"column_end":28},"name":"CompareAndSetError","qualname":"::atomic::CompareAndSetError","value":"CompareExchangeError","parent":null,"children":[],"decl_id":null,"docs":" The error returned on failed compare-and-set operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-set operation.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9970611,"byte_end":9970670,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"deprecated(note = \"Use `CompareExchangeError` instead\")","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9970714,"byte_end":9970772,"line_start":30,"line_end":30,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":57},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9970918,"byte_end":9970938,"line_start":34,"line_end":34,"column_start":12,"column_end":32},"name":"CompareExchangeError","qualname":"::atomic::CompareExchangeError","value":"CompareExchangeError { current, new }","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62}],"decl_id":null,"docs":" The error returned on failed compare-and-swap operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-swap operation.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9970846,"byte_end":9970906,"line_start":33,"line_end":33,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":61},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9971068,"byte_end":9971075,"line_start":36,"line_end":36,"column_start":9,"column_end":16},"name":"current","qualname":"::atomic::CompareExchangeError::current","value":"atomic::Shared<'g, T>","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" The value in the atomic pointer at the time of the failed operation.\n","sig":null,"attributes":[{"value":"/ The value in the atomic pointer at the time of the failed operation.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9970987,"byte_end":9971059,"line_start":35,"line_end":35,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":62},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9971161,"byte_end":9971164,"line_start":39,"line_end":39,"column_start":9,"column_end":12},"name":"new","qualname":"::atomic::CompareExchangeError::new","value":"P","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" The new value, which the operation failed to store.\n","sig":null,"attributes":[{"value":"/ The new value, which the operation failed to store.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9971097,"byte_end":9971152,"line_start":38,"line_end":38,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":67},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9972275,"byte_end":9972296,"line_start":67,"line_end":67,"column_start":11,"column_end":32},"name":"CompareAndSetOrdering","qualname":"::atomic::CompareAndSetOrdering","value":"CompareAndSetOrdering","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69}],"decl_id":null,"docs":" Memory orderings for compare-and-set operations.","sig":null,"attributes":[{"value":"/ Memory orderings for compare-and-set operations.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9971479,"byte_end":9971531,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9971532,"byte_end":9971535,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ A compare-and-set operation can have different memory orderings depending on whether it","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9971536,"byte_end":9971627,"line_start":53,"line_end":53,"column_start":1,"column_end":92}},{"value":"/ succeeds or fails. This trait generalizes different ways of specifying memory orderings.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9971628,"byte_end":9971720,"line_start":54,"line_end":54,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9971721,"byte_end":9971724,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The two ways of specifying orderings for compare-and-set are:","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9971725,"byte_end":9971790,"line_start":56,"line_end":56,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9971791,"byte_end":9971794,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ 1. Just one `Ordering` for the success case. In case of failure, the strongest appropriate","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9971795,"byte_end":9971889,"line_start":58,"line_end":58,"column_start":1,"column_end":95}},{"value":"/    ordering is chosen.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9971890,"byte_end":9971916,"line_start":59,"line_end":59,"column_start":1,"column_end":27}},{"value":"/ 2. A pair of `Ordering`s. The first one is for the success case, while the second one is","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9971917,"byte_end":9972009,"line_start":60,"line_end":60,"column_start":1,"column_end":93}},{"value":"/    for the failure case.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9972010,"byte_end":9972038,"line_start":61,"line_end":61,"column_start":1,"column_end":29}},{"value":"deprecated(note =\n             \"`compare_and_set` and `compare_and_set_weak` that use this trait are deprecated, \\\n            use `compare_exchange` or `compare_exchange_weak instead`\")","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9972082,"byte_end":9972264,"line_start":63,"line_end":66,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9972362,"byte_end":9972369,"line_start":69,"line_end":69,"column_start":8,"column_end":15},"name":"success","qualname":"::atomic::CompareAndSetOrdering::success","value":"pub fn success(&Self) -> Ordering","parent":{"krate":0,"index":67},"children":[],"decl_id":null,"docs":" The ordering of the operation when it succeeds.\n","sig":null,"attributes":[{"value":"/ The ordering of the operation when it succeeds.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9972303,"byte_end":9972354,"line_start":68,"line_end":68,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9972587,"byte_end":9972594,"line_start":75,"line_end":75,"column_start":8,"column_end":15},"name":"failure","qualname":"::atomic::CompareAndSetOrdering::failure","value":"pub fn failure(&Self) -> Ordering","parent":{"krate":0,"index":67},"children":[],"decl_id":null,"docs":" The ordering of the operation when it fails.","sig":null,"attributes":[{"value":"/ The ordering of the operation when it fails.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9972395,"byte_end":9972443,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9972448,"byte_end":9972451,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ The failure ordering can't be `Release` or `AcqRel` and must be equivalent or weaker than","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9972456,"byte_end":9972549,"line_start":73,"line_end":73,"column_start":5,"column_end":98}},{"value":"/ the success ordering.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9972554,"byte_end":9972579,"line_start":74,"line_end":74,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":84},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9974944,"byte_end":9974953,"line_start":150,"line_end":150,"column_start":11,"column_end":20},"name":"Pointable","qualname":"::atomic::Pointable","value":"Pointable","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":92}],"decl_id":null,"docs":" Types that are pointed to by a single word.","sig":null,"attributes":[{"value":"/ Types that are pointed to by a single word.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9973971,"byte_end":9974018,"line_start":130,"line_end":130,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9974019,"byte_end":9974022,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ In concurrent programming, it is necessary to represent an object within a word because atomic","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9974023,"byte_end":9974121,"line_start":132,"line_end":132,"column_start":1,"column_end":99}},{"value":"/ operations (e.g., reads, writes, read-modify-writes) support only single words.  This trait","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9974122,"byte_end":9974217,"line_start":133,"line_end":133,"column_start":1,"column_end":96}},{"value":"/ qualifies such types that are pointed to by a single word.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9974218,"byte_end":9974280,"line_start":134,"line_end":134,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9974281,"byte_end":9974284,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ The trait generalizes `Box<T>` for a sized type `T`.  In a box, an object of type `T` is","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9974285,"byte_end":9974377,"line_start":136,"line_end":136,"column_start":1,"column_end":93}},{"value":"/ allocated in heap and it is owned by a single-word pointer.  This trait is also implemented for","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9974378,"byte_end":9974477,"line_start":137,"line_end":137,"column_start":1,"column_end":100}},{"value":"/ `[MaybeUninit<T>]` by storing its size along with its elements and pointing to the pair of array","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9974478,"byte_end":9974578,"line_start":138,"line_end":138,"column_start":1,"column_end":101}},{"value":"/ size and elements.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9974579,"byte_end":9974601,"line_start":139,"line_end":139,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9974602,"byte_end":9974605,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ Pointers to `Pointable` types can be stored in [`Atomic`], [`Owned`], and [`Shared`].  In","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9974606,"byte_end":9974699,"line_start":141,"line_end":141,"column_start":1,"column_end":94}},{"value":"/ particular, Crossbeam supports dynamically sized slices as follows.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9974700,"byte_end":9974771,"line_start":142,"line_end":142,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9974772,"byte_end":9974775,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9974776,"byte_end":9974783,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ use std::mem::MaybeUninit;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9974784,"byte_end":9974814,"line_start":145,"line_end":145,"column_start":1,"column_end":31}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9974815,"byte_end":9974846,"line_start":146,"line_end":146,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9974847,"byte_end":9974850,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ let o = Owned::<[MaybeUninit<i32>]>::init(10); // allocating [i32; 10]","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9974851,"byte_end":9974925,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9974926,"byte_end":9974933,"line_start":149,"line_end":149,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":85},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9975000,"byte_end":9975005,"line_start":152,"line_end":152,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::atomic::Pointable::ALIGN","value":"usize","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" The alignment of pointer.\n","sig":null,"attributes":[{"value":"/ The alignment of pointer.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9974960,"byte_end":9974989,"line_start":151,"line_end":151,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":86},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9975059,"byte_end":9975063,"line_start":155,"line_end":155,"column_start":10,"column_end":14},"name":"Init","qualname":"::atomic::Pointable::Init","value":"type Init;","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" The type for initializers.\n","sig":null,"attributes":[{"value":"/ The type for initializers.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9975019,"byte_end":9975049,"line_start":154,"line_end":154,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9975215,"byte_end":9975219,"line_start":162,"line_end":162,"column_start":15,"column_end":19},"name":"init","qualname":"::atomic::Pointable::init","value":"pub unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Initializes a with the given initializer.","sig":null,"attributes":[{"value":"/ Initializes a with the given initializer.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9975070,"byte_end":9975115,"line_start":157,"line_end":157,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9975120,"byte_end":9975123,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9975128,"byte_end":9975140,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9975145,"byte_end":9975148,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The result should be a multiple of `ALIGN`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9975153,"byte_end":9975200,"line_start":161,"line_end":161,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9975583,"byte_end":9975588,"line_start":171,"line_end":171,"column_start":15,"column_end":20},"name":"deref","qualname":"::atomic::Pointable::deref","value":"pub unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Dereferences the given pointer.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9975253,"byte_end":9975288,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9975293,"byte_end":9975296,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9975301,"byte_end":9975313,"line_start":166,"line_end":166,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9975318,"byte_end":9975321,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9975326,"byte_end":9975402,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9975407,"byte_end":9975475,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be mutably dereferenced by [`Pointable::deref_mut`] concurrently.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9975480,"byte_end":9975568,"line_start":170,"line_end":170,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9975987,"byte_end":9975996,"line_start":181,"line_end":181,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"::atomic::Pointable::deref_mut","value":"pub unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Mutably dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Mutably dereferences the given pointer.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9975623,"byte_end":9975666,"line_start":173,"line_end":173,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9975671,"byte_end":9975674,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9975679,"byte_end":9975691,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9975696,"byte_end":9975699,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9975704,"byte_end":9975780,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9975785,"byte_end":9975853,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9975858,"byte_end":9975948,"line_start":179,"line_end":179,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9975953,"byte_end":9975972,"line_start":180,"line_end":180,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9976409,"byte_end":9976413,"line_start":191,"line_end":191,"column_start":15,"column_end":19},"name":"drop","qualname":"::atomic::Pointable::drop","value":"pub unsafe fn drop(usize)","parent":{"krate":0,"index":84},"children":[],"decl_id":null,"docs":" Drops the object pointed to by the given pointer.","sig":null,"attributes":[{"value":"/ Drops the object pointed to by the given pointer.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9976035,"byte_end":9976088,"line_start":183,"line_end":183,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9976093,"byte_end":9976096,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9976101,"byte_end":9976113,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9976118,"byte_end":9976121,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9976126,"byte_end":9976202,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9976207,"byte_end":9976275,"line_start":188,"line_end":188,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9976280,"byte_end":9976370,"line_start":189,"line_end":189,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9976375,"byte_end":9976394,"line_start":190,"line_end":190,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":118},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9979522,"byte_end":9979528,"line_start":291,"line_end":291,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::atomic::Atomic","value":"Atomic {  }","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121}],"decl_id":null,"docs":" An atomic pointer that can be safely shared between threads.","sig":null,"attributes":[{"value":"/ An atomic pointer that can be safely shared between threads.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9979004,"byte_end":9979068,"line_start":282,"line_end":282,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9979069,"byte_end":9979072,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9979073,"byte_end":9979171,"line_start":284,"line_end":284,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address. For example, the tag for a pointer to a sized type `T`","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9979172,"byte_end":9979269,"line_start":285,"line_end":285,"column_start":1,"column_end":98}},{"value":"/ should be less than `(1 << mem::align_of::<T>().trailing_zeros())`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9979270,"byte_end":9979341,"line_start":286,"line_end":286,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9979342,"byte_end":9979345,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ Any method that loads the pointer must be passed a reference to a [`Guard`].","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9979346,"byte_end":9979426,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9979427,"byte_end":9979430,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ Crossbeam supports dynamically sized types.  See [`Pointable`] for details.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9979431,"byte_end":9979510,"line_start":290,"line_end":290,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9980014,"byte_end":9980017,"line_start":309,"line_end":309,"column_start":12,"column_end":15},"name":"new","qualname":"<Atomic<T>>::new","value":"pub fn new(T) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9979781,"byte_end":9979863,"line_start":300,"line_end":300,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9979868,"byte_end":9979871,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9979876,"byte_end":9979890,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9979895,"byte_end":9979898,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9979903,"byte_end":9979910,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9979915,"byte_end":9979947,"line_start":305,"line_end":305,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9979952,"byte_end":9979955,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9979960,"byte_end":9979990,"line_start":307,"line_end":307,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9979995,"byte_end":9980002,"line_start":308,"line_end":308,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9980361,"byte_end":9980365,"line_start":324,"line_end":324,"column_start":12,"column_end":16},"name":"init","qualname":"<Atomic<T>>::init","value":"pub fn init(T::Init) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9980120,"byte_end":9980202,"line_start":315,"line_end":315,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9980207,"byte_end":9980210,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9980215,"byte_end":9980229,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9980234,"byte_end":9980237,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9980242,"byte_end":9980249,"line_start":319,"line_end":319,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9980254,"byte_end":9980286,"line_start":320,"line_end":320,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9980291,"byte_end":9980294,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::init(1234);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9980299,"byte_end":9980337,"line_start":322,"line_end":322,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9980342,"byte_end":9980349,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9980954,"byte_end":9980958,"line_start":347,"line_end":347,"column_start":12,"column_end":16},"name":"null","qualname":"<Atomic<T>>::null","value":"pub fn null() -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null atomic pointer.","sig":null,"attributes":[{"value":"/ Returns a new null atomic pointer.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9980670,"byte_end":9980708,"line_start":336,"line_end":336,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9980713,"byte_end":9980716,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9980721,"byte_end":9980735,"line_start":338,"line_end":338,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9980740,"byte_end":9980743,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9980748,"byte_end":9980755,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9980760,"byte_end":9980792,"line_start":341,"line_end":341,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9980797,"byte_end":9980800,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::null();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9980805,"byte_end":9980839,"line_start":343,"line_end":343,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9980844,"byte_end":9980851,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9980856,"byte_end":9980859,"line_start":345,"line_end":345,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9981543,"byte_end":9981547,"line_start":369,"line_end":369,"column_start":12,"column_end":16},"name":"load","qualname":"<Atomic<T>>::load","value":"pub fn load<'g>(&Self, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9981085,"byte_end":9981130,"line_start":354,"line_end":354,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9981135,"byte_end":9981138,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9981143,"byte_end":9981233,"line_start":356,"line_end":356,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9981238,"byte_end":9981252,"line_start":357,"line_end":357,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9981257,"byte_end":9981260,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9981265,"byte_end":9981279,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9981284,"byte_end":9981287,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9981292,"byte_end":9981299,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9981304,"byte_end":9981353,"line_start":362,"line_end":362,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9981358,"byte_end":9981402,"line_start":363,"line_end":363,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9981407,"byte_end":9981410,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9981415,"byte_end":9981445,"line_start":365,"line_end":365,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9981450,"byte_end":9981480,"line_start":366,"line_end":366,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9981485,"byte_end":9981519,"line_start":367,"line_end":367,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9981524,"byte_end":9981531,"line_start":368,"line_end":368,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9982554,"byte_end":9982566,"line_start":394,"line_end":394,"column_start":12,"column_end":24},"name":"load_consume","qualname":"<Atomic<T>>::load_consume","value":"pub fn load_consume<'g>(&Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9981677,"byte_end":9981756,"line_start":373,"line_end":373,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9981761,"byte_end":9981764,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9981769,"byte_end":9981842,"line_start":375,"line_end":375,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9981847,"byte_end":9981923,"line_start":376,"line_end":376,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9981928,"byte_end":9981999,"line_start":377,"line_end":377,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9982004,"byte_end":9982078,"line_start":378,"line_end":378,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9982083,"byte_end":9982106,"line_start":379,"line_end":379,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9982111,"byte_end":9982114,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9982119,"byte_end":9982194,"line_start":381,"line_end":381,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9982199,"byte_end":9982273,"line_start":382,"line_end":382,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9982278,"byte_end":9982312,"line_start":383,"line_end":383,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9982317,"byte_end":9982320,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9982325,"byte_end":9982339,"line_start":385,"line_end":385,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9982344,"byte_end":9982347,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9982352,"byte_end":9982359,"line_start":387,"line_end":387,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9982364,"byte_end":9982413,"line_start":388,"line_end":388,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9982418,"byte_end":9982421,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9982426,"byte_end":9982456,"line_start":390,"line_end":390,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9982461,"byte_end":9982491,"line_start":391,"line_end":391,"column_start":5,"column_end":35}},{"value":"/ let p = a.load_consume(guard);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9982496,"byte_end":9982530,"line_start":392,"line_end":392,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9982535,"byte_end":9982542,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9983174,"byte_end":9983179,"line_start":413,"line_end":413,"column_start":12,"column_end":17},"name":"store","qualname":"<Atomic<T>>::store","value":"pub fn store<P: Pointer<T>>(&Self, P, Ordering)","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9982686,"byte_end":9982751,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9982756,"byte_end":9982759,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9982764,"byte_end":9982854,"line_start":400,"line_end":400,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9982859,"byte_end":9982873,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9982878,"byte_end":9982881,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9982886,"byte_end":9982900,"line_start":403,"line_end":403,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9982905,"byte_end":9982908,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9982913,"byte_end":9982920,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Owned, Shared};","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9982925,"byte_end":9982974,"line_start":406,"line_end":406,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9982979,"byte_end":9983023,"line_start":407,"line_end":407,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9983028,"byte_end":9983031,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9983036,"byte_end":9983066,"line_start":409,"line_end":409,"column_start":5,"column_end":35}},{"value":"/ a.store(Shared::null(), SeqCst);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9983071,"byte_end":9983107,"line_start":410,"line_end":410,"column_start":5,"column_end":41}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9983112,"byte_end":9983150,"line_start":411,"line_end":411,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9983155,"byte_end":9983162,"line_start":412,"line_end":412,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9983829,"byte_end":9983833,"line_start":433,"line_end":433,"column_start":12,"column_end":16},"name":"swap","qualname":"<Atomic<T>>::swap","value":"pub fn swap<'g, P: Pointer<T>>(&Self, P, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous\n `Shared`.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9983286,"byte_end":9983374,"line_start":417,"line_end":417,"column_start":5,"column_end":93}},{"value":"/ `Shared`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9983379,"byte_end":9983392,"line_start":418,"line_end":418,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9983397,"byte_end":9983400,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9983405,"byte_end":9983495,"line_start":420,"line_end":420,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9983500,"byte_end":9983514,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9983519,"byte_end":9983522,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9983527,"byte_end":9983541,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9983546,"byte_end":9983549,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9983554,"byte_end":9983561,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9983566,"byte_end":9983623,"line_start":426,"line_end":426,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9983628,"byte_end":9983672,"line_start":427,"line_end":427,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9983677,"byte_end":9983680,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9983685,"byte_end":9983715,"line_start":429,"line_end":429,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9983720,"byte_end":9983750,"line_start":430,"line_end":430,"column_start":5,"column_end":35}},{"value":"/ let p = a.swap(Shared::null(), SeqCst, guard);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9983755,"byte_end":9983805,"line_start":431,"line_end":431,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9983810,"byte_end":9983817,"line_start":432,"line_end":432,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9985669,"byte_end":9985685,"line_start":467,"line_end":467,"column_start":12,"column_end":28},"name":"compare_exchange","qualname":"<Atomic<T>>::compare_exchange","value":"pub fn compare_exchange<'g,\n                        P>(&Self, Shared<, T>, P, Ordering, Ordering,\n                           &'g Guard) -> Result<Shared, CompareExchangeError>\nwhere P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9984004,"byte_end":9984100,"line_start":437,"line_end":437,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9984105,"byte_end":9984199,"line_start":438,"line_end":438,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9984204,"byte_end":9984275,"line_start":439,"line_end":439,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9984280,"byte_end":9984283,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9984288,"byte_end":9984383,"line_start":441,"line_end":441,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9984388,"byte_end":9984479,"line_start":442,"line_end":442,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9984484,"byte_end":9984497,"line_start":443,"line_end":443,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9984502,"byte_end":9984505,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9984510,"byte_end":9984579,"line_start":445,"line_end":445,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9984584,"byte_end":9984665,"line_start":446,"line_end":446,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9984670,"byte_end":9984761,"line_start":447,"line_end":447,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9984766,"byte_end":9984856,"line_start":448,"line_end":448,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9984861,"byte_end":9984943,"line_start":449,"line_end":449,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9984948,"byte_end":9985026,"line_start":450,"line_end":450,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9985031,"byte_end":9985111,"line_start":451,"line_end":451,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9985116,"byte_end":9985182,"line_start":452,"line_end":452,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9985187,"byte_end":9985190,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9985195,"byte_end":9985209,"line_start":454,"line_end":454,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9985214,"byte_end":9985217,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9985222,"byte_end":9985229,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9985234,"byte_end":9985298,"line_start":457,"line_end":457,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9985303,"byte_end":9985347,"line_start":458,"line_end":458,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9985352,"byte_end":9985355,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9985360,"byte_end":9985390,"line_start":460,"line_end":460,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9985395,"byte_end":9985398,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9985403,"byte_end":9985433,"line_start":462,"line_end":462,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9985438,"byte_end":9985475,"line_start":463,"line_end":463,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_exchange(curr, Shared::null(), SeqCst, SeqCst, guard);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9985480,"byte_end":9985559,"line_start":464,"line_end":464,"column_start":5,"column_end":84}},{"value":"/ let res2 = a.compare_exchange(curr, Owned::new(5678), SeqCst, SeqCst, guard);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9985564,"byte_end":9985645,"line_start":465,"line_end":465,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9985650,"byte_end":9985657,"line_start":466,"line_end":466,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9988719,"byte_end":9988740,"line_start":542,"line_end":542,"column_start":12,"column_end":33},"name":"compare_exchange_weak","qualname":"<Atomic<T>>::compare_exchange_weak","value":"pub fn compare_exchange_weak<'g,\n                             P>(&Self, Shared<, T>, P, Ordering, Ordering,\n                                &'g Guard)\n-> Result<Shared, CompareExchangeError> where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9986347,"byte_end":9986443,"line_start":490,"line_end":490,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9986448,"byte_end":9986542,"line_start":491,"line_end":491,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9986547,"byte_end":9986618,"line_start":492,"line_end":492,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9986623,"byte_end":9986626,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_exchange`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9986631,"byte_end":9986726,"line_start":494,"line_end":494,"column_start":5,"column_end":100}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9986731,"byte_end":9986826,"line_start":495,"line_end":495,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9986831,"byte_end":9986921,"line_start":496,"line_end":496,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9986926,"byte_end":9987010,"line_start":497,"line_end":497,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9987015,"byte_end":9987018,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9987023,"byte_end":9987092,"line_start":499,"line_end":499,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9987097,"byte_end":9987178,"line_start":500,"line_end":500,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9987183,"byte_end":9987274,"line_start":501,"line_end":501,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9987279,"byte_end":9987369,"line_start":502,"line_end":502,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9987374,"byte_end":9987456,"line_start":503,"line_end":503,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9987461,"byte_end":9987539,"line_start":504,"line_end":504,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9987544,"byte_end":9987624,"line_start":505,"line_end":505,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9987629,"byte_end":9987695,"line_start":506,"line_end":506,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9987700,"byte_end":9987703,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ [`compare_exchange`]: Atomic::compare_exchange","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9987708,"byte_end":9987758,"line_start":508,"line_end":508,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9987763,"byte_end":9987766,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9987771,"byte_end":9987785,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9987790,"byte_end":9987793,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9987798,"byte_end":9987805,"line_start":512,"line_end":512,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9987810,"byte_end":9987874,"line_start":513,"line_end":513,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9987879,"byte_end":9987923,"line_start":514,"line_end":514,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9987928,"byte_end":9987931,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9987936,"byte_end":9987966,"line_start":516,"line_end":516,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9987971,"byte_end":9988001,"line_start":517,"line_end":517,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9988006,"byte_end":9988009,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9988014,"byte_end":9988049,"line_start":519,"line_end":519,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9988054,"byte_end":9988094,"line_start":520,"line_end":520,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9988099,"byte_end":9988109,"line_start":521,"line_end":521,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(ptr, new, SeqCst, SeqCst, guard) {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9988114,"byte_end":9988186,"line_start":522,"line_end":522,"column_start":5,"column_end":77}},{"value":"/         Ok(p) => {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9988191,"byte_end":9988213,"line_start":523,"line_end":523,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9988218,"byte_end":9988242,"line_start":524,"line_end":524,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9988247,"byte_end":9988269,"line_start":525,"line_end":525,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9988274,"byte_end":9988287,"line_start":526,"line_end":526,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9988292,"byte_end":9988317,"line_start":527,"line_end":527,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9988322,"byte_end":9988356,"line_start":528,"line_end":528,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9988361,"byte_end":9988391,"line_start":529,"line_end":529,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9988396,"byte_end":9988409,"line_start":530,"line_end":530,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9988414,"byte_end":9988423,"line_start":531,"line_end":531,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9988428,"byte_end":9988433,"line_start":532,"line_end":532,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9988438,"byte_end":9988441,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9988446,"byte_end":9988487,"line_start":534,"line_end":534,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9988492,"byte_end":9988502,"line_start":535,"line_end":535,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(curr, Shared::null(), SeqCst, SeqCst, guard) {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9988507,"byte_end":9988591,"line_start":536,"line_end":536,"column_start":5,"column_end":89}},{"value":"/         Ok(_) => break,","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9988596,"byte_end":9988623,"line_start":537,"line_end":537,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9988628,"byte_end":9988671,"line_start":538,"line_end":538,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9988676,"byte_end":9988685,"line_start":539,"line_end":539,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9988690,"byte_end":9988695,"line_start":540,"line_end":540,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9988700,"byte_end":9988707,"line_start":541,"line_end":541,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9991237,"byte_end":9991249,"line_start":604,"line_end":604,"column_start":12,"column_end":24},"name":"fetch_update","qualname":"<Atomic<T>>::fetch_update","value":"pub fn fetch_update<'g, F>(&Self, Ordering, Ordering, &'g Guard, F)\n-> Result<Shared, Shared> where F: FnMut(Shared) -> Option<Shared>","parent":null,"children":[],"decl_id":null,"docs":" Fetches the pointer, and then applies a function to it that returns a new value.\n Returns a `Result` of `Ok(previous_value)` if the function returned `Some`, else `Err(_)`.","sig":null,"attributes":[{"value":"/ Fetches the pointer, and then applies a function to it that returns a new value.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9989407,"byte_end":9989491,"line_start":565,"line_end":565,"column_start":5,"column_end":89}},{"value":"/ Returns a `Result` of `Ok(previous_value)` if the function returned `Some`, else `Err(_)`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9989496,"byte_end":9989590,"line_start":566,"line_end":566,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9989595,"byte_end":9989598,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ Note that the given function may be called multiple times if the value has been changed by","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9989603,"byte_end":9989697,"line_start":568,"line_end":568,"column_start":5,"column_end":99}},{"value":"/ other threads in the meantime, as long as the function returns `Some(_)`, but the function","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9989702,"byte_end":9989796,"line_start":569,"line_end":569,"column_start":5,"column_end":99}},{"value":"/ will have been applied only once to the stored value.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9989801,"byte_end":9989858,"line_start":570,"line_end":570,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9989863,"byte_end":9989866,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ `fetch_update` takes two [`Ordering`] arguments to describe the memory","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9989871,"byte_end":9989945,"line_start":572,"line_end":572,"column_start":5,"column_end":79}},{"value":"/ ordering of this operation. The first describes the required ordering for","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9989950,"byte_end":9990027,"line_start":573,"line_end":573,"column_start":5,"column_end":82}},{"value":"/ when the operation finally succeeds while the second describes the","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9990032,"byte_end":9990102,"line_start":574,"line_end":574,"column_start":5,"column_end":75}},{"value":"/ required ordering for loads. These correspond to the success and failure","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9990107,"byte_end":9990183,"line_start":575,"line_end":575,"column_start":5,"column_end":81}},{"value":"/ orderings of [`Atomic::compare_exchange`] respectively.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9990188,"byte_end":9990247,"line_start":576,"line_end":576,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9990252,"byte_end":9990255,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ Using [`Acquire`] as success ordering makes the store part of this","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9990260,"byte_end":9990330,"line_start":578,"line_end":578,"column_start":5,"column_end":75}},{"value":"/ operation [`Relaxed`], and using [`Release`] makes the final successful","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9990335,"byte_end":9990410,"line_start":579,"line_end":579,"column_start":5,"column_end":80}},{"value":"/ load [`Relaxed`]. The (failed) load ordering can only be [`SeqCst`],","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9990415,"byte_end":9990487,"line_start":580,"line_end":580,"column_start":5,"column_end":77}},{"value":"/ [`Acquire`] or [`Relaxed`] and must be equivalent to or weaker than the","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9990492,"byte_end":9990567,"line_start":581,"line_end":581,"column_start":5,"column_end":80}},{"value":"/ success ordering.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9990572,"byte_end":9990593,"line_start":582,"line_end":582,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9990598,"byte_end":9990601,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ [`Relaxed`]: Ordering::Relaxed","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9990606,"byte_end":9990640,"line_start":584,"line_end":584,"column_start":5,"column_end":39}},{"value":"/ [`Acquire`]: Ordering::Acquire","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9990645,"byte_end":9990679,"line_start":585,"line_end":585,"column_start":5,"column_end":39}},{"value":"/ [`Release`]: Ordering::Release","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9990684,"byte_end":9990718,"line_start":586,"line_end":586,"column_start":5,"column_end":39}},{"value":"/ [`SeqCst`]: Ordering::SeqCst","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9990723,"byte_end":9990755,"line_start":587,"line_end":587,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9990760,"byte_end":9990763,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9990768,"byte_end":9990782,"line_start":589,"line_end":589,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9990787,"byte_end":9990790,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9990795,"byte_end":9990802,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9990807,"byte_end":9990856,"line_start":592,"line_end":592,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9990861,"byte_end":9990905,"line_start":593,"line_end":593,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9990910,"byte_end":9990913,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9990918,"byte_end":9990948,"line_start":595,"line_end":595,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9990953,"byte_end":9990983,"line_start":596,"line_end":596,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9990988,"byte_end":9990991,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ let res1 = a.fetch_update(SeqCst, SeqCst, guard, |x| Some(x.with_tag(1)));","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9990996,"byte_end":9991074,"line_start":598,"line_end":598,"column_start":5,"column_end":83}},{"value":"/ assert!(res1.is_ok());","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9991079,"byte_end":9991105,"line_start":599,"line_end":599,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9991110,"byte_end":9991113,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ let res2 = a.fetch_update(SeqCst, SeqCst, guard, |x| None);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9991118,"byte_end":9991181,"line_start":601,"line_end":601,"column_start":5,"column_end":68}},{"value":"/ assert!(res2.is_err());","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9991186,"byte_end":9991213,"line_start":602,"line_end":602,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9991218,"byte_end":9991225,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9993549,"byte_end":9993564,"line_start":665,"line_end":665,"column_start":12,"column_end":27},"name":"compare_and_set","qualname":"<Atomic<T>>::compare_and_set","value":"pub fn compare_and_set<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9991847,"byte_end":9991943,"line_start":624,"line_end":624,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9991948,"byte_end":9992042,"line_start":625,"line_end":625,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9992047,"byte_end":9992118,"line_start":626,"line_end":626,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9992123,"byte_end":9992126,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9992131,"byte_end":9992226,"line_start":628,"line_end":628,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9992231,"byte_end":9992322,"line_start":629,"line_end":629,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9992327,"byte_end":9992340,"line_start":630,"line_end":630,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9992345,"byte_end":9992348,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9992353,"byte_end":9992438,"line_start":632,"line_end":632,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9992443,"byte_end":9992474,"line_start":633,"line_end":633,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9992479,"byte_end":9992482,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange`","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9992487,"byte_end":9992524,"line_start":635,"line_end":635,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9992529,"byte_end":9992532,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set` is equivalent to `compare_exchange` with the following mapping for","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9992537,"byte_end":9992625,"line_start":637,"line_end":637,"column_start":5,"column_end":93}},{"value":"/ memory orderings:","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9992630,"byte_end":9992651,"line_start":638,"line_end":638,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9992656,"byte_end":9992659,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9992664,"byte_end":9992696,"line_start":640,"line_end":640,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9992701,"byte_end":9992733,"line_start":641,"line_end":641,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9992738,"byte_end":9992770,"line_start":642,"line_end":642,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9992775,"byte_end":9992807,"line_start":643,"line_end":643,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9992812,"byte_end":9992844,"line_start":644,"line_end":644,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9992849,"byte_end":9992881,"line_start":645,"line_end":645,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9992886,"byte_end":9992917,"line_start":646,"line_end":646,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9992922,"byte_end":9992925,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9992930,"byte_end":9992944,"line_start":648,"line_end":648,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9992949,"byte_end":9992952,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9992957,"byte_end":9992964,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9992969,"byte_end":9992996,"line_start":651,"line_end":651,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9993001,"byte_end":9993065,"line_start":652,"line_end":652,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9993070,"byte_end":9993114,"line_start":653,"line_end":653,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9993119,"byte_end":9993122,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9993127,"byte_end":9993157,"line_start":655,"line_end":655,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9993162,"byte_end":9993165,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9993170,"byte_end":9993200,"line_start":657,"line_end":657,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9993205,"byte_end":9993242,"line_start":658,"line_end":658,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_and_set(curr, Shared::null(), SeqCst, guard);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9993247,"byte_end":9993317,"line_start":659,"line_end":659,"column_start":5,"column_end":75}},{"value":"/ let res2 = a.compare_and_set(curr, Owned::new(5678), SeqCst, guard);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9993322,"byte_end":9993394,"line_start":660,"line_end":660,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9993399,"byte_end":9993406,"line_start":661,"line_end":661,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9993458,"byte_end":9993478,"line_start":663,"line_end":663,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange` instead\")","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9993483,"byte_end":9993537,"line_start":664,"line_end":664,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9996333,"byte_end":9996353,"line_start":742,"line_end":742,"column_start":12,"column_end":32},"name":"compare_and_set_weak","qualname":"<Atomic<T>>::compare_and_set_weak","value":"pub fn compare_and_set_weak<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9993907,"byte_end":9994003,"line_start":679,"line_end":679,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9994008,"byte_end":9994102,"line_start":680,"line_end":680,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9994107,"byte_end":9994178,"line_start":681,"line_end":681,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9994183,"byte_end":9994186,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_and_set`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9994191,"byte_end":9994285,"line_start":683,"line_end":683,"column_start":5,"column_end":99}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9994290,"byte_end":9994385,"line_start":684,"line_end":684,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9994390,"byte_end":9994480,"line_start":685,"line_end":685,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9994485,"byte_end":9994569,"line_start":686,"line_end":686,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9994574,"byte_end":9994577,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9994582,"byte_end":9994667,"line_start":688,"line_end":688,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9994672,"byte_end":9994703,"line_start":689,"line_end":689,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9994708,"byte_end":9994711,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ [`compare_and_set`]: Atomic::compare_and_set","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9994716,"byte_end":9994764,"line_start":691,"line_end":691,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9994769,"byte_end":9994772,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange_weak`","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9994777,"byte_end":9994819,"line_start":693,"line_end":693,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9994824,"byte_end":9994827,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set_weak` is equivalent to `compare_exchange_weak` with the following mapping for","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9994832,"byte_end":9994930,"line_start":695,"line_end":695,"column_start":5,"column_end":103}},{"value":"/ memory orderings:","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9994935,"byte_end":9994956,"line_start":696,"line_end":696,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9994961,"byte_end":9994964,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9994969,"byte_end":9995001,"line_start":698,"line_end":698,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995006,"byte_end":9995038,"line_start":699,"line_end":699,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995043,"byte_end":9995075,"line_start":700,"line_end":700,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995080,"byte_end":9995112,"line_start":701,"line_end":701,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995117,"byte_end":9995149,"line_start":702,"line_end":702,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995154,"byte_end":9995186,"line_start":703,"line_end":703,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995191,"byte_end":9995222,"line_start":704,"line_end":704,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995227,"byte_end":9995230,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995235,"byte_end":9995249,"line_start":706,"line_end":706,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995254,"byte_end":9995257,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995262,"byte_end":9995269,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995274,"byte_end":9995301,"line_start":709,"line_end":709,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995306,"byte_end":9995370,"line_start":710,"line_end":710,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995375,"byte_end":9995419,"line_start":711,"line_end":711,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995424,"byte_end":9995427,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995432,"byte_end":9995462,"line_start":713,"line_end":713,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995467,"byte_end":9995497,"line_start":714,"line_end":714,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995502,"byte_end":9995505,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995510,"byte_end":9995545,"line_start":716,"line_end":716,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995550,"byte_end":9995590,"line_start":717,"line_end":717,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995595,"byte_end":9995605,"line_start":718,"line_end":718,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(ptr, new, SeqCst, guard) {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995610,"byte_end":9995673,"line_start":719,"line_end":719,"column_start":5,"column_end":68}},{"value":"/         Ok(p) => {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995678,"byte_end":9995700,"line_start":720,"line_end":720,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995705,"byte_end":9995729,"line_start":721,"line_end":721,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995734,"byte_end":9995756,"line_start":722,"line_end":722,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995761,"byte_end":9995774,"line_start":723,"line_end":723,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995779,"byte_end":9995804,"line_start":724,"line_end":724,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995809,"byte_end":9995843,"line_start":725,"line_end":725,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995848,"byte_end":9995878,"line_start":726,"line_end":726,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995883,"byte_end":9995896,"line_start":727,"line_end":727,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995901,"byte_end":9995910,"line_start":728,"line_end":728,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995915,"byte_end":9995920,"line_start":729,"line_end":729,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995925,"byte_end":9995928,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995933,"byte_end":9995974,"line_start":731,"line_end":731,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995979,"byte_end":9995989,"line_start":732,"line_end":732,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(curr, Shared::null(), SeqCst, guard) {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9995994,"byte_end":9996069,"line_start":733,"line_end":733,"column_start":5,"column_end":80}},{"value":"/         Ok(_) => break,","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9996074,"byte_end":9996101,"line_start":734,"line_end":734,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9996106,"byte_end":9996149,"line_start":735,"line_end":735,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9996154,"byte_end":9996163,"line_start":736,"line_end":736,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9996168,"byte_end":9996173,"line_start":737,"line_end":737,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9996178,"byte_end":9996185,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9996237,"byte_end":9996257,"line_start":740,"line_end":740,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange_weak` instead\")","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9996262,"byte_end":9996321,"line_start":741,"line_end":741,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9997432,"byte_end":9997441,"line_start":775,"line_end":775,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<Atomic<T>>::fetch_and","value":"pub fn fetch_and<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"and\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"and\" with the current tag.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9996701,"byte_end":9996740,"line_start":756,"line_end":756,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9996745,"byte_end":9996748,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"and\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9996753,"byte_end":9996847,"line_start":758,"line_end":758,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9996852,"byte_end":9996908,"line_start":759,"line_end":759,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9996913,"byte_end":9996916,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9996921,"byte_end":9997011,"line_start":761,"line_end":761,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9997016,"byte_end":9997030,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9997035,"byte_end":9997038,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9997043,"byte_end":9997057,"line_start":764,"line_end":764,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9997062,"byte_end":9997065,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9997070,"byte_end":9997077,"line_start":766,"line_end":766,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9997082,"byte_end":9997139,"line_start":767,"line_end":767,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9997144,"byte_end":9997188,"line_start":768,"line_end":768,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9997193,"byte_end":9997196,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(3));","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9997201,"byte_end":9997261,"line_start":770,"line_end":770,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9997266,"byte_end":9997296,"line_start":771,"line_end":771,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_and(2, SeqCst, guard).tag(), 3);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9997301,"byte_end":9997356,"line_start":772,"line_end":772,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9997361,"byte_end":9997408,"line_start":773,"line_end":773,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9997413,"byte_end":9997420,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9998340,"byte_end":9998348,"line_start":798,"line_end":798,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<Atomic<T>>::fetch_or","value":"pub fn fetch_or<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"or\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"or\" with the current tag.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9997612,"byte_end":9997650,"line_start":779,"line_end":779,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9997655,"byte_end":9997658,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"or\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9997663,"byte_end":9997756,"line_start":781,"line_end":781,"column_start":5,"column_end":98}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9997761,"byte_end":9997817,"line_start":782,"line_end":782,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9997822,"byte_end":9997825,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9997830,"byte_end":9997920,"line_start":784,"line_end":784,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9997925,"byte_end":9997939,"line_start":785,"line_end":785,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9997944,"byte_end":9997947,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9997952,"byte_end":9997966,"line_start":787,"line_end":787,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9997971,"byte_end":9997974,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9997979,"byte_end":9997986,"line_start":789,"line_end":789,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9997991,"byte_end":9998048,"line_start":790,"line_end":790,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9998053,"byte_end":9998097,"line_start":791,"line_end":791,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9998102,"byte_end":9998105,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9998110,"byte_end":9998170,"line_start":793,"line_end":793,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9998175,"byte_end":9998205,"line_start":794,"line_end":794,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_or(2, SeqCst, guard).tag(), 1);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9998210,"byte_end":9998264,"line_start":795,"line_end":795,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 3);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9998269,"byte_end":9998316,"line_start":796,"line_end":796,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9998321,"byte_end":9998328,"line_start":797,"line_end":797,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9999248,"byte_end":9999257,"line_start":821,"line_end":821,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<Atomic<T>>::fetch_xor","value":"pub fn fetch_xor<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"xor\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"xor\" with the current tag.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9998517,"byte_end":9998556,"line_start":802,"line_end":802,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9998561,"byte_end":9998564,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"xor\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9998569,"byte_end":9998663,"line_start":804,"line_end":804,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9998668,"byte_end":9998724,"line_start":805,"line_end":805,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9998729,"byte_end":9998732,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9998737,"byte_end":9998827,"line_start":807,"line_end":807,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9998832,"byte_end":9998846,"line_start":808,"line_end":808,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9998851,"byte_end":9998854,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9998859,"byte_end":9998873,"line_start":810,"line_end":810,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9998878,"byte_end":9998881,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9998886,"byte_end":9998893,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9998898,"byte_end":9998955,"line_start":813,"line_end":813,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9998960,"byte_end":9999004,"line_start":814,"line_end":814,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9999009,"byte_end":9999012,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9999017,"byte_end":9999077,"line_start":816,"line_end":816,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9999082,"byte_end":9999112,"line_start":817,"line_end":817,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_xor(3, SeqCst, guard).tag(), 1);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9999117,"byte_end":9999172,"line_start":818,"line_end":818,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9999177,"byte_end":9999224,"line_start":819,"line_end":819,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9999229,"byte_end":9999236,"line_start":820,"line_end":820,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10000554,"byte_end":10000564,"line_start":859,"line_end":859,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Atomic<T>>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9999427,"byte_end":9999462,"line_start":825,"line_end":825,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9999467,"byte_end":9999470,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9999475,"byte_end":9999564,"line_start":827,"line_end":827,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9999569,"byte_end":9999655,"line_start":828,"line_end":828,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9999660,"byte_end":9999695,"line_start":829,"line_end":829,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9999700,"byte_end":9999703,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9999708,"byte_end":9999720,"line_start":831,"line_end":831,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9999725,"byte_end":9999728,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9999733,"byte_end":9999792,"line_start":833,"line_end":833,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9999797,"byte_end":9999800,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9999805,"byte_end":9999817,"line_start":835,"line_end":835,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9999822,"byte_end":9999825,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9999830,"byte_end":9999917,"line_start":837,"line_end":837,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9999922,"byte_end":9999955,"line_start":838,"line_end":838,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9999960,"byte_end":9999963,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9999968,"byte_end":9999982,"line_start":840,"line_end":840,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9999987,"byte_end":9999990,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9999995,"byte_end":10000006,"line_start":842,"line_end":842,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10000011,"byte_end":10000030,"line_start":843,"line_end":843,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10000035,"byte_end":10000069,"line_start":844,"line_end":844,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10000074,"byte_end":10000100,"line_start":845,"line_end":845,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10000105,"byte_end":10000132,"line_start":846,"line_end":846,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10000137,"byte_end":10000142,"line_start":847,"line_end":847,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10000147,"byte_end":10000150,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10000155,"byte_end":10000188,"line_start":849,"line_end":849,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10000193,"byte_end":10000221,"line_start":850,"line_end":850,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10000226,"byte_end":10000320,"line_start":851,"line_end":851,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10000325,"byte_end":10000372,"line_start":852,"line_end":852,"column_start":5,"column_end":52}},{"value":"/         unsafe {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10000377,"byte_end":10000397,"line_start":853,"line_end":853,"column_start":5,"column_end":25}},{"value":"/             drop(mem::replace(&mut self.ptr, Atomic::null()).into_owned());","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10000402,"byte_end":10000481,"line_start":854,"line_end":854,"column_start":5,"column_end":84}},{"value":"/         }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10000486,"byte_end":10000499,"line_start":855,"line_end":855,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10000504,"byte_end":10000513,"line_start":856,"line_end":856,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10000518,"byte_end":10000523,"line_start":857,"line_end":857,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10000528,"byte_end":10000535,"line_start":858,"line_end":858,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":199},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10003581,"byte_end":10003588,"line_start":972,"line_end":972,"column_start":11,"column_end":18},"name":"Pointer","qualname":"::atomic::Pointer","value":"Pointer<T: ?Sized + Pointable>","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202}],"decl_id":null,"docs":" A trait for either `Owned` or `Shared` pointers.\n","sig":null,"attributes":[{"value":"/ A trait for either `Owned` or `Shared` pointers.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10003518,"byte_end":10003570,"line_start":971,"line_end":971,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10003680,"byte_end":10003690,"line_start":974,"line_end":974,"column_start":8,"column_end":18},"name":"into_usize","qualname":"::atomic::Pointer::into_usize","value":"pub fn into_usize(Self) -> usize","parent":{"krate":0,"index":199},"children":[],"decl_id":null,"docs":" Returns the machine representation of the pointer.\n","sig":null,"attributes":[{"value":"/ Returns the machine representation of the pointer.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10003618,"byte_end":10003672,"line_start":973,"line_end":973,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10003997,"byte_end":10004007,"line_start":982,"line_end":982,"column_start":15,"column_end":25},"name":"from_usize","qualname":"::atomic::Pointer::from_usize","value":"pub unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":199},"children":[],"decl_id":null,"docs":" Returns a new pointer pointing to the tagged pointer `data`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10003712,"byte_end":10003776,"line_start":976,"line_end":976,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10003781,"byte_end":10003784,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10003789,"byte_end":10003801,"line_start":978,"line_end":978,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10003806,"byte_end":10003809,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ The given `data` should have been created by `Pointer::into_usize()`, and one `data` should","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10003814,"byte_end":10003909,"line_start":980,"line_end":980,"column_start":5,"column_end":100}},{"value":"/ not be converted back by `Pointer::from_usize()` multiple times.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10003914,"byte_end":10003982,"line_start":981,"line_end":981,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":203},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10004273,"byte_end":10004278,"line_start":991,"line_end":991,"column_start":12,"column_end":17},"name":"Owned","qualname":"::atomic::Owned","value":"Owned {  }","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206}],"decl_id":null,"docs":" An owned heap-allocated object.","sig":null,"attributes":[{"value":"/ An owned heap-allocated object.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10004033,"byte_end":10004068,"line_start":985,"line_end":985,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10004069,"byte_end":10004072,"line_start":986,"line_end":986,"column_start":1,"column_end":4}},{"value":"/ This type is very similar to `Box<T>`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10004073,"byte_end":10004115,"line_start":987,"line_end":987,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10004116,"byte_end":10004119,"line_start":988,"line_end":988,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10004120,"byte_end":10004218,"line_start":989,"line_end":989,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10004219,"byte_end":10004261,"line_start":990,"line_end":990,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10005676,"byte_end":10005684,"line_start":1042,"line_end":1042,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Owned<T>>::from_raw","value":"pub unsafe fn from_raw(*mut T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new owned pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `raw`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10004928,"byte_end":10004978,"line_start":1020,"line_end":1020,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10004983,"byte_end":10004986,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may lead to memory problems. Argument `raw`","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10004991,"byte_end":10005083,"line_start":1022,"line_end":1022,"column_start":5,"column_end":97}},{"value":"/ must be a valid pointer. Also, a double-free may occur if the function is called twice on","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10005088,"byte_end":10005181,"line_start":1023,"line_end":1023,"column_start":5,"column_end":98}},{"value":"/ the same raw pointer.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10005186,"byte_end":10005211,"line_start":1024,"line_end":1024,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10005216,"byte_end":10005219,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10005224,"byte_end":10005236,"line_start":1026,"line_end":1026,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10005241,"byte_end":10005244,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10005249,"byte_end":10005293,"line_start":1028,"line_end":1028,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10005298,"byte_end":10005301,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10005306,"byte_end":10005318,"line_start":1030,"line_end":1030,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10005323,"byte_end":10005326,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ The given `raw` should have been derived from `Owned`, and one `raw` should not be converted","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10005331,"byte_end":10005427,"line_start":1032,"line_end":1032,"column_start":5,"column_end":101}},{"value":"/ back by `Owned::from_raw()` multiple times.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10005432,"byte_end":10005479,"line_start":1033,"line_end":1033,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10005484,"byte_end":10005487,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10005492,"byte_end":10005506,"line_start":1035,"line_end":1035,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10005511,"byte_end":10005514,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10005519,"byte_end":10005526,"line_start":1037,"line_end":1037,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10005531,"byte_end":10005562,"line_start":1038,"line_end":1038,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10005567,"byte_end":10005570,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10005575,"byte_end":10005645,"line_start":1040,"line_end":1040,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10005650,"byte_end":10005657,"line_start":1041,"line_end":1041,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10006082,"byte_end":10006090,"line_start":1059,"line_end":1059,"column_start":12,"column_end":20},"name":"into_box","qualname":"<Owned<T>>::into_box","value":"pub fn into_box(Self) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a `Box`.","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a `Box`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10005819,"byte_end":10005863,"line_start":1048,"line_end":1048,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10005868,"byte_end":10005871,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10005876,"byte_end":10005890,"line_start":1050,"line_end":1050,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10005895,"byte_end":10005898,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10005903,"byte_end":10005910,"line_start":1052,"line_end":1052,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10005915,"byte_end":10005946,"line_start":1053,"line_end":1053,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10005951,"byte_end":10005954,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10005959,"byte_end":10005988,"line_start":1055,"line_end":1055,"column_start":5,"column_end":34}},{"value":"/ let b: Box<i32> = o.into_box();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10005993,"byte_end":10006028,"line_start":1056,"line_end":1056,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*b, 1234);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10006033,"byte_end":10006058,"line_start":1057,"line_end":1057,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10006063,"byte_end":10006070,"line_start":1058,"line_end":1058,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10006479,"byte_end":10006482,"line_start":1074,"line_end":1074,"column_start":12,"column_end":15},"name":"new","qualname":"<Owned<T>>::new","value":"pub fn new(T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10006249,"byte_end":10006330,"line_start":1065,"line_end":1065,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10006335,"byte_end":10006338,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10006343,"byte_end":10006357,"line_start":1067,"line_end":1067,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10006362,"byte_end":10006365,"line_start":1068,"line_end":1068,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10006370,"byte_end":10006377,"line_start":1069,"line_end":1069,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10006382,"byte_end":10006413,"line_start":1070,"line_end":1070,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10006418,"byte_end":10006421,"line_start":1071,"line_end":1071,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10006426,"byte_end":10006455,"line_start":1072,"line_end":1072,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10006460,"byte_end":10006467,"line_start":1073,"line_end":1073,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10006821,"byte_end":10006825,"line_start":1089,"line_end":1089,"column_start":12,"column_end":16},"name":"init","qualname":"<Owned<T>>::init","value":"pub fn init(T::Init) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10006583,"byte_end":10006664,"line_start":1080,"line_end":1080,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10006669,"byte_end":10006672,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10006677,"byte_end":10006691,"line_start":1082,"line_end":1082,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10006696,"byte_end":10006699,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10006704,"byte_end":10006711,"line_start":1084,"line_end":1084,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10006716,"byte_end":10006747,"line_start":1085,"line_end":1085,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10006752,"byte_end":10006755,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::<i32>::init(1234);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10006760,"byte_end":10006797,"line_start":1087,"line_end":1087,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10006802,"byte_end":10006809,"line_start":1088,"line_end":1088,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10007246,"byte_end":10007257,"line_start":1105,"line_end":1105,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<Owned<T>>::into_shared","value":"pub fn into_shared<'g>(Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a [`Shared`].","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a [`Shared`].","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10006917,"byte_end":10006966,"line_start":1093,"line_end":1093,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10006971,"byte_end":10006974,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10006979,"byte_end":10006993,"line_start":1095,"line_end":1095,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10006998,"byte_end":10007001,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10007006,"byte_end":10007013,"line_start":1097,"line_end":1097,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10007018,"byte_end":10007066,"line_start":1098,"line_end":1098,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10007071,"byte_end":10007074,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10007079,"byte_end":10007108,"line_start":1100,"line_end":1100,"column_start":5,"column_end":34}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10007113,"byte_end":10007143,"line_start":1101,"line_end":1101,"column_start":5,"column_end":35}},{"value":"/ let p = o.into_shared(guard);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10007148,"byte_end":10007181,"line_start":1102,"line_end":1102,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10007186,"byte_end":10007193,"line_start":1103,"line_end":1103,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10007198,"byte_end":10007234,"line_start":1104,"line_end":1104,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10007577,"byte_end":10007580,"line_start":1118,"line_end":1118,"column_start":12,"column_end":15},"name":"tag","qualname":"<Owned<T>>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10007369,"byte_end":10007415,"line_start":1109,"line_end":1109,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10007420,"byte_end":10007423,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10007428,"byte_end":10007442,"line_start":1111,"line_end":1111,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10007447,"byte_end":10007450,"line_start":1112,"line_end":1112,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10007455,"byte_end":10007462,"line_start":1113,"line_end":1113,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10007467,"byte_end":10007498,"line_start":1114,"line_end":1114,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10007503,"byte_end":10007506,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Owned::new(1234).tag(), 0);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10007511,"byte_end":10007553,"line_start":1116,"line_end":1116,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10007558,"byte_end":10007565,"line_start":1117,"line_end":1117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10008053,"byte_end":10008061,"line_start":1136,"line_end":1136,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Owned<T>>::with_tag","value":"pub fn with_tag(Self, usize) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10007676,"byte_end":10007766,"line_start":1123,"line_end":1123,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10007771,"byte_end":10007809,"line_start":1124,"line_end":1124,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10007814,"byte_end":10007817,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10007822,"byte_end":10007836,"line_start":1126,"line_end":1126,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10007841,"byte_end":10007844,"line_start":1127,"line_end":1127,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10007849,"byte_end":10007856,"line_start":1128,"line_end":1128,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10007861,"byte_end":10007892,"line_start":1129,"line_end":1129,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10007897,"byte_end":10007900,"line_start":1130,"line_end":1130,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(0u64);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10007905,"byte_end":10007934,"line_start":1131,"line_end":1131,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(o.tag(), 0);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10007939,"byte_end":10007966,"line_start":1132,"line_end":1132,"column_start":5,"column_end":32}},{"value":"/ let o = o.with_tag(2);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10007971,"byte_end":10007997,"line_start":1133,"line_end":1133,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(o.tag(), 2);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10008002,"byte_end":10008029,"line_start":1134,"line_end":1134,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10008034,"byte_end":10008041,"line_start":1135,"line_end":1135,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":257},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10010523,"byte_end":10010529,"line_start":1239,"line_end":1239,"column_start":12,"column_end":18},"name":"Shared","qualname":"::atomic::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261}],"decl_id":null,"docs":" A pointer to an object protected by the epoch GC.","sig":null,"attributes":[{"value":"/ A pointer to an object protected by the epoch GC.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10010244,"byte_end":10010297,"line_start":1233,"line_end":1233,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10010298,"byte_end":10010301,"line_start":1234,"line_end":1234,"column_start":1,"column_end":4}},{"value":"/ The pointer is valid for use only during the lifetime `'g`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10010302,"byte_end":10010365,"line_start":1235,"line_end":1235,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10010366,"byte_end":10010369,"line_start":1236,"line_end":1236,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10010370,"byte_end":10010468,"line_start":1237,"line_end":1237,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10010469,"byte_end":10010511,"line_start":1238,"line_end":1238,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10011700,"byte_end":10011706,"line_start":1288,"line_end":1288,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Shared>::as_raw","value":"pub fn as_raw(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a raw pointer (without the tag).","sig":null,"attributes":[{"value":"/ Converts the pointer to a raw pointer (without the tag).","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10011181,"byte_end":10011241,"line_start":1271,"line_end":1271,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10011246,"byte_end":10011249,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10011254,"byte_end":10011268,"line_start":1273,"line_end":1273,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10011273,"byte_end":10011276,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10011281,"byte_end":10011288,"line_start":1275,"line_end":1275,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10011293,"byte_end":10011349,"line_start":1276,"line_end":1276,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10011354,"byte_end":10011398,"line_start":1277,"line_end":1277,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10011403,"byte_end":10011406,"line_start":1278,"line_end":1278,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10011411,"byte_end":10011440,"line_start":1279,"line_end":1279,"column_start":5,"column_end":34}},{"value":"/ let raw = &*o as *const _;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10011445,"byte_end":10011475,"line_start":1280,"line_end":1280,"column_start":5,"column_end":35}},{"value":"/ let a = Atomic::from(o);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10011480,"byte_end":10011508,"line_start":1281,"line_end":1281,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10011513,"byte_end":10011516,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10011521,"byte_end":10011551,"line_start":1283,"line_end":1283,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10011556,"byte_end":10011590,"line_start":1284,"line_end":1284,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.as_raw(), raw);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10011595,"byte_end":10011627,"line_start":1285,"line_end":1285,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10011632,"byte_end":10011639,"line_start":1286,"line_end":1286,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10011644,"byte_end":10011688,"line_start":1287,"line_end":1287,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10012083,"byte_end":10012087,"line_start":1305,"line_end":1305,"column_start":12,"column_end":16},"name":"null","qualname":"<Shared>::null","value":"pub fn null() -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null pointer.","sig":null,"attributes":[{"value":"/ Returns a new null pointer.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10011867,"byte_end":10011898,"line_start":1295,"line_end":1295,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10011903,"byte_end":10011906,"line_start":1296,"line_end":1296,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10011911,"byte_end":10011925,"line_start":1297,"line_end":1297,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10011930,"byte_end":10011933,"line_start":1298,"line_end":1298,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10011938,"byte_end":10011945,"line_start":1299,"line_end":1299,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10011950,"byte_end":10011982,"line_start":1300,"line_end":1300,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10011987,"byte_end":10011990,"line_start":1301,"line_end":1301,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::<i32>::null();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10011995,"byte_end":10012029,"line_start":1302,"line_end":1302,"column_start":5,"column_end":39}},{"value":"/ assert!(p.is_null());","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10012034,"byte_end":10012059,"line_start":1303,"line_end":1303,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10012064,"byte_end":10012071,"line_start":1304,"line_end":1304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10012693,"byte_end":10012700,"line_start":1327,"line_end":1327,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Shared>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pointer is null.","sig":null,"attributes":[{"value":"/ Returns `true` if the pointer is null.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10012202,"byte_end":10012244,"line_start":1312,"line_end":1312,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10012249,"byte_end":10012252,"line_start":1313,"line_end":1313,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10012257,"byte_end":10012271,"line_start":1314,"line_end":1314,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10012276,"byte_end":10012279,"line_start":1315,"line_end":1315,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10012284,"byte_end":10012291,"line_start":1316,"line_end":1316,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10012296,"byte_end":10012352,"line_start":1317,"line_end":1317,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10012357,"byte_end":10012401,"line_start":1318,"line_end":1318,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10012406,"byte_end":10012409,"line_start":1319,"line_end":1319,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::null();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10012414,"byte_end":10012441,"line_start":1320,"line_end":1320,"column_start":5,"column_end":32}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10012446,"byte_end":10012476,"line_start":1321,"line_end":1321,"column_start":5,"column_end":35}},{"value":"/ assert!(a.load(SeqCst, guard).is_null());","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10012481,"byte_end":10012526,"line_start":1322,"line_end":1322,"column_start":5,"column_end":50}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10012531,"byte_end":10012569,"line_start":1323,"line_end":1323,"column_start":5,"column_end":43}},{"value":"/ assert!(!a.load(SeqCst, guard).is_null());","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10012574,"byte_end":10012620,"line_start":1324,"line_end":1324,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10012625,"byte_end":10012632,"line_start":1325,"line_end":1325,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10012637,"byte_end":10012681,"line_start":1326,"line_end":1326,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10014074,"byte_end":10014079,"line_start":1365,"line_end":1365,"column_start":19,"column_end":24},"name":"deref","qualname":"<Shared>::deref","value":"pub unsafe fn deref(&Self) -> &'g T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10012800,"byte_end":10012829,"line_start":1332,"line_end":1332,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10012834,"byte_end":10012837,"line_start":1333,"line_end":1333,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10012842,"byte_end":10012920,"line_start":1334,"line_end":1334,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10012925,"byte_end":10012928,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10012933,"byte_end":10012945,"line_start":1336,"line_end":1336,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10012950,"byte_end":10012953,"line_start":1337,"line_end":1337,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10012958,"byte_end":10013043,"line_start":1338,"line_end":1338,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10013048,"byte_end":10013051,"line_start":1339,"line_end":1339,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10013056,"byte_end":10013147,"line_start":1340,"line_end":1340,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10013152,"byte_end":10013201,"line_start":1341,"line_end":1341,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10013206,"byte_end":10013209,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10013214,"byte_end":10013286,"line_start":1343,"line_end":1343,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10013291,"byte_end":10013366,"line_start":1344,"line_end":1344,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10013371,"byte_end":10013374,"line_start":1345,"line_end":1345,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10013379,"byte_end":10013472,"line_start":1346,"line_end":1346,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10013477,"byte_end":10013570,"line_start":1347,"line_end":1347,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10013575,"byte_end":10013613,"line_start":1348,"line_end":1348,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10013618,"byte_end":10013621,"line_start":1349,"line_end":1349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10013626,"byte_end":10013640,"line_start":1350,"line_end":1350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10013645,"byte_end":10013648,"line_start":1351,"line_end":1351,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10013653,"byte_end":10013660,"line_start":1352,"line_end":1352,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10013665,"byte_end":10013714,"line_start":1353,"line_end":1353,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10013719,"byte_end":10013763,"line_start":1354,"line_end":1354,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10013768,"byte_end":10013771,"line_start":1355,"line_end":1355,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10013776,"byte_end":10013806,"line_start":1356,"line_end":1356,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10013811,"byte_end":10013841,"line_start":1357,"line_end":1357,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10013846,"byte_end":10013880,"line_start":1358,"line_end":1358,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10013885,"byte_end":10013897,"line_start":1359,"line_end":1359,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &1234);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10013902,"byte_end":10013939,"line_start":1360,"line_end":1360,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10013944,"byte_end":10013949,"line_start":1361,"line_end":1361,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10013954,"byte_end":10013961,"line_start":1362,"line_end":1362,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10013966,"byte_end":10014010,"line_start":1363,"line_end":1363,"column_start":5,"column_end":49}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10014015,"byte_end":10014055,"line_start":1364,"line_end":1364,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10015390,"byte_end":10015399,"line_start":1407,"line_end":1407,"column_start":19,"column_end":28},"name":"deref_mut","qualname":"<Shared>::deref_mut","value":"pub unsafe fn deref_mut(&mut Self) -> &'g mut T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10014185,"byte_end":10014214,"line_start":1370,"line_end":1370,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10014219,"byte_end":10014222,"line_start":1371,"line_end":1371,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10014227,"byte_end":10014313,"line_start":1372,"line_end":1372,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10014318,"byte_end":10014321,"line_start":1373,"line_end":1373,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10014326,"byte_end":10014338,"line_start":1374,"line_end":1374,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10014343,"byte_end":10014346,"line_start":1375,"line_end":1375,"column_start":5,"column_end":8}},{"value":"/ * There is no guarantee that there are no more threads attempting to read/write from/to the","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10014351,"byte_end":10014446,"line_start":1376,"line_end":1376,"column_start":5,"column_end":100}},{"value":"/   actual object at the same time.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10014451,"byte_end":10014488,"line_start":1377,"line_end":1377,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10014493,"byte_end":10014496,"line_start":1378,"line_end":1378,"column_start":5,"column_end":8}},{"value":"/   The user must know that there are no concurrent accesses towards the object itself.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10014501,"byte_end":10014590,"line_start":1379,"line_end":1379,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10014595,"byte_end":10014598,"line_start":1380,"line_end":1380,"column_start":5,"column_end":8}},{"value":"/ * Other than the above, all safety concerns of `deref()` applies here.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10014603,"byte_end":10014677,"line_start":1381,"line_end":1381,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10014682,"byte_end":10014685,"line_start":1382,"line_end":1382,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10014690,"byte_end":10014704,"line_start":1383,"line_end":1383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10014709,"byte_end":10014712,"line_start":1384,"line_end":1384,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10014717,"byte_end":10014724,"line_start":1385,"line_end":1385,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10014729,"byte_end":10014778,"line_start":1386,"line_end":1386,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10014783,"byte_end":10014827,"line_start":1387,"line_end":1387,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10014832,"byte_end":10014835,"line_start":1388,"line_end":1388,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(vec![1, 2, 3, 4]);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10014840,"byte_end":10014882,"line_start":1389,"line_end":1389,"column_start":5,"column_end":47}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10014887,"byte_end":10014917,"line_start":1390,"line_end":1390,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10014922,"byte_end":10014925,"line_start":1391,"line_end":1391,"column_start":5,"column_end":8}},{"value":"/ let mut p = a.load(SeqCst, guard);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10014930,"byte_end":10014968,"line_start":1392,"line_end":1392,"column_start":5,"column_end":43}},{"value":"/ unsafe {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10014973,"byte_end":10014985,"line_start":1393,"line_end":1393,"column_start":5,"column_end":17}},{"value":"/     assert!(!p.is_null());","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10014990,"byte_end":10015020,"line_start":1394,"line_end":1394,"column_start":5,"column_end":35}},{"value":"/     let b = p.deref_mut();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10015025,"byte_end":10015055,"line_start":1395,"line_end":1395,"column_start":5,"column_end":35}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4]);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10015060,"byte_end":10015101,"line_start":1396,"line_end":1396,"column_start":5,"column_end":46}},{"value":"/     b.push(5);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10015106,"byte_end":10015124,"line_start":1397,"line_end":1397,"column_start":5,"column_end":23}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10015129,"byte_end":10015173,"line_start":1398,"line_end":1398,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10015178,"byte_end":10015183,"line_start":1399,"line_end":1399,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10015188,"byte_end":10015191,"line_start":1400,"line_end":1400,"column_start":5,"column_end":8}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10015196,"byte_end":10015230,"line_start":1401,"line_end":1401,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10015235,"byte_end":10015247,"line_start":1402,"line_end":1402,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10015252,"byte_end":10015304,"line_start":1403,"line_end":1403,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10015309,"byte_end":10015314,"line_start":1404,"line_end":1404,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10015319,"byte_end":10015326,"line_start":1405,"line_end":1405,"column_start":5,"column_end":12}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10015331,"byte_end":10015371,"line_start":1406,"line_end":1406,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10016781,"byte_end":10016787,"line_start":1444,"line_end":1444,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Shared>::as_ref","value":"pub unsafe fn as_ref(&Self) -> Option<&'g T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a reference.","sig":null,"attributes":[{"value":"/ Converts the pointer to a reference.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10015517,"byte_end":10015557,"line_start":1412,"line_end":1412,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10015562,"byte_end":10015565,"line_start":1413,"line_end":1413,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the pointer is null, or else a reference to the object wrapped in `Some`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10015570,"byte_end":10015665,"line_start":1414,"line_end":1414,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10015670,"byte_end":10015673,"line_start":1415,"line_end":1415,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10015678,"byte_end":10015690,"line_start":1416,"line_end":1416,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10015695,"byte_end":10015698,"line_start":1417,"line_end":1417,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10015703,"byte_end":10015788,"line_start":1418,"line_end":1418,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10015793,"byte_end":10015796,"line_start":1419,"line_end":1419,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10015801,"byte_end":10015892,"line_start":1420,"line_end":1420,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10015897,"byte_end":10015946,"line_start":1421,"line_end":1421,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10015951,"byte_end":10015954,"line_start":1422,"line_end":1422,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10015959,"byte_end":10016031,"line_start":1423,"line_end":1423,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10016036,"byte_end":10016111,"line_start":1424,"line_end":1424,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10016116,"byte_end":10016119,"line_start":1425,"line_end":1425,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10016124,"byte_end":10016217,"line_start":1426,"line_end":1426,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10016222,"byte_end":10016315,"line_start":1427,"line_end":1427,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10016320,"byte_end":10016358,"line_start":1428,"line_end":1428,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10016363,"byte_end":10016366,"line_start":1429,"line_end":1429,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10016371,"byte_end":10016385,"line_start":1430,"line_end":1430,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10016390,"byte_end":10016393,"line_start":1431,"line_end":1431,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10016398,"byte_end":10016405,"line_start":1432,"line_end":1432,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10016410,"byte_end":10016459,"line_start":1433,"line_end":1433,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10016464,"byte_end":10016508,"line_start":1434,"line_end":1434,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10016513,"byte_end":10016516,"line_start":1435,"line_end":1435,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10016521,"byte_end":10016551,"line_start":1436,"line_end":1436,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10016556,"byte_end":10016586,"line_start":1437,"line_end":1437,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10016591,"byte_end":10016625,"line_start":1438,"line_end":1438,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10016630,"byte_end":10016642,"line_start":1439,"line_end":1439,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.as_ref(), Some(&1234));","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10016647,"byte_end":10016691,"line_start":1440,"line_end":1440,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10016696,"byte_end":10016701,"line_start":1441,"line_end":1441,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10016706,"byte_end":10016713,"line_start":1442,"line_end":1442,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10016718,"byte_end":10016762,"line_start":1443,"line_end":1443,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10017647,"byte_end":10017657,"line_start":1477,"line_end":1477,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Shared>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10016977,"byte_end":10017012,"line_start":1453,"line_end":1453,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10017017,"byte_end":10017020,"line_start":1454,"line_end":1454,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10017025,"byte_end":10017037,"line_start":1455,"line_end":1455,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10017042,"byte_end":10017045,"line_start":1456,"line_end":1456,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10017050,"byte_end":10017109,"line_start":1457,"line_end":1457,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10017114,"byte_end":10017117,"line_start":1458,"line_end":1458,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10017122,"byte_end":10017134,"line_start":1459,"line_end":1459,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10017139,"byte_end":10017142,"line_start":1460,"line_end":1460,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10017147,"byte_end":10017234,"line_start":1461,"line_end":1461,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10017239,"byte_end":10017272,"line_start":1462,"line_end":1462,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10017277,"byte_end":10017280,"line_start":1463,"line_end":1463,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10017285,"byte_end":10017299,"line_start":1464,"line_end":1464,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10017304,"byte_end":10017307,"line_start":1465,"line_end":1465,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10017312,"byte_end":10017319,"line_start":1466,"line_end":1466,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10017324,"byte_end":10017373,"line_start":1467,"line_end":1467,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10017378,"byte_end":10017422,"line_start":1468,"line_end":1468,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10017427,"byte_end":10017430,"line_start":1469,"line_end":1469,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10017435,"byte_end":10017465,"line_start":1470,"line_end":1470,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10017470,"byte_end":10017482,"line_start":1471,"line_end":1471,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10017487,"byte_end":10017529,"line_start":1472,"line_end":1472,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10017534,"byte_end":10017572,"line_start":1473,"line_end":1473,"column_start":5,"column_end":43}},{"value":"/     drop(p.into_owned());","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10017577,"byte_end":10017606,"line_start":1474,"line_end":1474,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10017611,"byte_end":10017616,"line_start":1475,"line_end":1475,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10017621,"byte_end":10017628,"line_start":1476,"line_end":1476,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10018266,"byte_end":10018269,"line_start":1496,"line_end":1496,"column_start":12,"column_end":15},"name":"tag","qualname":"<Shared>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10017809,"byte_end":10017855,"line_start":1482,"line_end":1482,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10017860,"byte_end":10017863,"line_start":1483,"line_end":1483,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10017868,"byte_end":10017882,"line_start":1484,"line_end":1484,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10017887,"byte_end":10017890,"line_start":1485,"line_end":1485,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10017895,"byte_end":10017902,"line_start":1486,"line_end":1486,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10017907,"byte_end":10017963,"line_start":1487,"line_end":1487,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10017968,"byte_end":10018012,"line_start":1488,"line_end":1488,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10018017,"byte_end":10018020,"line_start":1489,"line_end":1489,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<u64>::from(Owned::new(0u64).with_tag(2));","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10018025,"byte_end":10018087,"line_start":1490,"line_end":1490,"column_start":5,"column_end":67}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10018092,"byte_end":10018122,"line_start":1491,"line_end":1491,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10018127,"byte_end":10018161,"line_start":1492,"line_end":1492,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.tag(), 2);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10018166,"byte_end":10018193,"line_start":1493,"line_end":1493,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10018198,"byte_end":10018205,"line_start":1494,"line_end":1494,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10018210,"byte_end":10018254,"line_start":1495,"line_end":1495,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10018992,"byte_end":10019000,"line_start":1520,"line_end":1520,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Shared>::with_tag","value":"pub fn with_tag(&Self, usize) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10018365,"byte_end":10018455,"line_start":1501,"line_end":1501,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10018460,"byte_end":10018498,"line_start":1502,"line_end":1502,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10018503,"byte_end":10018506,"line_start":1503,"line_end":1503,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10018511,"byte_end":10018525,"line_start":1504,"line_end":1504,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10018530,"byte_end":10018533,"line_start":1505,"line_end":1505,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10018538,"byte_end":10018545,"line_start":1506,"line_end":1506,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10018550,"byte_end":10018599,"line_start":1507,"line_end":1507,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10018604,"byte_end":10018648,"line_start":1508,"line_end":1508,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10018653,"byte_end":10018656,"line_start":1509,"line_end":1509,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(0u64);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10018661,"byte_end":10018691,"line_start":1510,"line_end":1510,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10018696,"byte_end":10018726,"line_start":1511,"line_end":1511,"column_start":5,"column_end":35}},{"value":"/ let p1 = a.load(SeqCst, guard);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10018731,"byte_end":10018766,"line_start":1512,"line_end":1512,"column_start":5,"column_end":40}},{"value":"/ let p2 = p1.with_tag(2);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10018771,"byte_end":10018799,"line_start":1513,"line_end":1513,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10018804,"byte_end":10018807,"line_start":1514,"line_end":1514,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p1.tag(), 0);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10018812,"byte_end":10018840,"line_start":1515,"line_end":1515,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p2.tag(), 2);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10018845,"byte_end":10018873,"line_start":1516,"line_end":1516,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p1.as_raw(), p2.as_raw());","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10018878,"byte_end":10018919,"line_start":1517,"line_end":1517,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10018924,"byte_end":10018931,"line_start":1518,"line_end":1518,"column_start":5,"column_end":12}},{"value":"allow(clippy :: trivially_copy_pass_by_ref)","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10018936,"byte_end":10018980,"line_start":1519,"line_end":1519,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":318},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10021929,"byte_end":10021938,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Collector","qualname":"::collector::Collector","value":"Collector {  }","parent":null,"children":[{"krate":0,"index":319}],"decl_id":null,"docs":" An epoch-based garbage collector.\n","sig":null,"attributes":[{"value":"/ An epoch-based garbage collector.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10021880,"byte_end":10021917,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10022245,"byte_end":10022248,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Collector>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collector.\n","sig":null,"attributes":[{"value":"/ Creates a new collector.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10022205,"byte_end":10022233,"line_start":38,"line_end":38,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10022353,"byte_end":10022361,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"register","qualname":"<Collector>::register","value":"pub fn register(&Self) -> LocalHandle","parent":null,"children":[],"decl_id":null,"docs":" Registers a new handle for the collector.\n","sig":null,"attributes":[{"value":"/ Registers a new handle for the collector.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10022296,"byte_end":10022341,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":334},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10023029,"byte_end":10023040,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"LocalHandle","qualname":"::collector::LocalHandle","value":"LocalHandle {  }","parent":null,"children":[{"krate":0,"index":335}],"decl_id":null,"docs":" A handle to a garbage collector.\n","sig":null,"attributes":[{"value":"/ A handle to a garbage collector.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10022981,"byte_end":10023017,"line_start":72,"line_end":72,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10023151,"byte_end":10023154,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"pin","qualname":"<LocalHandle>::pin","value":"pub fn pin(&Self) -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the handle.\n","sig":null,"attributes":[{"value":"/ Pins the handle.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10023105,"byte_end":10023125,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10023130,"byte_end":10023139,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10023292,"byte_end":10023301,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"is_pinned","qualname":"<LocalHandle>::is_pinned","value":"pub fn is_pinned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the handle is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the handle is pinned.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10023223,"byte_end":10023266,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10023271,"byte_end":10023280,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10023457,"byte_end":10023466,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"collector","qualname":"<LocalHandle>::collector","value":"pub fn collector(&Self) -> &Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this handle.\n","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this handle.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10023375,"byte_end":10023431,"line_start":90,"line_end":90,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10023436,"byte_end":10023445,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":392},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10044207,"byte_end":10044212,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"Guard","qualname":"::guard::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":393}],"decl_id":null,"docs":" A guard that keeps the current thread pinned.","sig":null,"attributes":[{"value":"/ A guard that keeps the current thread pinned.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10042491,"byte_end":10042540,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10042541,"byte_end":10042544,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10042545,"byte_end":10042558,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10042559,"byte_end":10042562,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The current thread is pinned by calling [`pin`], which returns a new guard:","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10042563,"byte_end":10042642,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10042643,"byte_end":10042646,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10042647,"byte_end":10042654,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10042655,"byte_end":10042688,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10042689,"byte_end":10042692,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // It is often convenient to prefix a call to `pin` with a `&` in order to create a reference.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10042693,"byte_end":10042791,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/ // This is not really necessary, but makes passing references to the guard a bit easier.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10042792,"byte_end":10042884,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10042885,"byte_end":10042915,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10042916,"byte_end":10042923,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10042924,"byte_end":10042927,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ When a guard gets dropped, the current thread is automatically unpinned.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10042928,"byte_end":10043004,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043005,"byte_end":10043008,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Pointers on the stack","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043009,"byte_end":10043036,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043037,"byte_end":10043040,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Having a guard allows us to create pointers on the stack to heap-allocated objects.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043041,"byte_end":10043128,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/ For example:","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043129,"byte_end":10043145,"line_start":30,"line_end":30,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043146,"byte_end":10043149,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043150,"byte_end":10043157,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043158,"byte_end":10043207,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043208,"byte_end":10043252,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043253,"byte_end":10043256,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Create a heap-allocated number.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043257,"byte_end":10043295,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043296,"byte_end":10043325,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043326,"byte_end":10043329,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Pin the current thread.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043330,"byte_end":10043360,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043361,"byte_end":10043391,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043392,"byte_end":10043395,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Load the heap-allocated object and create pointer `p` on the stack.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043396,"byte_end":10043470,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043471,"byte_end":10043505,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043506,"byte_end":10043509,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Dereference the pointer and print the value:","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043510,"byte_end":10043561,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/ if let Some(num) = unsafe { p.as_ref() } {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043562,"byte_end":10043608,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/     println!(\"The number is {}.\", num);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043609,"byte_end":10043652,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043653,"byte_end":10043658,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043659,"byte_end":10043666,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043667,"byte_end":10043670,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Multiple guards","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043671,"byte_end":10043692,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043693,"byte_end":10043696,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Pinning is reentrant and it is perfectly legal to create multiple guards. In that case, the","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043697,"byte_end":10043792,"line_start":53,"line_end":53,"column_start":1,"column_end":96}},{"value":"/ thread will actually be pinned only when the first guard is created and unpinned when the last","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043793,"byte_end":10043891,"line_start":54,"line_end":54,"column_start":1,"column_end":99}},{"value":"/ one is dropped:","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043892,"byte_end":10043911,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043912,"byte_end":10043915,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043916,"byte_end":10043923,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043924,"byte_end":10043957,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043958,"byte_end":10043961,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043962,"byte_end":10043992,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10043993,"byte_end":10044023,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10044024,"byte_end":10044056,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/ drop(guard1);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10044057,"byte_end":10044074,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10044075,"byte_end":10044107,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ drop(guard2);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10044108,"byte_end":10044125,"line_start":65,"line_end":65,"column_start":1,"column_end":18}},{"value":"/ assert!(!epoch::is_pinned());","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10044126,"byte_end":10044159,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10044160,"byte_end":10044167,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10044168,"byte_end":10044171,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [`pin`]: super::pin","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10044172,"byte_end":10044195,"line_start":69,"line_end":69,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10045187,"byte_end":10045192,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"defer","qualname":"<Guard>::defer","value":"pub fn defer<F, R>(&Self, F) where F: FnOnce() -> R, F: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10044271,"byte_end":10044360,"line_start":75,"line_end":75,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10044365,"byte_end":10044390,"line_start":76,"line_end":76,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10044395,"byte_end":10044398,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10044403,"byte_end":10044496,"line_start":78,"line_end":78,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10044501,"byte_end":10044589,"line_start":79,"line_end":79,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10044594,"byte_end":10044684,"line_start":80,"line_end":80,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10044689,"byte_end":10044729,"line_start":81,"line_end":81,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10044734,"byte_end":10044737,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10044742,"byte_end":10044832,"line_start":83,"line_end":83,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10044837,"byte_end":10044928,"line_start":84,"line_end":84,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10044933,"byte_end":10045020,"line_start":85,"line_end":85,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10045025,"byte_end":10045045,"line_start":86,"line_end":86,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10045050,"byte_end":10045053,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10045058,"byte_end":10045145,"line_start":88,"line_end":88,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10045150,"byte_end":10045175,"line_start":89,"line_end":89,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10049492,"byte_end":10049507,"line_start":188,"line_end":188,"column_start":19,"column_end":34},"name":"defer_unchecked","qualname":"<Guard>::defer_unchecked","value":"pub unsafe fn defer_unchecked<F, R>(&Self, F) where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10045356,"byte_end":10045445,"line_start":100,"line_end":100,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10045450,"byte_end":10045475,"line_start":101,"line_end":101,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10045480,"byte_end":10045483,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10045488,"byte_end":10045581,"line_start":103,"line_end":103,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10045586,"byte_end":10045674,"line_start":104,"line_end":104,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10045679,"byte_end":10045769,"line_start":105,"line_end":105,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10045774,"byte_end":10045814,"line_start":106,"line_end":106,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10045819,"byte_end":10045822,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10045827,"byte_end":10045917,"line_start":108,"line_end":108,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10045922,"byte_end":10046013,"line_start":109,"line_end":109,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10046018,"byte_end":10046105,"line_start":110,"line_end":110,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10046110,"byte_end":10046130,"line_start":111,"line_end":111,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10046135,"byte_end":10046138,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10046143,"byte_end":10046230,"line_start":113,"line_end":113,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10046235,"byte_end":10046260,"line_start":114,"line_end":114,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10046265,"byte_end":10046268,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10046273,"byte_end":10046285,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10046290,"byte_end":10046293,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The given function must not hold reference onto the stack. It is highly recommended that","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10046298,"byte_end":10046390,"line_start":118,"line_end":118,"column_start":5,"column_end":97}},{"value":"/ the passed function is **always** marked with `move` in order to prevent accidental","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10046395,"byte_end":10046482,"line_start":119,"line_end":119,"column_start":5,"column_end":92}},{"value":"/ borrows.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10046487,"byte_end":10046499,"line_start":120,"line_end":120,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10046504,"byte_end":10046507,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10046512,"byte_end":10046519,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10046524,"byte_end":10046557,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10046562,"byte_end":10046565,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10046570,"byte_end":10046600,"line_start":125,"line_end":125,"column_start":5,"column_end":35}},{"value":"/ let message = \"Hello!\";","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10046605,"byte_end":10046632,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/ unsafe {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10046637,"byte_end":10046649,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/     // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10046654,"byte_end":10046729,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/     guard.defer_unchecked(move || {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10046734,"byte_end":10046773,"line_start":129,"line_end":129,"column_start":5,"column_end":44}},{"value":"/         println!(\"{}\", message);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10046778,"byte_end":10046814,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10046819,"byte_end":10046830,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10046835,"byte_end":10046840,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10046845,"byte_end":10046852,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10046857,"byte_end":10046860,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute `f`, so anything accessed by","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10046865,"byte_end":10046959,"line_start":135,"line_end":135,"column_start":5,"column_end":99}},{"value":"/ the closure must be `Send`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10046964,"byte_end":10046995,"line_start":136,"line_end":136,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10047000,"byte_end":10047003,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `F: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10047008,"byte_end":10047103,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ `F: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10047108,"byte_end":10047200,"line_start":139,"line_end":139,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10047205,"byte_end":10047294,"line_start":140,"line_end":140,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10047299,"byte_end":10047302,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10047307,"byte_end":10047320,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10047325,"byte_end":10047378,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ guard.defer_unchecked(move || shared.into_owned()); // `Shared` is not `Send`!","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10047383,"byte_end":10047465,"line_start":144,"line_end":144,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10047470,"byte_end":10047477,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10047482,"byte_end":10047485,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the deferred function,","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10047490,"byte_end":10047583,"line_start":147,"line_end":147,"column_start":5,"column_end":98}},{"value":"/ because it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10047588,"byte_end":10047683,"line_start":148,"line_end":148,"column_start":5,"column_end":100}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10047688,"byte_end":10047748,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10047753,"byte_end":10047756,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10047761,"byte_end":10047775,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10047780,"byte_end":10047783,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10047788,"byte_end":10047874,"line_start":153,"line_end":153,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10047879,"byte_end":10047973,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10047978,"byte_end":10048074,"line_start":155,"line_end":155,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10048079,"byte_end":10048171,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10048176,"byte_end":10048232,"line_start":157,"line_end":157,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10048237,"byte_end":10048240,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10048245,"byte_end":10048252,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10048257,"byte_end":10048313,"line_start":160,"line_end":160,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10048318,"byte_end":10048362,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10048367,"byte_end":10048370,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10048375,"byte_end":10048406,"line_start":163,"line_end":163,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10048411,"byte_end":10048414,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10048419,"byte_end":10048496,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10048501,"byte_end":10048532,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10048537,"byte_end":10048540,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10048545,"byte_end":10048575,"line_start":168,"line_end":168,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10048580,"byte_end":10048610,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10048615,"byte_end":10048618,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10048623,"byte_end":10048700,"line_start":171,"line_end":171,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10048705,"byte_end":10048777,"line_start":172,"line_end":172,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10048782,"byte_end":10048785,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10048790,"byte_end":10048811,"line_start":174,"line_end":174,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10048816,"byte_end":10048876,"line_start":175,"line_end":175,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10048881,"byte_end":10048963,"line_start":176,"line_end":176,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10048968,"byte_end":10048984,"line_start":177,"line_end":177,"column_start":5,"column_end":21}},{"value":"/         // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10048989,"byte_end":10049068,"line_start":178,"line_end":178,"column_start":5,"column_end":84}},{"value":"/         guard.defer_unchecked(move || {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10049073,"byte_end":10049116,"line_start":179,"line_end":179,"column_start":5,"column_end":48}},{"value":"/             println!(\"{} is now being deallocated.\", p.deref());","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10049121,"byte_end":10049189,"line_start":180,"line_end":180,"column_start":5,"column_end":73}},{"value":"/             // Now we have unique access to the object pointed to by `p` and can turn it","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10049194,"byte_end":10049286,"line_start":181,"line_end":181,"column_start":5,"column_end":97}},{"value":"/             // into an `Owned`. Dropping the `Owned` will deallocate the object.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10049291,"byte_end":10049375,"line_start":182,"line_end":182,"column_start":5,"column_end":89}},{"value":"/             drop(p.into_owned());","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10049380,"byte_end":10049417,"line_start":183,"line_end":183,"column_start":5,"column_end":42}},{"value":"/         });","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10049422,"byte_end":10049437,"line_start":184,"line_end":184,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10049442,"byte_end":10049451,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10049456,"byte_end":10049461,"line_start":186,"line_end":186,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10049466,"byte_end":10049473,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10053094,"byte_end":10053107,"line_start":267,"line_end":267,"column_start":19,"column_end":32},"name":"defer_destroy","qualname":"<Guard>::defer_destroy","value":"pub unsafe fn defer_destroy<T>(&Self, Shared<, T>)","parent":null,"children":[],"decl_id":null,"docs":" Stores a destructor for an object so that it can be deallocated and dropped at some point\n after all currently pinned threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a destructor for an object so that it can be deallocated and dropped at some point","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10049746,"byte_end":10049839,"line_start":199,"line_end":199,"column_start":5,"column_end":98}},{"value":"/ after all currently pinned threads get unpinned.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10049844,"byte_end":10049896,"line_start":200,"line_end":200,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10049901,"byte_end":10049904,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This method first stores the destructor into the thread-local (or handle-local) cache. If","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10049909,"byte_end":10050002,"line_start":202,"line_end":202,"column_start":5,"column_end":98}},{"value":"/ this cache becomes full, some destructors are moved into the global cache. At the same","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10050007,"byte_end":10050097,"line_start":203,"line_end":203,"column_start":5,"column_end":95}},{"value":"/ time, some destructors from both local and global caches may get executed in order to","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10050102,"byte_end":10050191,"line_start":204,"line_end":204,"column_start":5,"column_end":94}},{"value":"/ incrementally clean up the caches as they fill up.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10050196,"byte_end":10050250,"line_start":205,"line_end":205,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10050255,"byte_end":10050258,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly the destructor will be executed. The only guarantee is","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10050263,"byte_end":10050356,"line_start":207,"line_end":207,"column_start":5,"column_end":98}},{"value":"/ that it won't be executed until all currently pinned threads get unpinned. In theory, the","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10050361,"byte_end":10050454,"line_start":208,"line_end":208,"column_start":5,"column_end":98}},{"value":"/ destructor might never run, but the epoch-based garbage collection will make an effort to","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10050459,"byte_end":10050552,"line_start":209,"line_end":209,"column_start":5,"column_end":98}},{"value":"/ execute it reasonably soon.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10050557,"byte_end":10050588,"line_start":210,"line_end":210,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10050593,"byte_end":10050596,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the destructor will simply be","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10050601,"byte_end":10050690,"line_start":212,"line_end":212,"column_start":5,"column_end":94}},{"value":"/ executed immediately.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10050695,"byte_end":10050720,"line_start":213,"line_end":213,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10050725,"byte_end":10050728,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10050733,"byte_end":10050745,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10050750,"byte_end":10050753,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The object must not be reachable by other threads anymore, otherwise it might be still in","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10050758,"byte_end":10050851,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/ use when the destructor runs.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10050856,"byte_end":10050889,"line_start":218,"line_end":218,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10050894,"byte_end":10050897,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute the destructor, so the object","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10050902,"byte_end":10050997,"line_start":220,"line_end":220,"column_start":5,"column_end":100}},{"value":"/ must be sendable to other threads.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10051002,"byte_end":10051040,"line_start":221,"line_end":221,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10051045,"byte_end":10051048,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `T: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10051053,"byte_end":10051148,"line_start":223,"line_end":223,"column_start":5,"column_end":100}},{"value":"/ `T: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10051153,"byte_end":10051245,"line_start":224,"line_end":224,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10051250,"byte_end":10051339,"line_start":225,"line_end":225,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10051344,"byte_end":10051347,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10051352,"byte_end":10051365,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10051370,"byte_end":10051423,"line_start":228,"line_end":228,"column_start":5,"column_end":58}},{"value":"/ guard.defer_destroy(shared); // `Shared` is not `Send`!","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10051428,"byte_end":10051487,"line_start":229,"line_end":229,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10051492,"byte_end":10051499,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10051504,"byte_end":10051507,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the destructor, because","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10051512,"byte_end":10051606,"line_start":232,"line_end":232,"column_start":5,"column_end":99}},{"value":"/ it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10051611,"byte_end":10051698,"line_start":233,"line_end":233,"column_start":5,"column_end":92}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10051703,"byte_end":10051763,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10051768,"byte_end":10051771,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10051776,"byte_end":10051790,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10051795,"byte_end":10051798,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10051803,"byte_end":10051889,"line_start":238,"line_end":238,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10051894,"byte_end":10051988,"line_start":239,"line_end":239,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10051993,"byte_end":10052089,"line_start":240,"line_end":240,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10052094,"byte_end":10052186,"line_start":241,"line_end":241,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10052191,"byte_end":10052247,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10052252,"byte_end":10052255,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10052260,"byte_end":10052267,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10052272,"byte_end":10052328,"line_start":245,"line_end":245,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10052333,"byte_end":10052377,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10052382,"byte_end":10052385,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10052390,"byte_end":10052421,"line_start":248,"line_end":248,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10052426,"byte_end":10052429,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10052434,"byte_end":10052511,"line_start":250,"line_end":250,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10052516,"byte_end":10052547,"line_start":251,"line_end":251,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10052552,"byte_end":10052555,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10052560,"byte_end":10052590,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10052595,"byte_end":10052625,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10052630,"byte_end":10052633,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10052638,"byte_end":10052715,"line_start":256,"line_end":256,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10052720,"byte_end":10052792,"line_start":257,"line_end":257,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10052797,"byte_end":10052800,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10052805,"byte_end":10052826,"line_start":259,"line_end":259,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10052831,"byte_end":10052891,"line_start":260,"line_end":260,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10052896,"byte_end":10052978,"line_start":261,"line_end":261,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10052983,"byte_end":10052999,"line_start":262,"line_end":262,"column_start":5,"column_end":21}},{"value":"/         guard.defer_destroy(p);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10053004,"byte_end":10053039,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10053044,"byte_end":10053053,"line_start":264,"line_end":264,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10053058,"byte_end":10053063,"line_start":265,"line_end":265,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10053068,"byte_end":10053075,"line_start":266,"line_end":266,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10053992,"byte_end":10053997,"line_start":291,"line_end":291,"column_start":12,"column_end":17},"name":"flush","qualname":"<Guard>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears up the thread-local cache of deferred functions by executing them or moving into the\n global cache.","sig":null,"attributes":[{"value":"/ Clears up the thread-local cache of deferred functions by executing them or moving into the","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10053207,"byte_end":10053302,"line_start":271,"line_end":271,"column_start":5,"column_end":100}},{"value":"/ global cache.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10053307,"byte_end":10053324,"line_start":272,"line_end":272,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10053329,"byte_end":10053332,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Call this method after deferring execution of a function if you want to get it executed as","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10053337,"byte_end":10053431,"line_start":274,"line_end":274,"column_start":5,"column_end":99}},{"value":"/ soon as possible. Flushing will make sure it is residing in in the global cache, so that","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10053436,"byte_end":10053528,"line_start":275,"line_end":275,"column_start":5,"column_end":97}},{"value":"/ any thread has a chance of taking the function and executing it.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10053533,"byte_end":10053601,"line_start":276,"line_end":276,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10053606,"byte_end":10053609,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, it is a no-op (nothing happens).","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10053614,"byte_end":10053706,"line_start":278,"line_end":278,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10053711,"byte_end":10053714,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10053719,"byte_end":10053733,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10053738,"byte_end":10053741,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10053746,"byte_end":10053753,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10053758,"byte_end":10053791,"line_start":283,"line_end":283,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10053796,"byte_end":10053799,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10053804,"byte_end":10053834,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/ guard.defer(move || {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10053839,"byte_end":10053864,"line_start":286,"line_end":286,"column_start":5,"column_end":30}},{"value":"/     println!(\"This better be printed as soon as possible!\");","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10053869,"byte_end":10053933,"line_start":287,"line_end":287,"column_start":5,"column_end":69}},{"value":"/ });","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10053938,"byte_end":10053945,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ guard.flush();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10053950,"byte_end":10053968,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10053973,"byte_end":10053980,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10055159,"byte_end":10055164,"line_start":324,"line_end":324,"column_start":12,"column_end":17},"name":"repin","qualname":"<Guard>::repin","value":"pub fn repin(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Unpins and then immediately re-pins the thread.","sig":null,"attributes":[{"value":"/ Unpins and then immediately re-pins the thread.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10054121,"byte_end":10054172,"line_start":297,"line_end":297,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10054177,"byte_end":10054180,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you don't want delay the advancement of the global epoch by","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10054185,"byte_end":10054275,"line_start":299,"line_end":299,"column_start":5,"column_end":95}},{"value":"/ holding an old epoch. For safety, you should not maintain any guard-based reference across","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10054280,"byte_end":10054374,"line_start":300,"line_end":300,"column_start":5,"column_end":99}},{"value":"/ the call (the latter is enforced by `&mut self`). The thread will only be repinned if this","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10054379,"byte_end":10054473,"line_start":301,"line_end":301,"column_start":5,"column_end":99}},{"value":"/ is the only active guard for the current thread.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10054478,"byte_end":10054530,"line_start":302,"line_end":302,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10054535,"byte_end":10054538,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the call will be just no-op.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10054543,"byte_end":10054636,"line_start":304,"line_end":304,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10054641,"byte_end":10054644,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10054649,"byte_end":10054663,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10054668,"byte_end":10054671,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10054676,"byte_end":10054683,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10054688,"byte_end":10054737,"line_start":309,"line_end":309,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10054742,"byte_end":10054786,"line_start":310,"line_end":310,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10054791,"byte_end":10054794,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10054799,"byte_end":10054828,"line_start":312,"line_end":312,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10054833,"byte_end":10054866,"line_start":313,"line_end":313,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10054871,"byte_end":10054876,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10054881,"byte_end":10054920,"line_start":315,"line_end":315,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10054925,"byte_end":10054979,"line_start":316,"line_end":316,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10054984,"byte_end":10054989,"line_start":317,"line_end":317,"column_start":5,"column_end":10}},{"value":"/ guard.repin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10054994,"byte_end":10055012,"line_start":318,"line_end":318,"column_start":5,"column_end":23}},{"value":"/ {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10055017,"byte_end":10055022,"line_start":319,"line_end":319,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10055027,"byte_end":10055066,"line_start":320,"line_end":320,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10055071,"byte_end":10055125,"line_start":321,"line_end":321,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10055130,"byte_end":10055135,"line_start":322,"line_end":322,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10055140,"byte_end":10055147,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10056491,"byte_end":10056502,"line_start":360,"line_end":360,"column_start":12,"column_end":23},"name":"repin_after","qualname":"<Guard>::repin_after","value":"pub fn repin_after<F, R>(&mut Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unpins the thread, executes the given function and then re-pins the thread.","sig":null,"attributes":[{"value":"/ Temporarily unpins the thread, executes the given function and then re-pins the thread.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10055288,"byte_end":10055379,"line_start":330,"line_end":330,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10055384,"byte_end":10055387,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to perform a long-running operation (e.g. sleeping)","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10055392,"byte_end":10055483,"line_start":332,"line_end":332,"column_start":5,"column_end":96}},{"value":"/ and don't need to maintain any guard-based reference across the call (the latter is enforced","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10055488,"byte_end":10055584,"line_start":333,"line_end":333,"column_start":5,"column_end":101}},{"value":"/ by `&mut self`). The thread will only be unpinned if this is the only active guard for the","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10055589,"byte_end":10055683,"line_start":334,"line_end":334,"column_start":5,"column_end":99}},{"value":"/ current thread.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10055688,"byte_end":10055707,"line_start":335,"line_end":335,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10055712,"byte_end":10055715,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the passed function is called","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10055720,"byte_end":10055814,"line_start":337,"line_end":337,"column_start":5,"column_end":99}},{"value":"/ directly without unpinning the thread.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10055819,"byte_end":10055861,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10055866,"byte_end":10055869,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10055874,"byte_end":10055888,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10055893,"byte_end":10055896,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10055901,"byte_end":10055908,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10055913,"byte_end":10055962,"line_start":343,"line_end":343,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10055967,"byte_end":10056011,"line_start":344,"line_end":344,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10056016,"byte_end":10056036,"line_start":345,"line_end":345,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10056041,"byte_end":10056069,"line_start":346,"line_end":346,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10056074,"byte_end":10056077,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10056082,"byte_end":10056111,"line_start":348,"line_end":348,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10056116,"byte_end":10056149,"line_start":349,"line_end":349,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10056154,"byte_end":10056159,"line_start":350,"line_end":350,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10056164,"byte_end":10056203,"line_start":351,"line_end":351,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10056208,"byte_end":10056262,"line_start":352,"line_end":352,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10056267,"byte_end":10056272,"line_start":353,"line_end":353,"column_start":5,"column_end":10}},{"value":"/ guard.repin_after(|| thread::sleep(Duration::from_millis(50)));","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10056277,"byte_end":10056344,"line_start":354,"line_end":354,"column_start":5,"column_end":72}},{"value":"/ {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10056349,"byte_end":10056354,"line_start":355,"line_end":355,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10056359,"byte_end":10056398,"line_start":356,"line_end":356,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10056403,"byte_end":10056457,"line_start":357,"line_end":357,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10056462,"byte_end":10056467,"line_start":358,"line_end":358,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10056472,"byte_end":10056479,"line_start":359,"line_end":359,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10057648,"byte_end":10057657,"line_start":398,"line_end":398,"column_start":12,"column_end":21},"name":"collector","qualname":"<Guard>::collector","value":"pub fn collector(&Self) -> Option<&Collector>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this guard.","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this guard.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10057107,"byte_end":10057162,"line_start":382,"line_end":382,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10057167,"byte_end":10057170,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to ensure that all guards used with","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10057175,"byte_end":10057250,"line_start":384,"line_end":384,"column_start":5,"column_end":80}},{"value":"/ a data structure come from the same collector.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10057255,"byte_end":10057305,"line_start":385,"line_end":385,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10057310,"byte_end":10057313,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then `None` is returned.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10057318,"byte_end":10057402,"line_start":387,"line_end":387,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10057407,"byte_end":10057410,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10057415,"byte_end":10057429,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10057434,"byte_end":10057437,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10057442,"byte_end":10057449,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10057454,"byte_end":10057487,"line_start":392,"line_end":392,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10057492,"byte_end":10057495,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10057500,"byte_end":10057530,"line_start":394,"line_end":394,"column_start":5,"column_end":35}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10057535,"byte_end":10057565,"line_start":395,"line_end":395,"column_start":5,"column_end":35}},{"value":"/ assert!(guard1.collector() == guard2.collector());","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10057570,"byte_end":10057624,"line_start":396,"line_end":396,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10057629,"byte_end":10057636,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":416},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060956,"byte_end":10060967,"line_start":504,"line_end":504,"column_start":15,"column_end":26},"name":"unprotected","qualname":"::guard::unprotected","value":"pub unsafe fn unprotected() -> &'static Guard","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","sig":null,"attributes":[{"value":"/ Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10058067,"byte_end":10058154,"line_start":418,"line_end":418,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10058155,"byte_end":10058158,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ This guard should be used in special occasions only. Note that it doesn't actually keep any","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10058159,"byte_end":10058254,"line_start":420,"line_end":420,"column_start":1,"column_end":96}},{"value":"/ thread pinned - it's just a fake guard that allows loading from [`Atomic`]s unsafely.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10058255,"byte_end":10058344,"line_start":421,"line_end":421,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10058345,"byte_end":10058348,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ Note that calling [`defer`] with a dummy guard will not defer the function - it will just","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10058349,"byte_end":10058442,"line_start":423,"line_end":423,"column_start":1,"column_end":94}},{"value":"/ execute the function immediately.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10058443,"byte_end":10058480,"line_start":424,"line_end":424,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10058481,"byte_end":10058484,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ If necessary, it's possible to create more dummy guards by cloning: `unprotected().clone()`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10058485,"byte_end":10058581,"line_start":426,"line_end":426,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10058582,"byte_end":10058585,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10058586,"byte_end":10058598,"line_start":428,"line_end":428,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10058599,"byte_end":10058602,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ Loading and dereferencing data from an [`Atomic`] using this guard is safe only if the","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10058603,"byte_end":10058693,"line_start":430,"line_end":430,"column_start":1,"column_end":91}},{"value":"/ [`Atomic`] is not being concurrently modified by other threads.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10058694,"byte_end":10058761,"line_start":431,"line_end":431,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10058762,"byte_end":10058765,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10058766,"byte_end":10058780,"line_start":433,"line_end":433,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10058781,"byte_end":10058784,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10058785,"byte_end":10058792,"line_start":435,"line_end":435,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10058793,"byte_end":10058842,"line_start":436,"line_end":436,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10058843,"byte_end":10058888,"line_start":437,"line_end":437,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10058889,"byte_end":10058892,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ let a = Atomic::new(7);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10058893,"byte_end":10058920,"line_start":439,"line_end":439,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10058921,"byte_end":10058924,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10058925,"byte_end":10058937,"line_start":441,"line_end":441,"column_start":1,"column_end":13}},{"value":"/     // Load `a` without pinning the current thread.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10058938,"byte_end":10058993,"line_start":442,"line_end":442,"column_start":1,"column_end":56}},{"value":"/     a.load(Relaxed, epoch::unprotected());","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10058994,"byte_end":10059040,"line_start":443,"line_end":443,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10059041,"byte_end":10059044,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/     // It's possible to create more dummy guards by calling `clone()`.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10059045,"byte_end":10059119,"line_start":445,"line_end":445,"column_start":1,"column_end":75}},{"value":"/     let dummy = &epoch::unprotected().clone();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10059120,"byte_end":10059170,"line_start":446,"line_end":446,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10059171,"byte_end":10059174,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/     dummy.defer(move || {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10059175,"byte_end":10059204,"line_start":448,"line_end":448,"column_start":1,"column_end":30}},{"value":"/         println!(\"This gets executed immediately.\");","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10059205,"byte_end":10059261,"line_start":449,"line_end":449,"column_start":1,"column_end":57}},{"value":"/     });","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10059262,"byte_end":10059273,"line_start":450,"line_end":450,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10059274,"byte_end":10059277,"line_start":451,"line_end":451,"column_start":1,"column_end":4}},{"value":"/     // Dropping `dummy` doesn't affect the current thread - it's just a noop.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10059278,"byte_end":10059359,"line_start":452,"line_end":452,"column_start":1,"column_end":82}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10059360,"byte_end":10059365,"line_start":453,"line_end":453,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10059366,"byte_end":10059373,"line_start":454,"line_end":454,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10059374,"byte_end":10059377,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ The most common use of this function is when constructing or destructing a data structure.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10059378,"byte_end":10059472,"line_start":456,"line_end":456,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10059473,"byte_end":10059476,"line_start":457,"line_end":457,"column_start":1,"column_end":4}},{"value":"/ For example, we can use a dummy guard in the destructor of a Treiber stack because at that","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10059477,"byte_end":10059571,"line_start":458,"line_end":458,"column_start":1,"column_end":95}},{"value":"/ point no other thread could concurrently modify the [`Atomic`]s we are accessing.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10059572,"byte_end":10059657,"line_start":459,"line_end":459,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10059658,"byte_end":10059661,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ If we were to actually pin the current thread during destruction, that would just unnecessarily","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10059662,"byte_end":10059761,"line_start":461,"line_end":461,"column_start":1,"column_end":100}},{"value":"/ delay garbage collection and incur some performance cost, so in cases like these `unprotected`","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10059762,"byte_end":10059860,"line_start":462,"line_end":462,"column_start":1,"column_end":99}},{"value":"/ is very helpful.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10059861,"byte_end":10059881,"line_start":463,"line_end":463,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10059882,"byte_end":10059885,"line_start":464,"line_end":464,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10059886,"byte_end":10059893,"line_start":465,"line_end":465,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10059894,"byte_end":10059943,"line_start":466,"line_end":466,"column_start":1,"column_end":50}},{"value":"/ use std::mem::ManuallyDrop;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10059944,"byte_end":10059975,"line_start":467,"line_end":467,"column_start":1,"column_end":32}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10059976,"byte_end":10060021,"line_start":468,"line_end":468,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060022,"byte_end":10060025,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ struct Stack<T> {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060026,"byte_end":10060047,"line_start":470,"line_end":470,"column_start":1,"column_end":22}},{"value":"/     head: Atomic<Node<T>>,","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060048,"byte_end":10060078,"line_start":471,"line_end":471,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060079,"byte_end":10060084,"line_start":472,"line_end":472,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060085,"byte_end":10060088,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ struct Node<T> {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060089,"byte_end":10060109,"line_start":474,"line_end":474,"column_start":1,"column_end":21}},{"value":"/     data: ManuallyDrop<T>,","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060110,"byte_end":10060140,"line_start":475,"line_end":475,"column_start":1,"column_end":31}},{"value":"/     next: Atomic<Node<T>>,","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060141,"byte_end":10060171,"line_start":476,"line_end":476,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060172,"byte_end":10060177,"line_start":477,"line_end":477,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060178,"byte_end":10060181,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/ impl<T> Drop for Stack<T> {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060182,"byte_end":10060213,"line_start":479,"line_end":479,"column_start":1,"column_end":32}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060214,"byte_end":10060242,"line_start":480,"line_end":480,"column_start":1,"column_end":29}},{"value":"/         unsafe {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060243,"byte_end":10060263,"line_start":481,"line_end":481,"column_start":1,"column_end":21}},{"value":"/             // Unprotected load.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060264,"byte_end":10060300,"line_start":482,"line_end":482,"column_start":1,"column_end":37}},{"value":"/             let mut node = self.head.load(Relaxed, epoch::unprotected());","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060301,"byte_end":10060378,"line_start":483,"line_end":483,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060379,"byte_end":10060382,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/             while let Some(n) = node.as_ref() {","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060383,"byte_end":10060434,"line_start":485,"line_end":485,"column_start":1,"column_end":52}},{"value":"/                 // Unprotected load.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060435,"byte_end":10060475,"line_start":486,"line_end":486,"column_start":1,"column_end":41}},{"value":"/                 let next = n.next.load(Relaxed, epoch::unprotected());","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060476,"byte_end":10060550,"line_start":487,"line_end":487,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060551,"byte_end":10060554,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/                 // Take ownership of the node, then drop its data and deallocate it.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060555,"byte_end":10060643,"line_start":489,"line_end":489,"column_start":1,"column_end":89}},{"value":"/                 let mut o = node.into_owned();","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060644,"byte_end":10060694,"line_start":490,"line_end":490,"column_start":1,"column_end":51}},{"value":"/                 ManuallyDrop::drop(&mut o.data);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060695,"byte_end":10060747,"line_start":491,"line_end":491,"column_start":1,"column_end":53}},{"value":"/                 drop(o);","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060748,"byte_end":10060776,"line_start":492,"line_end":492,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060777,"byte_end":10060780,"line_start":493,"line_end":493,"column_start":1,"column_end":4}},{"value":"/                 node = next;","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060781,"byte_end":10060813,"line_start":494,"line_end":494,"column_start":1,"column_end":33}},{"value":"/             }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060814,"byte_end":10060831,"line_start":495,"line_end":495,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060832,"byte_end":10060845,"line_start":496,"line_end":496,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060846,"byte_end":10060855,"line_start":497,"line_end":497,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060856,"byte_end":10060861,"line_start":498,"line_end":498,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060862,"byte_end":10060869,"line_start":499,"line_end":499,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060870,"byte_end":10060873,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: super::Atomic","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060874,"byte_end":10060903,"line_start":501,"line_end":501,"column_start":1,"column_end":30}},{"value":"/ [`defer`]: Guard::defer","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060904,"byte_end":10060931,"line_start":502,"line_end":502,"column_start":1,"column_end":28}},{"value":"inline","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10060932,"byte_end":10060941,"line_start":503,"line_end":503,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":686},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/default.rs","byte_start":10116959,"byte_end":10116962,"line_start":23,"line_end":23,"column_start":8,"column_end":11},"name":"pin","qualname":"::default::pin","value":"pub fn pin() -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the current thread.\n","sig":null,"attributes":[{"value":"/ Pins the current thread.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/default.rs","byte_start":10116913,"byte_end":10116941,"line_start":21,"line_end":21,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/default.rs","byte_start":10116942,"byte_end":10116951,"line_start":22,"line_end":22,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":688},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/default.rs","byte_start":10117087,"byte_end":10117096,"line_start":29,"line_end":29,"column_start":8,"column_end":17},"name":"is_pinned","qualname":"::default::is_pinned","value":"pub fn is_pinned() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the current thread is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the current thread is pinned.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/default.rs","byte_start":10117018,"byte_end":10117069,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/default.rs","byte_start":10117070,"byte_end":10117079,"line_start":28,"line_end":28,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":690},"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/default.rs","byte_start":10117206,"byte_end":10117223,"line_start":34,"line_end":34,"column_start":8,"column_end":25},"name":"default_collector","qualname":"::default::default_collector","value":"pub fn default_collector() -> &'static Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the default global collector.\n","sig":null,"attributes":[{"value":"/ Returns the default global collector.","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/default.rs","byte_start":10117157,"byte_end":10117198,"line_start":33,"line_end":33,"column_start":1,"column_end":42}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":5471,"byte_end":5481,"line_start":122,"line_end":122,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":12}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9971223,"byte_end":9971243,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9972670,"byte_end":9972678,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9976452,"byte_end":9976453,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9979672,"byte_end":9979678,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9979743,"byte_end":9979749,"line_start":297,"line_end":297,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9979765,"byte_end":9979771,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9980104,"byte_end":9980110,"line_start":314,"line_end":314,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":148},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":160},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10001073,"byte_end":10001079,"line_start":874,"line_end":874,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10001426,"byte_end":10001432,"line_start":886,"line_end":886,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10001720,"byte_end":10001726,"line_start":894,"line_end":894,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10002073,"byte_end":10002079,"line_start":905,"line_end":905,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10002191,"byte_end":10002197,"line_start":911,"line_end":911,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10002592,"byte_end":10002598,"line_start":928,"line_end":928,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10002701,"byte_end":10002707,"line_start":934,"line_end":934,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10002827,"byte_end":10002833,"line_start":940,"line_end":940,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10003182,"byte_end":10003188,"line_start":955,"line_end":955,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10004401,"byte_end":10004406,"line_start":996,"line_end":996,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":209},{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10004913,"byte_end":10004918,"line_start":1019,"line_end":1019,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10006568,"byte_end":10006573,"line_start":1079,"line_end":1079,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":221},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10008243,"byte_end":10008248,"line_start":1142,"line_end":1142,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10008438,"byte_end":10008443,"line_start":1151,"line_end":1151,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10008721,"byte_end":10008726,"line_start":1162,"line_end":1162,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10008867,"byte_end":10008872,"line_start":1168,"line_end":1168,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10009065,"byte_end":10009070,"line_start":1177,"line_end":1177,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10009236,"byte_end":10009241,"line_start":1184,"line_end":1184,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10009331,"byte_end":10009336,"line_start":1190,"line_end":1190,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10009809,"byte_end":10009814,"line_start":1209,"line_end":1209,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10009924,"byte_end":10009929,"line_start":1215,"line_end":1215,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10010051,"byte_end":10010056,"line_start":1221,"line_end":1221,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10010162,"byte_end":10010167,"line_start":1227,"line_end":1227,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10010668,"byte_end":10010674,"line_start":1244,"line_end":1244,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10010848,"byte_end":10010854,"line_start":1253,"line_end":1253,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10010909,"byte_end":10010915,"line_start":1255,"line_end":1255,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10011161,"byte_end":10011167,"line_start":1270,"line_end":1270,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10011847,"byte_end":10011853,"line_start":1294,"line_end":1294,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10019145,"byte_end":10019151,"line_start":1525,"line_end":1525,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10019714,"byte_end":10019720,"line_start":1547,"line_end":1547,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10019847,"byte_end":10019853,"line_start":1553,"line_end":1553,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10019927,"byte_end":10019933,"line_start":1555,"line_end":1555,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10020098,"byte_end":10020104,"line_start":1561,"line_end":1561,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10020252,"byte_end":10020258,"line_start":1567,"line_end":1567,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10020561,"byte_end":10020567,"line_start":1578,"line_end":1578,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10020758,"byte_end":10020764,"line_start":1584,"line_end":1584,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10022001,"byte_end":10022010,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10022035,"byte_end":10022044,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10022066,"byte_end":10022075,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10022189,"byte_end":10022198,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10022440,"byte_end":10022449,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10022647,"byte_end":10022656,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10022784,"byte_end":10022793,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10022967,"byte_end":10022976,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10023087,"byte_end":10023098,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10023558,"byte_end":10023569,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10023716,"byte_end":10023727,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/deferred.rs","byte_start":10034457,"byte_end":10034465,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/deferred.rs","byte_start":10034589,"byte_end":10034597,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/epoch.rs","byte_start":10038559,"byte_end":10038564,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/epoch.rs","byte_start":10040368,"byte_end":10040379,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10044259,"byte_end":10044264,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":395},{"krate":0,"index":398},{"krate":0,"index":402},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10057782,"byte_end":10057787,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10057957,"byte_end":10057962,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10061246,"byte_end":10061258,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":10064331,"byte_end":10064334,"line_start":71,"line_end":71,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":10064344,"byte_end":10064347,"line_start":73,"line_end":73,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":10065296,"byte_end":10065299,"line_start":108,"line_end":108,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":10068573,"byte_end":10068576,"line_start":193,"line_end":193,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":10068975,"byte_end":10068978,"line_start":205,"line_end":205,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":10069405,"byte_end":10069414,"line_start":223,"line_end":223,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":10069424,"byte_end":10069433,"line_start":225,"line_end":225,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":10070115,"byte_end":10070121,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":10075245,"byte_end":10075250,"line_start":387,"line_end":387,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":503},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":10083975,"byte_end":10083980,"line_start":611,"line_end":611,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/list.rs","byte_start":10090045,"byte_end":10090050,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/list.rs","byte_start":10090186,"byte_end":10090191,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/list.rs","byte_start":10090704,"byte_end":10090708,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/list.rs","byte_start":10093291,"byte_end":10093295,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/list.rs","byte_start":10093827,"byte_end":10093831,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/queue.rs","byte_start":10103652,"byte_end":10103657,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/queue.rs","byte_start":10103694,"byte_end":10103699,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/queue.rs","byte_start":10103715,"byte_end":10103720,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":594},{"krate":0,"index":598},{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/queue.rs","byte_start":10109640,"byte_end":10109645,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/lib.rs","byte_start":5471,"byte_end":5481,"line_start":122,"line_end":122,"column_start":17,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":23},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9971223,"byte_end":9971243,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":57},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9972670,"byte_end":9972678,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":2,"index":34883},"to":{"krate":0,"index":67}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9976452,"byte_end":9976453,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":94},"to":{"krate":0,"index":84}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9979672,"byte_end":9979678,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":118},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9979743,"byte_end":9979749,"line_start":297,"line_end":297,"column_start":59,"column_end":65},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":118},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9979765,"byte_end":9979771,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":9980104,"byte_end":9980110,"line_start":314,"line_end":314,"column_start":29,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10001073,"byte_end":10001079,"line_start":874,"line_end":874,"column_start":44,"column_end":50},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":118},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10001426,"byte_end":10001432,"line_start":886,"line_end":886,"column_start":46,"column_end":52},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":118},"to":{"krate":2,"index":6968}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10001720,"byte_end":10001726,"line_start":894,"line_end":894,"column_start":39,"column_end":45},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":118},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10002073,"byte_end":10002079,"line_start":905,"line_end":905,"column_start":41,"column_end":47},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":118},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10002191,"byte_end":10002197,"line_start":911,"line_end":911,"column_start":48,"column_end":54},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":118},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10002592,"byte_end":10002598,"line_start":928,"line_end":928,"column_start":26,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":118},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10002701,"byte_end":10002707,"line_start":934,"line_end":934,"column_start":21,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":118},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10002827,"byte_end":10002833,"line_start":940,"line_end":940,"column_start":57,"column_end":63},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":118},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10003182,"byte_end":10003188,"line_start":955,"line_end":955,"column_start":28,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":118},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10004401,"byte_end":10004406,"line_start":996,"line_end":996,"column_start":44,"column_end":49},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":203},"to":{"krate":0,"index":199}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10004913,"byte_end":10004918,"line_start":1019,"line_end":1019,"column_start":9,"column_end":14},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10006568,"byte_end":10006573,"line_start":1079,"line_end":1079,"column_start":29,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10008243,"byte_end":10008248,"line_start":1142,"line_end":1142,"column_start":38,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":203},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10008438,"byte_end":10008443,"line_start":1151,"line_end":1151,"column_start":44,"column_end":49},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":203},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10008721,"byte_end":10008726,"line_start":1162,"line_end":1162,"column_start":26,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":203},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10008867,"byte_end":10008872,"line_start":1168,"line_end":1168,"column_start":39,"column_end":44},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":203},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10009065,"byte_end":10009070,"line_start":1177,"line_end":1177,"column_start":42,"column_end":47},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":203},"to":{"krate":2,"index":2294}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10009236,"byte_end":10009241,"line_start":1184,"line_end":1184,"column_start":21,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":203},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10009331,"byte_end":10009336,"line_start":1190,"line_end":1190,"column_start":26,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":203},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10009809,"byte_end":10009814,"line_start":1209,"line_end":1209,"column_start":43,"column_end":48},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":203},"to":{"krate":2,"index":1748}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10009924,"byte_end":10009929,"line_start":1215,"line_end":1215,"column_start":46,"column_end":51},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":203},"to":{"krate":2,"index":1751}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10010051,"byte_end":10010056,"line_start":1221,"line_end":1221,"column_start":42,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":203},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10010162,"byte_end":10010167,"line_start":1227,"line_end":1227,"column_start":42,"column_end":47},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":203},"to":{"krate":2,"index":1991}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10010668,"byte_end":10010674,"line_start":1244,"line_end":1244,"column_start":39,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":257},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10010848,"byte_end":10010854,"line_start":1253,"line_end":1253,"column_start":38,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":257},"to":{"krate":2,"index":2091}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10010909,"byte_end":10010915,"line_start":1255,"line_end":1255,"column_start":44,"column_end":50},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":257},"to":{"krate":0,"index":199}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10011161,"byte_end":10011167,"line_start":1270,"line_end":1270,"column_start":13,"column_end":19},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10011847,"byte_end":10011853,"line_start":1294,"line_end":1294,"column_start":33,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10019145,"byte_end":10019151,"line_start":1525,"line_end":1525,"column_start":28,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":257},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10019714,"byte_end":10019720,"line_start":1547,"line_end":1547,"column_start":62,"column_end":68},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":257},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10019847,"byte_end":10019853,"line_start":1553,"line_end":1553,"column_start":36,"column_end":42},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":257},"to":{"krate":2,"index":1803}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10019927,"byte_end":10019933,"line_start":1555,"line_end":1555,"column_start":63,"column_end":69},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":257},"to":{"krate":2,"index":1841}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10020098,"byte_end":10020104,"line_start":1561,"line_end":1561,"column_start":37,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":257},"to":{"krate":2,"index":1830}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10020252,"byte_end":10020258,"line_start":1567,"line_end":1567,"column_start":44,"column_end":50},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":257},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10020561,"byte_end":10020567,"line_start":1578,"line_end":1578,"column_start":46,"column_end":52},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":257},"to":{"krate":2,"index":6968}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/atomic.rs","byte_start":10020758,"byte_end":10020764,"line_start":1584,"line_end":1584,"column_start":41,"column_end":47},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":257},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10022001,"byte_end":10022010,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":318},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10022035,"byte_end":10022044,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":318},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10022066,"byte_end":10022075,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":318},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10022189,"byte_end":10022198,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10022440,"byte_end":10022449,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":318},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10022647,"byte_end":10022656,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":318},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10022784,"byte_end":10022793,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":318},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10022967,"byte_end":10022976,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":318},"to":{"krate":2,"index":1803}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10023087,"byte_end":10023098,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10023558,"byte_end":10023569,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":334},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/collector.rs","byte_start":10023716,"byte_end":10023727,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":334},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/deferred.rs","byte_start":10034457,"byte_end":10034465,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":355},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/deferred.rs","byte_start":10034589,"byte_end":10034597,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/epoch.rs","byte_start":10038559,"byte_end":10038564,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/epoch.rs","byte_start":10040368,"byte_end":10040379,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":636},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10044259,"byte_end":10044264,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10057782,"byte_end":10057787,"line_start":403,"line_end":403,"column_start":15,"column_end":20},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":392},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10057957,"byte_end":10057962,"line_start":412,"line_end":412,"column_start":21,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":392},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/guard.rs","byte_start":10061246,"byte_end":10061258,"line_start":509,"line_end":509,"column_start":26,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":417},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":10064331,"byte_end":10064334,"line_start":71,"line_end":71,"column_start":22,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":456},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":10064344,"byte_end":10064347,"line_start":73,"line_end":73,"column_start":6,"column_end":9},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":10065296,"byte_end":10065299,"line_start":108,"line_end":108,"column_start":18,"column_end":21},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":456},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":10068573,"byte_end":10068576,"line_start":193,"line_end":193,"column_start":15,"column_end":18},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":456},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":10068975,"byte_end":10068978,"line_start":205,"line_end":205,"column_start":21,"column_end":24},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":456},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":10069405,"byte_end":10069414,"line_start":223,"line_end":223,"column_start":22,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":643},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":10069424,"byte_end":10069433,"line_start":225,"line_end":225,"column_start":6,"column_end":15},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":10070115,"byte_end":10070121,"line_start":246,"line_end":246,"column_start":6,"column_end":12},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":10075245,"byte_end":10075250,"line_start":387,"line_end":387,"column_start":6,"column_end":11},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/internal.rs","byte_start":10083975,"byte_end":10083980,"line_start":611,"line_end":611,"column_start":27,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":486},"to":{"krate":0,"index":529}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/list.rs","byte_start":10090045,"byte_end":10090050,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":650},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/list.rs","byte_start":10090186,"byte_end":10090191,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":650},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/list.rs","byte_start":10090704,"byte_end":10090708,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/list.rs","byte_start":10093291,"byte_end":10093295,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":654},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/list.rs","byte_start":10093827,"byte_end":10093831,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":534},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/queue.rs","byte_start":10103652,"byte_end":10103657,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":671},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/queue.rs","byte_start":10103694,"byte_end":10103699,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":671},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/queue.rs","byte_start":10103715,"byte_end":10103720,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/andrew/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.6/src/sync/queue.rs","byte_start":10109640,"byte_end":10109645,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":671},"to":{"krate":2,"index":2305}}]}